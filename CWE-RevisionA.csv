CWE ID,CWE Name,Weakness Abstraction,Status,Description,Extended Description,Related Weaknesses,Weakness Ordinalities,Applicable Platforms,Background Details,Alternate Terms,Modes Of Introduction,Common Consequences,Detection Methods,Potential Mitigations,Observed Examples,Functional Areas,Affected Resources,Taxonomy Mappings,Notes,Type
287,Improper Authentication,Class,Draft,"When an actor claims to have a given identity, the product does not prove or insufficiently proves that the claim is correct.",,NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:284 VIEW ID:1340 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Often,,"TERM - authentification DESCRIPTION - An alternate term is authentification, which appears to be most commonly used by people from non-English-speaking countries. TERM - AuthN DESCRIPTION - AuthN is typically used as an abbreviation of authentication with",PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability SCOPE - Access Control IMPACT - Read Application Data IMPACT - Gain Privileges or Assume Identity IMPACT - Execute Unauthorized Code or Commands NOTE - This weakness can lead to the exposure o,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis is useful for detecting certain types of authentication. A tool may be able to analyze related configuration files, such as .htaccess in Apache web servers, or detect the usage of ",PHASE - Architecture and Design STRATEGY - Libraries or Frameworks DESCRIPTION - Use an authentication framework or library such as the OWASP ESAPI Authentication feature.,"REFERENCE - CVE-2022-35248 DESCRIPTION - Chat application skips validation when Central Authentication Service (CAS) is enabled, effectively removing the second factor from two-factor authentication LINK - https://www.cve.org/CVERecord?id=CVE-2022-35248",Authentication,,TAXONOMY NAME - PLOVER:ENTRY NAME:Authentication Error TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A7:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Au,"TYPE - Relationship NOTE - This can be resultant from SQL injection vulnerabilities and other issues.  TYPE - Maintenance NOTE - The Taxonomy_Mappings to ISA/IEC 62443 were added in CWE 4.10, but they are still under review and might change in future CWE ",Research Concept
330,Use of Insufficiently Random Values,Class,Stable,The product uses insufficiently random numbers or values in a security context that depends on unpredictable numbers.,"When product generates predictable values in a context requiring unpredictability, it may be possible for an attacker to guess the next value that will be generated, and use this guess to impersonate another user or access sensitive information.",NATURE:ChildOf:CWE ID:693 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:804 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined,"Computers are deterministic machines, and as such are unable to produce true randomness. Pseudo-Random Number Generators (PRNGs) approximate randomness algorithmically, starting with a seed from which subsequent values are calculated. There are two types ",,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,"SCOPE - Confidentiality SCOPE - Other IMPACT - Other NOTE - When a protection mechanism relies on random values to restrict access to a sensitive resource, such as a session ID or a seed for generating a cryptographic key, then the resource being protecte","METHOD - Black Box DESCRIPTION - Use monitoring tools that examine the software's process as it interacts with the operating system and the network. This technique is useful in cases when source code is unavailable, if the software was not developed by yo","PHASE - Architecture and Design DESCRIPTION - Use a well-vetted algorithm that is currently considered to be strong by experts in the field, and select well-tested implementations with adequate length seeds. In general, if a pseudo-random number generator",REFERENCE - CVE-2021-3692 DESCRIPTION - PHP framework uses mt_rand() function (Marsenne Twister) when generating tokens LINK - https://www.cve.org/CVERecord?id=CVE-2021-3692  REFERENCE - CVE-2020-7010 DESCRIPTION - Cloud application on Kubernetes generate,"Cryptography,Authentication,Session Management",,TAXONOMY NAME - PLOVER:ENTRY NAME:Randomness and Predictability TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Insecure Randomness TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A2:ENTRY NAME:Broken Access Control:MAPPING FIT:CWE More Specific TAXONOMY NAM,"TYPE - Relationship NOTE - This can be primary to many other weaknesses such as cryptographic errors, authentication errors, symlink following, information leaks, and others.  TYPE - Maintenance NOTE - As of CWE 4.3, CWE-330 and its descendants are being ",Research Concept
208,Observable Timing Discrepancy,Base,Incomplete,"Two separate operations in a product require different amounts of time to complete, in a way that is observable to an actor and reveals security-relevant information about the state of the product, such as whether a particular operation was successful or ","In security-relevant contexts, even small variations in timing can be exploited by attackers to indirectly infer certain details about the product's internal operations. For example, in some cryptographic algorithms, attackers can use timing differences t",NATURE:ChildOf:CWE ID:203 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:385 VIEW ID:1000 NATURE:CanPrecede:CWE ID:327 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic. PHASE - Implementation PHASE - Operation,SCOPE - Confidentiality SCOPE - Access Control IMPACT - Read Application Data IMPACT - Bypass Protection Mechanism,,,"REFERENCE - CVE-2019-10071 DESCRIPTION - Java-oriented framework compares HMAC signatures using String.equals() instead of a constant-time algorithm, causing timing discrepancies LINK - https://www.cve.org/CVERecord?id=CVE-2019-10071  REFERENCE - CVE-2019","Cryptography,Authentication",,TAXONOMY NAME - PLOVER:ENTRY NAME:Timing discrepancy infoleak::,TYPE - Relationship NOTE - Often primary in cryptographic applications and algorithms.::,"Software Development,Research Concept"
325,Missing Cryptographic Step,Base,Draft,"The product does not implement a required step in a cryptographic algorithm, resulting in weaker encryption than advertised by the algorithm.",,NATURE:ChildOf:CWE ID:573 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:358 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined,,,"PHASE - Implementation: NOTE - Developers sometimes omit expensive (resource-intensive) steps in order to improve performance, especially in devices with limited memory or slower CPUs. This step may be taken under a mistaken impression that the step is un",SCOPE - Access Control IMPACT - Bypass Protection Mechanism  SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Application Data IMPACT - Modify Application Data  SCOPE - Accountability SCOPE - Non-Repudiation IMPACT - Hide Activities,,,REFERENCE - CVE-2001-1585 DESCRIPTION - Missing challenge-response step allows authentication bypass using public key. LINK - https://www.cve.org/CVERecord?id=CVE-2001-1585,Cryptography,,TAXONOMY NAME - PLOVER:ENTRY NAME:Missing Required Cryptographic Step TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A8:ENTRY NAME:Insecure Cryptographic Storage:MAPPING FIT:CWE More Specific TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A9:ENTRY NAME:Insecure,TYPE - Relationship NOTE - Overlaps incomplete/missing security check.  TYPE - Relationship NOTE - Can be resultant.::,"Hardware Development,Software Development,Research Concept"
407,Inefficient Algorithmic Complexity,Class,Incomplete,"An algorithm in a product has an inefficient worst-case computational complexity that may be detrimental to system performance and can be triggered by an attacker, typically using crafted manipulations that ensure that the worst case is being reached.",,NATURE:ChildOf:CWE ID:405 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,TERM - Quadratic Complexity DESCRIPTION - Used when the algorithmic complexity is related to the square of the number of inputs (N^2)::,PHASE - Architecture and Design PHASE - Implementation,"SCOPE - Availability IMPACT - DoS -  Resource Consumption (CPU) IMPACT - DoS -  Resource Consumption (Memory) IMPACT - DoS -  Resource Consumption (Other) NOTE - The typical consequence is CPU consumption, but memory consumption and consumption of other r",,,REFERENCE - CVE-2021-32617 DESCRIPTION - C++ library for image metadata has quadratic complexity issue with unnecessarily repetitive parsing each time an invalid character is encountered LINK - https://www.cve.org/CVERecord?id=CVE-2021-32617  REFERENCE -,Cryptography,,TAXONOMY NAME - PLOVER:ENTRY NAME:Algorithmic Complexity::,,Research Concept
1204,Generation of Weak Initialization Vector (IV),Base,Incomplete,"The product uses a cryptographic primitive that uses an Initialization Vector (IV), but the product does not generate IVs that are sufficiently unpredictable or unique according to the expected cryptographic requirements for that primitive.","By design, some cryptographic primitives (such as block ciphers) require that IVs must have certain properties for the uniqueness and/or unpredictability of an IV. Primitives may vary in how important these properties are. If these properties are not main",NATURE:ChildOf:CWE ID:330 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Confidentiality IMPACT - Read Application Data NOTE - If the IV is not properly initialized, data that is encrypted can be compromised and information about the data can be leaked. See [REF-1179].",,"PHASE - Implementation DESCRIPTION - Different cipher modes have different requirements for their IVs. When choosing and implementing a mode, it is important to understand those requirements in order to keep security guarantees intact. Generally, it is sa",REFERENCE - CVE-2020-1472 DESCRIPTION - ZeroLogon vulnerability - use of a static IV of all zeroes in AES-CFB8 mode LINK - https://www.cve.org/CVERecord?id=CVE-2020-1472  REFERENCE - CVE-2011-3389 DESCRIPTION - BEAST attack in SSL 3.0 / TLS 1.0. In CBC mo,Cryptography,,,"TYPE - Maintenance NOTE - As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, randomness is used heavily. However, within cryptography, entropy is distinct, typically i","Software Development,Research Concept"
329,Generation of Predictable IV with CBC Mode,Variant,Draft,"The product generates and uses a predictable initialization Vector (IV) with Cipher Block Chaining (CBC) Mode, which causes algorithms to be susceptible to dictionary attacks when they are encrypted under the same key.",CBC mode eliminates a weakness of Electronic Code Book (ECB) mode by allowing identical plaintext blocks to be encrypted to different ciphertext blocks. This is possible by the XOR-ing of an IV with the initial plaintext block so that every plaintext bloc,NATURE:ChildOf:CWE ID:1204 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:573 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Undetermined,CBC mode is a commonly used mode of operation for a block cipher. It works by XOR-ing an IV with the initial block of a plaintext prior to encryption and then XOR-ing each successive block of plaintext with the previous block of ciphertext before encrypti,,"PHASE - Implementation: NOTE - Developers might dismiss the importance of an unpredictable IV and choose an easier implementation to save effort, weakening the scheme in the process.","SCOPE - Confidentiality IMPACT - Read Application Data NOTE - If the IV is not properly initialized, data that is encrypted can be compromised and leak information.","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - NIST recommends two methods of generating unpredictable IVs for CBC mode [REF-1172]. The first is to generate the IV randomly. The second method is to encrypt a nonce with the same key and cipher to be used to encrypt ,"REFERENCE - CVE-2020-5408 DESCRIPTION - encryption functionality in an authentication framework uses a fixed null IV with CBC mode, allowing attackers to decrypt traffic in applications that use this functionality LINK - https://www.cve.org/CVERecord?id=C",Cryptography,,TAXONOMY NAME - CLASP:ENTRY NAME:Not using a random IV with CBC mode::,"TYPE - Maintenance NOTE - As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, randomness is used heavily. However, within cryptography, entropy is distinct, typically i",Research Concept
459,Incomplete Cleanup,Base,Draft,The product does not properly clean up and remove temporary or supporting resources after they have been used.,,NATURE:ChildOf:CWE ID:404 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:404 VIEW ID:1003 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,TERM - Insufficient Cleanup::,PHASE - Implementation,SCOPE - Other -  SCOPE - Confidentiality SCOPE - Integrity IMPACT - Other IMPACT - Read Application Data IMPACT - Modify Application Data IMPACT - DoS -  Resource Consumption (Other) NOTE - It is possible to overflow the number of temporary files because ,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design Implementation DESCRIPTION - Temporary files and other supporting resources should be deleted/released immediately after they are no longer needed.,"REFERENCE - CVE-2000-0552 DESCRIPTION - World-readable temporary file not deleted after use. LINK - https://www.cve.org/CVERecord?id=CVE-2000-0552  REFERENCE - CVE-2005-2293 DESCRIPTION - Temporary file not deleted after use, leaking database usernames an",File Processing,,TAXONOMY NAME - PLOVER:ENTRY NAME:Incomplete Cleanup TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A10:ENTRY NAME:Insecure Configuration Management:MAPPING FIT:CWE More Specific TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FIO42-C:ENTRY NAME:Close files wh,"TYPE - Relationship NOTE - CWE-459 is a child of CWE-404 because, while CWE-404 covers any  TYPE of improper shutdown or release of a resource, CWE-459 deals specifically with a multi-step shutdown process in which a crucial step for proper cleanup is omi","Software Development,Research Concept"
434,Unrestricted Upload of File with Dangerous Type,Base,Draft,The product allows the attacker to upload or transfer files of dangerous types that can be automatically processed within the product's environment.,,NATURE:ChildOf:CWE ID:669 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:669 VIEW ID:1003 ORDINAL:Primary NATURE:PeerOf:CWE ID:351 VIEW ID:1000 NATURE:PeerOf:CWE ID:436 VIEW ID:1000 NATURE:PeerOf:CWE ID:430 VIEW ID:1000,: ORDINALITY:Primary:DESCRIPTION:This can be primary when there is no check at all.: ORDINALITY:Resultant:DESCRIPTION:This is frequently resultant when use of double extensions (e.g. .php.gif) bypasses a sanity check.: ORDINALITY:Resultant:DESCRIPTION:Thi,LANGUAGE NAME:ASP.NET LANGUAGE PREVALENCE:Sometimes LANGUAGE NAME:PHP LANGUAGE PREVALENCE:Often LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY NAME:Web Server TECHNOLOGY PREVALENCE:Sometimes,,"TERM - Unrestricted File Upload DESCRIPTION - Used in vulnerability databases and elsewhere, but it is insufficiently precise. The phrase could be interpreted as the lack of restrictions on the size or number of uploaded files, which is a resource consump",PHASE - Implementation PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.,SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands NOTE - Arbitrary code execution is possible if an uploaded file is interpreted and executed as code by the recipient. This is especially true for,"METHOD - Dynamic Analysis with Automated Results Interpretation DESCRIPTION - According to SOAR, the following detection techniques may be useful  Cost effective for partial coverage  Web Application Scanner Web Services Scanner Database Scanners EFFECTIV","PHASE - Architecture and Design DESCRIPTION - Generate a new, unique filename for an uploaded file instead of using the user-supplied filename, so that no external input is used at all.[REF-422] [REF-423]  PHASE - Architecture and Design STRATEGY - Enforc",REFERENCE - CVE-2023-5227 DESCRIPTION - PHP-based FAQ management app does not check the MIME type for uploaded images LINK - https://www.cve.org/CVERecord?id=CVE-2023-5227  REFERENCE - CVE-2001-0901 DESCRIPTION - Web-based mail product stores .shtml attac,File Processing,File or Directory,TAXONOMY NAME - PLOVER:ENTRY NAME:Unrestricted File Upload TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A3:ENTRY NAME:Malicious File Execution:MAPPING FIT:CWE More Specific TAXONOMY NAME - OMG ASCSM:ENTRY ID:ASCSM-CWE-434::,"TYPE - Relationship NOTE - This can have a chaining relationship with incomplete denylist / permissive allowlist errors when the product tries, but fails, to properly limit which  TYPEs of files are allowed (CWE-183, CWE-184). This can also overlap multip","Software Development,Research Concept"
66,Improper Handling of File Names that Identify Virtual Resources,Base,Draft,"The product does not handle or incorrectly handles a file name that identifies a virtual resource that is not directly specified within the directory that is associated with the file name, causing the product to perform file-based operations on a resource","Virtual file names are represented like normal file names, but they are effectively aliases for other resources that do not behave like normal files. Depending on their functionality, they could be alternate entities. They are not necessarily listed in di",NATURE:ChildOf:CWE ID:706 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation PHASE - Operation,SCOPE - Other IMPACT - Other,"METHOD - Automated Static Analysis - Binary or Bytecode DESCRIPTION - According to SOAR, the following detection techniques may be useful  Cost effective for partial coverage  Bytecode Weakness Analysis - including disassembler + source code weakness anal",,"REFERENCE - CVE-1999-0278 DESCRIPTION - In IIS, remote attackers can obtain source code for ASP files by appending $DATA to the URL. LINK - https://www.cve.org/CVERecord?id=CVE-1999-0278  REFERENCE - CVE-2004-1084 DESCRIPTION - Server allows remote attack",File Processing,File or Directory,TAXONOMY NAME - PLOVER:ENTRY NAME:Virtual Files::,,"Software Development,Research Concept"
59,Improper Link Resolution Before File Access ('Link Following'),Base,Draft,"The product attempts to access a file based on the filename, but it does not properly prevent that filename from identifying a link or shortcut that resolves to an unintended resource.",,NATURE:ChildOf:CWE ID:706 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:706 VIEW ID:1003 ORDINAL:Primary,: ORDINALITY:Resultant::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Windows OPERATING SYSTEM PREVALENCE:Sometimes OPERATING SYSTEM CLASS:Unix OPERATING SYSTEM PREVALENCE:Often,Soft links are a UNIX term that is synonymous with simple shortcuts on Windows-based platforms.,"TERM - insecure temporary file DESCRIPTION - Some people use the phrase insecure temporary file when referring to a link following weakness, but other weaknesses can produce insecure temporary files without any symlink involvement at all. TERM - Zip Slip",PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Access Control IMPACT - Read Files or Directories IMPACT - Modify Files or Directories IMPACT - Bypass Protection Mechanism NOTE - An attacker may be able to traverse the file system to unintended location,"METHOD - Automated Static Analysis - Binary or Bytecode DESCRIPTION - According to SOAR, the following detection techniques may be useful  Cost effective for partial coverage  Bytecode Weakness Analysis - including disassembler + source code weakness anal",PHASE - Architecture and Design STRATEGY - Separation of Privilege DESCRIPTION - Follow the principle of least privilege when assigning access rights to entities in a software system. Denying access to a file can prevent an attacker from replacing that fi,"REFERENCE - CVE-1999-1386 DESCRIPTION - Some versions of Perl follow symbolic links when running with the -e option, which allows local users to overwrite arbitrary files via a symlink attack. LINK - https://www.cve.org/CVERecord?id=CVE-1999-1386  REFEREN",File Processing,File or Directory,TAXONOMY NAME - PLOVER:ENTRY NAME:Link Following TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FIO02-C:ENTRY NAME:Canonicalize path names originating from untrusted sources TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:POS01-C:ENTRY NAME:Check for the exi,"TYPE - Theoretical NOTE - Link following vulnerabilities are Multi-factor Vulnerabilities (MFV). They are the combination of multiple elements: file or directory permissions, filename predictability, race conditions, and in some cases, a design limitation","Software Development,Research Concept"
58,Path Equivalence: Windows 8.3 Filename,Variant,Incomplete,"The product contains a protection mechanism that restricts access to a long filename on a Windows operating system, but it does not properly restrict access to the equivalent short 8.3 filename.","On later Windows operating systems, a file can have a long name and a short name that is compatible with older Windows file systems, with up to 8 characters in the filename and 3 characters for the extension. These 8.3 filenames, therefore, act as an alte",NATURE:ChildOf:CWE ID:41 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Windows OPERATING SYSTEM PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,PHASE - System Configuration DESCRIPTION - Disable Windows from supporting 8.3 filenames by editing the Windows registry. Preventing 8.3 filenames will not remove previously generated 8.3 filenames.,REFERENCE - CVE-1999-0012 DESCRIPTION - Multiple web servers allow restriction bypass using 8.3 names instead of long names LINK - https://www.cve.org/CVERecord?id=CVE-1999-0012  REFERENCE - CVE-2001-0795 DESCRIPTION - Source code disclosure using 8.3 fil,File Processing,,TAXONOMY NAME - PLOVER:ENTRY NAME:Windows 8.3 Filename TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,TYPE - Research Gap NOTE - Probably under-studied.::,Research Concept
22,Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal'),Base,Stable,"The product uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the product does not properly neutralize special elements within the pathname that can c","Many file operations are intended to take place within a restricted directory. By using special elements such as .. and / separators, attackers can escape outside of the restricted location to access files or directories that are elsewhere on the system. ",NATURE:ChildOf:CWE ID:706 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:706 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:668 VIEW ID:1000,: ORDINALITY:Primary: ORDINALITY:Resultant::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,"TERM - Directory traversal TERM - Path traversal DESCRIPTION - Path traversal is preferred over directory traversal, but both terms are attack-focused.::",PHASE - Implementation,"SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands NOTE - The attacker may be able to create or overwrite critical files that are used to execute code, such as programs or libraries.  SCOPE - Inte","METHOD - Automated Static Analysis DESCRIPTION - Automated techniques can find areas where path traversal weaknesses exist. However, tuning or customization may be required to remove or de-prioritize path-traversal problems that are only exploitable by th","PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n","REFERENCE - CVE-2022-45918 DESCRIPTION - Chain: a learning management tool debugger uses external input to locate previous session logs (CWE-73) and does not properly validate the given path (CWE-20), allowing for filesystem path traversal using ../ seque",File Processing,File or Directory,TAXONOMY NAME - PLOVER:ENTRY NAME:Path Traversal TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A4:ENTRY NAME:Insecure Direct Object Reference:MAPPING FIT:CWE More Specific TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A2:ENTRY NAME:Broken Access Control:MAPPI,"TYPE - Relationship NOTE - Pathname equivalence can be regarded as a  TYPE of canonicalization error.  TYPE - Relationship NOTE - Some pathname equivalence issues are not directly related to directory traversal, rather are used to bypass security-relevant","Software Development,Research Concept"
178,Improper Handling of Case Sensitivity,Base,Incomplete,"The product does not properly account for differences in case sensitivity when accessing or determining the properties of a resource, leading to inconsistent results.","Improperly handled case sensitive data can lead to several possible consequences, including: case-insensitive passwords reducing the size of the key space, making brute force attacks easier bypassing filters or access controls using alternate names multip",NATURE:ChildOf:CWE ID:706 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:706 VIEW ID:1003 ORDINAL:Primary NATURE:CanPrecede:CWE ID:433 VIEW ID:1000 NATURE:CanPrecede:CWE ID:289 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Access Control IMPACT - Bypass Protection Mechanism,,PHASE - Architecture and Design STRATEGY - Input Validation DESCRIPTION - Avoid making decisions based on names of resources (e.g. files) if those resources can have alternate names.  PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume,REFERENCE - CVE-2000-0499 DESCRIPTION - Application server allows attackers to bypass execution of a jsp page and read the source code using an upper case JSP extension in the request. LINK - https://www.cve.org/CVERecord?id=CVE-2000-0499  REFERENCE - CVE,File Processing,File or Directory,"TAXONOMY NAME - PLOVER:ENTRY NAME:Case Sensitivity (lowercase, uppercase, mixed case)::","TYPE - Research Gap NOTE - These are probably under-studied in Windows and Mac environments, where file names are case-insensitive and thus are subject to equivalence manipulations involving case.::","Software Development,Research Concept"
211,Externally-Generated Error Message Containing Sensitive Information,Base,Incomplete,"The product performs an operation that triggers an external diagnostic or error message that is not directly generated or controlled by the product, such as an error generated by the programming language interpreter that a software application uses. The e",,NATURE:ChildOf:CWE ID:209 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Resultant::,LANGUAGE NAME:PHP LANGUAGE PREVALENCE:Often LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,"PHASE - Architecture and Design: NOTE - PHP applications are often targeted for having this issue when the PHP interpreter generates the error outside of the application's control. However, other languages/environments exhibit the same issue. PHASE - Impl",SCOPE - Confidentiality IMPACT - Read Application Data,,"PHASE - System Configuration DESCRIPTION - Configure the application's environment in a way that prevents errors from being generated. For example, in PHP, disable display_errors.  PHASE - Implementation Build and Compilation STRATEGY - Compilation or Bui","REFERENCE - CVE-2004-1581 DESCRIPTION - chain: product does not protect against direct request of an include file, leading to resultant path disclosure when the include file does not successfully execute. LINK - https://www.cve.org/CVERecord?id=CVE-2004-1",Error Handling,,TAXONOMY NAME - PLOVER:ENTRY NAME:Product-External Error Message Infoleak::,TYPE - Relationship NOTE - This is inherently a resultant vulnerability from a weakness within the product or an interaction error.::,Research Concept
134,Use of Externally-Controlled Format String,Base,Draft,"The product uses a function that accepts a format string as an argument, but the format string originates from an external source.","When an attacker can modify an externally-controlled format string, this can lead to buffer overflows, denial of service, or data representation problems. It should be noted that in some circumstances, such as internationalization, the set of format strin",NATURE:ChildOf:CWE ID:668 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:668 VIEW ID:1003 ORDINAL:Primary NATURE:CanPrecede:CWE ID:123 VIEW ID:1000 NATURE:ChildOf:CWE ID:20 VIEW ID:700 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Often LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Often LANGUAGE NAME:Perl LANGUAGE PREVALENCE:Rarely,,,"PHASE - Implementation: NOTE - The programmer rarely intends for a format string to be externally-controlled at all. This weakness is frequently introduced in code that constructs log messages, where a constant format string is omitted. PHASE - Implementa",SCOPE - Confidentiality IMPACT - Read Memory NOTE - Format string problems allow for information disclosure which can severely simplify exploitation of the program.  SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability IMPACT - Modify Memory IMP,METHOD - Automated Static Analysis DESCRIPTION - This weakness can often be detected using automated static analysis tools. Many modern tools use data flow analysis or constraint-based techniques to minimize the number of false positives.  METHOD - Black ,"PHASE - Requirements DESCRIPTION - Choose a language that is not subject to this flaw.  PHASE - Implementation DESCRIPTION - Ensure that all format string functions are passed a static string which cannot be controlled by the user, and that the proper num",REFERENCE - CVE-2002-1825 DESCRIPTION - format string in Perl program LINK - https://www.cve.org/CVERecord?id=CVE-2002-1825  REFERENCE - CVE-2001-0717 DESCRIPTION - format string in bad call to syslog function LINK - https://www.cve.org/CVERecord?id=CVE-2,"Logging,Error Handling,String Processing",Memory,TAXONOMY NAME - PLOVER:ENTRY NAME:Format string vulnerability TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Format String TAXONOMY NAME - CLASP:ENTRY NAME:Format string problem TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FIO30-C:ENTRY NAME:Exclude us,"TYPE - Applicable Platform NOTE - This weakness is possible in any programming language that support format strings.  TYPE - Other NOTE - While Format String vulnerabilities typically fall under the Buffer Overflow category, technically they are not overf","Software Development,Research Concept"
226,Sensitive Information in Resource Not Removed Before Reuse,Base,Draft,"The product releases a resource such as memory or a file so that it can be made available for reuse, but it does not clear or zeroize the information contained in the resource before the product performs a critical state transition or makes the resource a","When resources are released, they can be made available for reuse. For example, after memory is de-allocated, an operating system may make the memory available to another process, or disk space may be reallocated when a file is deleted. As removing inform",NATURE:ChildOf:CWE ID:459 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:212 VIEW ID:1000 NATURE:CanPrecede:CWE ID:201 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Application Data,"METHOD - Manual Analysis DESCRIPTION - Write a known pattern into each sensitive location. Trigger the release of the resource or cause the desired state transition to occur. Read data back from the sensitive locations. If the reads are successful, and th","PHASE - Architecture and Design Implementation DESCRIPTION - During critical state transitions, information not needed in the next state should be removed or overwritten with fixed patterns (such as all 0's) or random data, before the transition to the ne","REFERENCE - CVE-2019-3733 DESCRIPTION - Cryptography library does not clear heap memory before release LINK - https://www.cve.org/CVERecord?id=CVE-2019-3733  REFERENCE - CVE-2003-0001 DESCRIPTION - Ethernet NIC drivers do not pad frames with null bytes, l","Memory Management,Networking",Memory,TAXONOMY NAME - PLOVER:ENTRY NAME:Sensitive Information Uncleared Before Use TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:MEM03-C:ENTRY NAME:Clear sensitive information stored in reusable resources returned for reuse TAXONOMY NAME - Software Fault Patter,"TYPE - Relationship NOTE - There is a close association between CWE-226 and CWE-212. The difference is partially that of perspective. CWE-226 is geared towards the final stage of the resource lifecycle, in which the resource is deleted, eliminated, expire","Hardware Development,Research Concept"
120,Buffer Copy without Checking Size of Input ('Classic Buffer Overflow'),Base,Incomplete,"The product copies an input buffer to an output buffer without verifying that the size of the input buffer is less than the size of the output buffer, leading to a buffer overflow.","A buffer overflow condition exists when a product attempts to put more data in a buffer than it can hold, or when it attempts to put data in a memory area outside of the boundaries of a buffer. The simplest type of error, and the most common cause of buff",NATURE:ChildOf:CWE ID:119 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:119 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:119 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:119 VIEW ID:1340 ORDINAL:Primary NATURE:CanPrecede:CWE ID:123 VIEW I,: ORDINALITY:Resultant: ORDINALITY:Primary::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined LANGUAGE CLASS:Assembly LANGUAGE PREVALENCE:Undetermined,,TERM - Classic Buffer Overflow DESCRIPTION - This term was frequently used by vulnerability researchers during approximately 1995 to 2005 to differentiate buffer copies without length checks (which had been known about for decades) from other emerging wea,PHASE - Implementation,"SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability IMPACT - Modify Memory IMPACT - Execute Unauthorized Code or Commands NOTE - Buffer overflows often can be used to execute arbitrary code, which is usually outside the  SCOPE of the product's ",METHOD - Automated Static Analysis DESCRIPTION - This weakness can often be detected using automated static analysis tools. Many modern tools use data flow analysis or constraint-based techniques to minimize the number of false positives. Automated static,"PHASE - Requirements STRATEGY - Language Selection DESCRIPTION - Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, many languages that perform their own memory management",REFERENCE - CVE-2000-1094 DESCRIPTION - buffer overflow using command with long argument LINK - https://www.cve.org/CVERecord?id=CVE-2000-1094  REFERENCE - CVE-1999-0046 DESCRIPTION - buffer overflow in local program using long environment variable LINK -,Memory Management,Memory,TAXONOMY NAME - PLOVER:ENTRY NAME:Unbounded Transfer ('classic overflow') TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Buffer Overflow TAXONOMY NAME - CLASP:ENTRY NAME:Buffer overflow TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A1:ENTRY NAME:Unvalidat,"TYPE - Relationship NOTE - At the code level, stack-based and heap-based overflows do not differ significantly, so there usually is not a need to distinguish them. From the attacker perspective, they can be quite different, since different techniques are ","Software Development,Research Concept"
401,Missing Release of Memory after Effective Lifetime,Variant,Draft,"The product does not sufficiently track and release allocated memory after it has been used, which slowly consumes remaining memory.","This is often triggered by improper handling of malformed data or unexpectedly interrupted sessions. In some languages, developers are responsible for tracking memory allocation and releasing the memory. If there are no more pointers or references to the ",NATURE:ChildOf:CWE ID:772 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:404 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:404 VIEW ID:1305 ORDINAL:Primary,: ORDINALITY:Resultant::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,TERM - Memory Leak::,PHASE - Implementation: NOTE - Memory leaks have two common and sometimes overlapping causes: Error conditions and other exceptional circumstances Confusion over which part of the program is responsible for freeing the memory,"SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart IMPACT - DoS -  Instability IMPACT - DoS -  Resource Consumption (CPU) IMPACT - DoS -  Resource Consumption (Memory) NOTE - Most memory leaks result in general product reliability problems, but ","METHOD - Fuzzing DESCRIPTION - Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often c","PHASE - Implementation STRATEGY - Libraries or Frameworks DESCRIPTION - Choose a language or tool that provides automatic memory management, or makes manual memory management less error-prone. For example, glibc in Linux provides protection against free o",REFERENCE - CVE-2005-3119 DESCRIPTION - Memory leak because function does not free() an element of a data structure. LINK - https://www.cve.org/CVERecord?id=CVE-2005-3119  REFERENCE - CVE-2004-0427 DESCRIPTION - Memory leak when counter variable is not de,Memory Management,Memory,TAXONOMY NAME - PLOVER:ENTRY NAME:Memory leak TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Memory Leak TAXONOMY NAME - CLASP:ENTRY NAME:Failure to deallocate data TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:,"TYPE - Relationship NOTE - This is often a resultant weakness due to improper handling of malformed data or early termination of sessions.  TYPE - Terminology NOTE - memory leak has sometimes been used to describe other kinds of issues, e.g. for informati",Research Concept
190,Integer Overflow or Wraparound,Base,Stable,"The product performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for reso","An integer overflow or wraparound occurs when an integer value is incremented to a value that is too large to store in the associated representation. When this occurs, the value may wrap to become a very small or negative number. While this may be intende",NATURE:ChildOf:CWE ID:682 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:682 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:20 VIEW ID:700 ORDINAL:Primary NATURE:CanPrecede:CWE ID:119 VIEW ID:1000:CHAIN ID:680,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart IMPACT - DoS -  Resource Consumption (CPU) IMPACT - DoS -  Resource Consumption (Memory) IMPACT - DoS -  Instability NOTE - This weakness will generally lead to undefined behavior and therefore ",METHOD - Automated Static Analysis DESCRIPTION - This weakness can often be detected using automated static analysis tools. Many modern tools use data flow analysis or constraint-based techniques to minimize the number of false positives. EFFECTIVENESS - ,"PHASE - Requirements DESCRIPTION - Ensure that all protocols are strictly defined, such that all out-of-bounds behavior can be identified simply, and require strict conformance to the protocol.  PHASE - Requirements STRATEGY - Language Selection DESCRIPTI","REFERENCE - CVE-2021-43537 DESCRIPTION - Chain: in a web browser, an unsigned 64-bit integer is forcibly cast to a 32-bit integer (CWE-681) and potentially leading to an integer overflow (CWE-190). If an integer overflow occurs, this can cause heap memory","Number Processing,Memory Management,Counters",,TAXONOMY NAME - PLOVER:ENTRY NAME:Integer overflow (wrap or wraparound) TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Integer Overflow TAXONOMY NAME - CLASP:ENTRY NAME:Integer overflow TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:INT18-C:ENTRY NAME:Ev,"TYPE - Relationship NOTE - Integer overflows can be primary to buffer overflows.  TYPE - Terminology NOTE - Integer overflow is sometimes used to cover several  TYPEs of errors, including signedness errors, or buffer overflows that involve manipulation of","Software Development,Research Concept"
1247,Improper Protection Against Voltage and Clock Glitches,Base,Stable,The device does not contain or contains incorrectly implemented circuitry or sensors to detect and mitigate voltage and clock glitches and protect sensitive information or software contained on the device.,"A device might support features such as secure boot which are supplemented with hardware and firmware support. This involves establishing a chain of trust, starting with an immutable root of trust by checking the signature of the next stage (culminating w",NATURE:ChildOf:CWE ID:1384 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT,,,PHASE - Operation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity IMPACT - Bypass Protection Mechanism IMPACT - Read Memory IMPACT - Modify Memory IMPACT - Execute Unauthorized Code or Comman,"METHOD - Manual Analysis DESCRIPTION - Put the processor in an infinite loop, which is then followed by instructions that should not ever be executed, since the loop is not expected to exit. After the loop, toggle an I/O bit (for oscilloscope monitoring p","PHASE - Architecture and Design Implementation DESCRIPTION - At the circuit-level, using Tunable Replica Circuits (TRCs) or special flip-flops such as Razor flip-flops helps mitigate glitch attacks. Working at the SoC or platform base, level sensors may b",REFERENCE - CVE-2019-17391 DESCRIPTION - Lack of anti-glitch protections allows an attacker to launch a physical attack to bypass the secure boot and read protected eFuses. LINK - https://www.cve.org/CVERecord?id=CVE-2019-17391  REFERENCE - CVE-2021-33478,"Power,Clock",,,,"Hardware Development,Research Concept"
1256,Improper Restriction of Software Interfaces to Hardware Features,Base,Stable,"The product provides software-controllable device functionality for capabilities such as power and clock management, but it does not properly limit functionality that can lead to modification of hardware memory or register bits, or the ability to observe ","It is frequently assumed that physical attacks such as fault injection and side-channel analysis require an attacker to have physical access to the target device. This assumption may be false if the device has improperly secured power management features,",NATURE:ChildOf:CWE ID:285 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design: NOTE - An architect may initiate introduction of this weakness via exacting requirements for software accessible power/clock management requirements PHASE - Implementation: NOTE - An implementer may introduce this weakness,SCOPE - Integrity IMPACT - Modify Memory IMPACT - Modify Application Data IMPACT - Bypass Protection Mechanism,METHOD - Manual Analysis DESCRIPTION - Perform a security evaluation of system-level architecture and design with software-aided physical attacks in scope.  METHOD - Automated Dynamic Analysis DESCRIPTION - Use custom software to change registers that con,PHASE - Architecture and Design Implementation DESCRIPTION - Ensure proper access control mechanisms protect software-controllable features altering physical operating conditions such as clock frequency and voltage.,REFERENCE - CVE-2019-11157 DESCRIPTION - Plundervolt: Improper conditions check in voltage settings for some Intel(R) Processors may allow a privileged user to potentially enable escalation of privilege and/or information disclosure via local access [REF-,"Power,Clock",,,,"Hardware Development,Research Concept"
1255,Comparison Logic is Vulnerable to Power Side-Channel Attacks,Variant,Draft,A device's real time power consumption may be monitored during security token evaluation and the information gleaned may be used to determine the value of the reference token.,"The power consumed by a device may be instrumented and monitored in real time. If the algorithm for evaluating security tokens is not sufficiently robust, the power consumption may vary by token entry comparison against the reference value. Further, if re",NATURE:ChildOf:CWE ID:1300 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:1259 VIEW ID:1194 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design: NOTE - The design of the algorithm itself may intrinsically allow the power side channel attack to be effective PHASE - Implementation: NOTE - This weakness may be introduced during implementation despite a robust design t,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Access Control SCOPE - Accountability SCOPE - Authentication SCOPE - Authorization SCOPE - Non-Repudiation IMPACT - Modify Memory IMPACT - Read Memory IMPACT - Read Files or Directorie,,PHASE - Architecture and Design DESCRIPTION - The design  PHASE must consider each check of a security token against a standard and the amount of power consumed during the check of a good token versus a bad token. The alternative is an all at once check w,REFERENCE - CVE-2020-12788 DESCRIPTION - CMAC verification vulnerable to timing and power attacks. LINK - https://www.cve.org/CVERecord?id=CVE-2020-12788,Power,,,,"Hardware Development,Research Concept"
1272,Sensitive Information Uncleared Before Debug/Power State Transition,Base,Stable,"The product performs a power or debug state transition, but it does not clear sensitive information that should no longer be accessible due to changes to information access restrictions.","A device or system frequently employs many power and sleep states during its normal operation (e.g., normal power, additional power, low power, hibernate, deep sleep, etc.). A device also may be operating within a debug condition. State transitions can ha",NATURE:ChildOf:CWE ID:226 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:200 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE NAME:VHDL LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Verilog LANGUAGE PREVALENCE:Undetermined LANGUAGE CLASS:Hardware Description Language LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Und,,,PHASE - Architecture and Design,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Access Control SCOPE - Accountability SCOPE - Authentication SCOPE - Authorization SCOPE - Non-Repudiation IMPACT - Read Memory IMPACT - Read Application Data LIKELIHOOD - High NOTE - ,"METHOD - Manual Analysis DESCRIPTION - Write a known pattern into each sensitive location. Enter the power/debug state in question. Read data back from the sensitive locations. If the reads are successful, and the data is the same as the pattern that was ","PHASE - Architecture and Design Implementation DESCRIPTION - During state transitions, information not needed in the next state should be removed before the transition to the next state.","REFERENCE - CVE-2020-12926 DESCRIPTION - Product software does not set a flag as per TPM specifications, thereby preventing a failed authorization attempt from being recorded after a loss of power. LINK - https://www.cve.org/CVERecord?id=CVE-2020-12926",Power,,,,"Hardware Development,Research Concept"
1332,Improper Handling of Faults that Lead to Instruction Skips,Base,Stable,The device is missing or incorrectly implements circuitry or sensors that detect and mitigate the skipping of security-critical CPU instructions when they occur.,"The operating conditions of hardware may change in ways that cause unexpected behavior to occur, including the skipping of security-critical CPU instructions. Generally, this can occur due to electrical disturbances or when the device operates outside of ",NATURE:ChildOf:CWE ID:1384 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:1247 VIEW ID:1194 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:System,,,PHASE - Architecture and Design: NOTE - Failure to design appropriate countermeasures to common fault injection techniques can manifest this weakness. PHASE - Implementation: NOTE - This weakness can arise if the hardware design incorrectly implements cou,"SCOPE - Confidentiality SCOPE - Integrity SCOPE - Authentication IMPACT - Bypass Protection Mechanism IMPACT - Alter Execution Logic IMPACT - Unexpected State LIKELIHOOD - High NOTE - Depending on the context, instruction skipping can have a broad range o",METHOD - Automated Static Analysis DESCRIPTION - This weakness can be found using automated static analysis once a developer has indicated which code paths are critical to protect. EFFECTIVENESS - Moderate  METHOD - Simulation / Emulation DESCRIPTION - Th,"PHASE - Architecture and Design DESCRIPTION - Design strategies for ensuring safe failure if inputs, such as Vcc, are modified out of acceptable ranges.  PHASE - Architecture and Design DESCRIPTION - Design strategies for ensuring safe behavior if instruc","REFERENCE - CVE-2019-15894 DESCRIPTION - fault injection attack bypasses the verification mode, potentially allowing arbitrary code execution. LINK - https://www.cve.org/CVERecord?id=CVE-2019-15894",Power,,,,"Hardware Development,Research Concept"
1300,Improper Protection of Physical Side Channels,Base,Stable,"The device does not contain sufficient protection mechanisms to prevent physical side channels from exposing sensitive information due to patterns in physically observable phenomena such as variations in power consumption, electromagnetic emissions (EME),","An adversary could monitor and measure physical phenomena to detect patterns and make inferences, even if it is not possible to extract the information in the digital domain. Physical side channels have been well-studied for decades in the context of brea",NATURE:ChildOf:CWE ID:203 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:203 VIEW ID:1194 ORDINAL:Primary,: ORDINALITY:Primary: ORDINALITY:Resultant::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Memory IMPACT - Read Application Data,METHOD - Manual Analysis DESCRIPTION - Perform a set of leakage detection tests such as the procedure outlined in the Test Vector Leakage Assessment (TVLA) test requirements for AES [REF-1230]. TVLA is the basis for the ISO standard 17825 [REF-1229]. A se,PHASE - Architecture and Design DESCRIPTION - Apply blinding or masking techniques to implementations of cryptographic algorithms.  PHASE - Implementation DESCRIPTION - Add shielding or tamper-resistant protections to the device to increase the difficulty,REFERENCE - CVE-2022-35888 DESCRIPTION - Power side-channels leak secret information from processor LINK - https://www.cve.org/CVERecord?id=CVE-2022-35888  REFERENCE - CVE-2021-3011 DESCRIPTION - electromagnetic-wave side-channel in security-related micro,Power,,,,"Hardware Development,Research Concept"
1304,Improperly Preserved Integrity of Hardware Configuration State During a Power Save/Restore Operation,Base,Draft,"The product performs a power save/restore operation, but it does not ensure that the integrity of the configuration state is maintained and/or verified between the beginning and ending of the operation.","Before powering down, the Intellectual Property (IP) saves current state (S) to persistent storage such as flash or always-on memory in order to optimize the restore operation. During this process, an attacker with access to the persistent storage may alt",NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:345 VIEW ID:1000 NATURE:PeerOf:CWE ID:1271 VIEW ID:1194,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design: NOTE - Weakness introduced via missing internal integrity guarantees during power save/restore PHASE - Integration: NOTE - Weakness introduced via missing external integrity verification during power save/restore,"SCOPE - Confidentiality SCOPE - Integrity IMPACT - DoS -  Instability IMPACT - DoS -  Crash, Exit, or Restart IMPACT - DoS -  Resource Consumption (Other) IMPACT - Gain Privileges or Assume Identity IMPACT - Bypass Protection Mechanism IMPACT - Alter Exec",,"PHASE - Architecture and Design DESCRIPTION - Inside the IP, incorporate integrity checking on the configuration state via a cryptographic hash. The hash can be protected inside the IP such as by storing it in internal registers which never lose power. Be",,Power,,,,"Hardware Development,Research Concept"
426,Untrusted Search Path,Base,Stable,The product searches for critical resources using an externally-supplied search path that can point to resources that are not under the product's direct control.,"This might allow attackers to execute their own programs, access unauthorized data files, or modify configuration in unexpected ways. If the product uses a search path to locate critical resources such as programs, then an attacker could modify that searc",NATURE:ChildOf:CWE ID:642 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:668 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:673 VIEW ID:1000 NATURE:PeerOf:CWE ID:427 VIEW ID:1000 NATURE:PeerOf:CWE ID:428 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined,,TERM - Untrusted Path::,PHASE - Implementation,SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity IMPACT - Execute Unauthorized Code or Commands NOTE - There is the potential for arbitrary code execution with privileges of ,"METHOD - Black Box DESCRIPTION - Use monitoring tools that examine the software's process as it interacts with the operating system and the network. This technique is useful in cases when source code is unavailable, if the software was not developed by yo","PHASE - Architecture and Design Implementation STRATEGY - Attack Surface Reduction DESCRIPTION - Hard-code the search path to a set of known-safe values (such as system directories), or only allow them to be specified by the administrator in a configurati",REFERENCE - CVE-1999-1120 DESCRIPTION - Application relies on its PATH environment variable to find and execute program. LINK - https://www.cve.org/CVERecord?id=CVE-1999-1120  REFERENCE - CVE-2008-1810 DESCRIPTION - Database application relies on its PATH,"Program Invocation,Code Libraries",System Process,TAXONOMY NAME - PLOVER:ENTRY NAME:Untrusted Search Path TAXONOMY NAME - CLASP:ENTRY NAME:Relative path library search TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:ENV03-C:ENTRY NAME:Sanitize the environment when invoking external programs::,,"Software Development,Research Concept"
78,Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection'),Base,Stable,"The product constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstr","This could allow attackers to execute unexpected, dangerous commands directly on the operating system. This weakness can lead to a vulnerability in environments in which the attacker does not have direct access to the operating system, such as in web appl",NATURE:ChildOf:CWE ID:77 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:74 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:77 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:77 VIEW ID:1340 ORDINAL:Primary NATURE:CanAlsoBe:CWE ID:88 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,TERM - Shell injection TERM - Shell metacharacters::,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,"SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Non-Repudiation IMPACT - Execute Unauthorized Code or Commands IMPACT - DoS -  Crash, Exit, or Restart IMPACT - Read Files or Directories IMPACT - Modify Files or Directories IMPACT - ",METHOD - Automated Static Analysis DESCRIPTION - This weakness can often be detected using automated static analysis tools. Many modern tools use data flow analysis or constraint-based techniques to minimize the number of false positives. Automated static,"PHASE - Architecture and Design DESCRIPTION - If at all possible, use library calls rather than external processes to recreate the desired functionality.  PHASE - Architecture and Design Operation STRATEGY - Sandbox or Jail DESCRIPTION - Run the code in a","REFERENCE - CVE-2020-10987 DESCRIPTION - OS command injection in Wi-Fi router, as exploited in the wild per CISA KEV. LINK - https://www.cve.org/CVERecord?id=CVE-2020-10987  REFERENCE - CVE-2020-10221 DESCRIPTION - Template functionality in network config",Program Invocation,System Process,TAXONOMY NAME - PLOVER:ENTRY NAME:OS Command Injection TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A3:ENTRY NAME:Malicious File Execution:MAPPING FIT:CWE More Specific TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A6:ENTRY NAME:Injection Flaws:MAPPING FIT:C,"TYPE - Terminology NOTE - The OS command injection phrase carries different meanings to different people. For some people, it only refers to cases in which the attacker injects command separators into arguments for an application-controlled program that i","Software Development,Research Concept"
428,Unquoted Search Path or Element,Base,Draft,"The product uses a search path that contains an unquoted element, in which the element contains whitespace or other separators. This can cause the product to access resources in a parent path.","If a malicious individual has access to the file system, it is possible to elevate privileges by inserting such a file as C:Program.exe to be run by a privileged program making use of WinExec.",NATURE:ChildOf:CWE ID:668 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:668 VIEW ID:1003 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM NAME:Windows NT OPERATING SYSTEM PREVALENCE:Sometimes OPERATING SYSTEM NAME:macOS OPERATING SYSTEM PREVALENCE:Rarely,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands,,PHASE - Implementation DESCRIPTION - Properly quote the full search path before executing a program on the system.  PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation s,REFERENCE - CVE-2005-1185 DESCRIPTION - Small handful of others. Program doesn't quote the C:Program Files path when calling a program to be executed - or any other path with a directory or file whose name contains a space - so attacker can put a maliciou,Program Invocation,,TAXONOMY NAME - PLOVER:ENTRY NAME:Unquoted Search Path or Element::,"TYPE - Applicable Platform NOTE - This weakness could apply to any OS that supports spaces in filenames, especially any OS that make it easy for a user to insert spaces into filenames or folders, such as Windows. While spaces are technically supported in ","Software Development,Research Concept"
181,Incorrect Behavior Order: Validate Before Filter,Variant,Draft,"The product validates data before it has been filtered, which prevents the product from detecting data that becomes invalid after the filtering step.","This can be used by an attacker to bypass the validation and launch attacks that expose weaknesses that would otherwise be prevented, such as injection.",NATURE:ChildOf:CWE ID:179 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,TERM - Validate-before-cleanse::,PHASE - Implementation,SCOPE - Access Control IMPACT - Bypass Protection Mechanism,,PHASE - Implementation Architecture and Design DESCRIPTION - Inputs should be decoded and canonicalized to the application's current internal representation before being filtered.,"REFERENCE - CVE-2002-0934 DESCRIPTION - Directory traversal vulnerability allows remote attackers to read or modify arbitrary files via invalid characters between two . (dot) characters, which are filtered and result in a .. sequence. LINK - https://www.c",Protection Mechanism,,TAXONOMY NAME - PLOVER:ENTRY NAME:Validate-Before-Filter TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A1:ENTRY NAME:Unvalidated Input:MAPPING FIT:CWE More Specific::,TYPE - Research Gap NOTE - This category is probably under-studied.::,Research Concept
364,Signal Handler Race Condition,Base,Incomplete,The product uses a signal handler that introduces a race condition.,"Race conditions frequently occur in signal handlers, since signal handlers support asynchronous actions. These race conditions have a variety of root causes and symptoms. Attackers may be able to exploit a signal handler race condition to cause the produc",NATURE:ChildOf:CWE ID:362 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:415 VIEW ID:1000 NATURE:CanPrecede:CWE ID:416 VIEW ID:1000 NATURE:CanPrecede:CWE ID:123 VIEW ID:1000,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Sometimes LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Sometimes,,,PHASE - Implementation,"SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability IMPACT - Modify Application Data IMPACT - Modify Memory IMPACT - DoS -  Crash, Exit, or Restart IMPACT - Execute Unauthorized Code or Commands NOTE - It may be possible to cause data corruptio",,PHASE - Requirements STRATEGY - Language Selection DESCRIPTION - Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.  PHASE - Architecture and Design DESCRIPTION - Design signal handler,"REFERENCE - CVE-1999-0035 DESCRIPTION - Signal handler does not disable other signal handlers, allowing it to be interrupted, causing other functionality to access files/etc. with raised privileges LINK - https://www.cve.org/CVERecord?id=CVE-1999-0035  RE",Signals Interprocess Communication,System Process,TAXONOMY NAME - PLOVER:ENTRY NAME:Signal handler race condition TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Signal Handling Race Conditions TAXONOMY NAME - CLASP:ENTRY NAME:Race condition in signal handler TAXONOMY NAME - Software Fault Patterns:ENTR,,"Software Development,Research Concept"
839,Numeric Range Comparison Without Minimum Check,Base,Incomplete,"The product checks a value to ensure that it is less than or equal to a maximum, but it does not also verify that the value is greater than or equal to the minimum.","Some products use signed integers or floats even when their values are only expected to be positive or 0. An input validation check might assume that the value is positive, and only check for the maximum value. If the value is negative, but the code assum",NATURE:ChildOf:CWE ID:1023 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:195 VIEW ID:1000 NATURE:CanPrecede:CWE ID:682 VIEW ID:1000 NATURE:CanPrecede:CWE ID:119 VIEW ID:1000 NATURE:CanPrecede:CWE ID:124 VIEW ID:1000,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Often LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Often,,"TERM - Signed comparison DESCRIPTION - The signed comparison term is often used to describe when the product uses a signed variable and checks it to ensure that it is less than a maximum value (typically a maximum buffer size), but does not verify that it",#VALUE!,"SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability IMPACT - Modify Application Data IMPACT - Execute Unauthorized Code or Commands NOTE - An attacker could modify the structure of the message or data being sent to the downstream component, pos",,"PHASE - Implementation STRATEGY - Enforcement by Conversion DESCRIPTION - If the number to be used is always expected to be positive, change the variable type from signed to unsigned or size_t.  PHASE - Implementation STRATEGY - Input Validation DESCRIPTI","REFERENCE - CVE-2010-1866 DESCRIPTION - Chain: integer overflow (CWE-190) causes a negative signed value, which later bypasses a maximum-only check (CWE-839), leading to heap-based buffer overflow (CWE-122). LINK - https://www.cve.org/CVERecord?id=CVE-201",,,,,"Software Development,Research Concept"
684,Incorrect Provision of Specified Functionality,Class,Draft,"The code does not function according to its published specifications, potentially leading to incorrect usage.","When providing functionality to an external party, it is important that the product behaves in accordance with the details specified. When requirements of nuances are not documented, the functionality may produce unintended behaviors for the caller, possi",NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect: ORDINALITY:Primary::,,,,PHASE - Implementation,SCOPE - Other IMPACT - Quality Degradation,,PHASE - Implementation DESCRIPTION - Ensure that your code strictly conforms to specifications.,"REFERENCE - CVE-2002-1446 DESCRIPTION - Error checking routine in PKCS#11 library returns OK status even when invalid signature is detected, allowing spoofed messages. LINK - https://www.cve.org/CVERecord?id=CVE-2002-1446  REFERENCE - CVE-2001-1559 DESCRI",,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:PRE09-C:ENTRY NAME:Do not replace secure functions with less secure functions::,,Research Concept
756,Missing Custom Error Page,Base,Incomplete,"The product does not return custom error pages to the user, possibly exposing sensitive information.",,NATURE:ChildOf:CWE ID:755 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:209 VIEW ID:1000,,,,,#VALUE!,"SCOPE - Confidentiality IMPACT - Read Application Data NOTE - Attackers can leverage the additional information provided by a default error page to mount attacks targeted on the framework, database, or other resources used by the application.",,,,,,,,"Software Development,Research Concept"
198,Use of Incorrect Byte Ordering,Variant,Draft,"The product receives input from an upstream component, but it does not account for byte ordering (e.g. big-endian and little-endian) when processing the input, causing an incorrect number or value to be used.",,NATURE:ChildOf:CWE ID:188 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,"METHOD - Black Box DESCRIPTION - Because byte ordering bugs are usually very noticeable even with normal inputs, this bug is more likely to occur in rarely triggered error conditions, making them difficult to detect using black box  METHODs.",,,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Numeric Byte Ordering Error TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO12-J:ENTRY NAME:Provide methods to read and write little-endian data::,TYPE - Research Gap NOTE - Under-reported.::,Research Concept
1062,Parent Class with References to Child Class,Base,Incomplete,"The code has a parent class that contains references to a child class, its methods, or its members.","This issue can prevent the product from running reliably. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.",NATURE:ChildOf:CWE ID:1061 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Reliability,,,,,,TAXONOMY NAME - OMG ASCRM:ENTRY ID:ASCRM-RLB-14::,,"Software Development,Research Concept"
1291,Public Key Re-Use for Signing both Debug and Production Code,Base,Draft,The same public key is used for signing both debug and production code.,"A common usage of public-key cryptography is to verify the integrity and authenticity of another entity (for example a firmware binary). If a company wants to ensure that its firmware runs only on its own hardware, before the firmware runs, an encrypted h",NATURE:ChildOf:CWE ID:693 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:321 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Access Control SCOPE - Accountability SCOPE - Authentication SCOPE - Authorization SCOPE - Non-Repudiation SCOPE - Other IMPACT - Read Memory IMPACT - Modify Memory IMPACT - Execute Un,METHOD - Architecture or Design Review DESCRIPTION - Compare the debug key with the production key to make sure that they are not the same. EFFECTIVENESS - High  METHOD - Dynamic Analysis with Manual Results Interpretation DESCRIPTION - Compare the debug ,PHASE - Implementation DESCRIPTION - Use different keys for Production and Debug,,,,,,"Hardware Development,Research Concept"
306,Missing Authentication for Critical Function,Base,Draft,The product does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.,"As data is migrated to the cloud, if access does not require authentication, it can be easier for attackers to access the data from anywhere on the Internet.",NATURE:ChildOf:CWE ID:287 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:287 VIEW ID:1003 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Cloud Computing TECHNOLOGY PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Often,,,PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.,SCOPE - Access Control SCOPE - Other IMPACT - Gain Privileges or Assume Identity IMPACT - Other NOTE - Exposing critical functionality essentially provides an attacker with the privilege level of that functionality. The consequences will depend on the ass,"METHOD - Manual Analysis DESCRIPTION - This weakness can be detected using tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active ","PHASE - Architecture and Design DESCRIPTION - Divide the software into anonymous, normal, privileged, and administrative areas. Identify which of these areas require a proven user identity, and use a centralized authentication capability. Identify all pot",REFERENCE - CVE-2022-31260 DESCRIPTION - Chain: a digital asset management program has an undisclosed backdoor in the legacy version of a PHP script (CWE-912) that could allow an unauthenticated user to export metadata (CWE-306) LINK - https://www.cve.org,,,TAXONOMY NAME - PLOVER:ENTRY NAME:No Authentication for Critical Function TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP31:ENTRY NAME:Missing authentication TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-2:ENTRY NAME:Req CR 1.1 TAXONOMY NAME - ISA/IE,,"Software Development,Research Concept"
113,Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request/Response Splitting'),Variant,Incomplete,"The product receives data from an HTTP agent/component (e.g., web server, proxy, browser, etc.), but it does not neutralize or incorrectly neutralizes CR and LF characters before the data is included in outgoing HTTP headers.","HTTP agents or components may include a web server, load balancer, reverse proxy, web caching proxy, application firewall, web browser, etc. Regardless of the role, they are expected to maintain coherent, consistent HTTP communication state across all com",NATURE:ChildOf:CWE ID:93 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:79 VIEW ID:1000 NATURE:ChildOf:CWE ID:20 VIEW ID:700 ORDINAL:Primary NATURE:ChildOf:CWE ID:436 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Web Based TECHNOLOGY PREVALENCE:Undetermined,,TERM - HTTP Request Splitting TERM - HTTP Response Splitting::,PHASE - Implementation,SCOPE - Integrity SCOPE - Access Control IMPACT - Modify Application Data IMPACT - Gain Privileges or Assume Identity NOTE - CR and LF characters in an HTTP header may give attackers control of the remaining headers and body of the message that the applic,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Construct HTTP headers very carefully, avoiding the use of non-validated input data.  PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an a","REFERENCE - CVE-2020-15811 DESCRIPTION - Chain: Proxy uses a substring search instead of parsing the Transfer-Encoding header (CWE-697), allowing request splitting (CWE-113) and cache poisoning LINK - https://www.cve.org/CVERecord?id=CVE-2020-15811  REFER",,,TAXONOMY NAME - PLOVER:ENTRY NAME:HTTP response splitting TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:HTTP Response Splitting TAXONOMY NAME - WASC:ENTRY ID:25:ENTRY NAME:HTTP Response Splitting TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:E,,Research Concept
1423,Exposure of Sensitive Information caused by Shared Microarchitectural Predictor State that Influences Transient Execution,Base,Incomplete,"Shared microarchitectural predictor state may allow code to influence transient execution across a hardware boundary, potentially exposing data that is accessible beyond the boundary over a covert channel.","Many commodity processors have Instruction Set Architecture (ISA) features that protect software components from one another. These features can include memory segmentation, virtual memory, privilege rings, trusted execution environments, and virtual mach",NATURE:ChildOf:CWE ID:1420 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:1420 VIEW ID:1194 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY NAME:Microco,,,"PHASE - Architecture and Design: NOTE - This weakness can be introduced during hardware architecture and design if predictor state is not properly isolated between modes (for example, user mode and kernel mode), if predictor state is not isolated between",SCOPE - Confidentiality IMPACT - Read Memory LIKELIHOOD - Medium,"METHOD - Manual Analysis DESCRIPTION - This weakness can be detected in hardware by manually inspecting processor specifications. Features that exhibit this weakness may have microarchitectural predictor state that is shared between hardware threads, exec",PHASE - Architecture and Design DESCRIPTION - The hardware designer can attempt to prevent transient execution from causing observable discrepancies in specific covert channels.  PHASE - Architecture and Design DESCRIPTION - Hardware designers may choose ,"REFERENCE - CVE-2017-5754 DESCRIPTION - (Branch Target Injection, BTI, Spectre v2). Shared microarchitectural indirect branch predictor state may allow code to influence transient execution across a process, VM, or privilege boundary, potentially exposing",,,,,"Hardware Development,Research Concept"
683,Function Call With Incorrect Order of Arguments,Variant,Draft,"The product calls a function, procedure, or routine, but the caller specifies the arguments in an incorrect order, leading to resultant weaknesses.","While this weakness might be caught by the compiler in some languages, it can occur more frequently in cases in which the called function accepts variable numbers or types of arguments, such as format strings in C. It also can occur in languages or enviro",NATURE:ChildOf:CWE ID:628 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,,,,"PHASE - Implementation: NOTE - This problem typically occurs when the programmer makes a typo, or copy and paste errors.",SCOPE - Other IMPACT - Quality Degradation,,"PHASE - Implementation DESCRIPTION - Use the function, procedure, or routine as specified.  PHASE - Testing DESCRIPTION - Because this function call often produces incorrect behavior it will usually be detected during testing or normal operation of the pr","REFERENCE - CVE-2006-7049 DESCRIPTION - Application calls functions with arguments in the wrong order, allowing attacker to bypass intended access restrictions. LINK - https://www.cve.org/CVERecord?id=CVE-2006-7049",,,,,Research Concept
593,Authentication Bypass: OpenSSL CTX Object Modified after SSL Objects are Created,Variant,Draft,The product modifies the SSL context after connection creation has begun.,"If the program modifies the SSL_CTX object after creating SSL objects from it, there is the possibility that older SSL objects created from the original context could all be affected by that change.",NATURE:ChildOf:CWE ID:666 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:1390 VIEW ID:1000,,,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,"SCOPE - Access Control IMPACT - Bypass Protection Mechanism NOTE - No authentication takes place in this process, bypassing an assumed protection of encryption.  SCOPE - Confidentiality IMPACT - Read Application Data NOTE - The encrypted communication bet",,PHASE - Architecture and Design DESCRIPTION - Use a language or a library that provides a cryptography framework at a higher level of abstraction.  PHASE - Implementation DESCRIPTION - Most SSL_CTX functions have SSL counterparts that act on SSL-type obje,,,,,,Research Concept
1095,Loop Condition Value Update within the Loop,Base,Incomplete,The product uses a loop with a control flow condition based on a value that is updated within the body of the loop.,"This issue makes it more difficult to understand and/or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",NATURE:ChildOf:CWE ID:1120 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,TAXONOMY NAME - OMG ASCMM:ENTRY ID:ASCMM-MNT-5::,,"Software Development,Research Concept"
382,J2EE Bad Practices: Use of System.exit(),Variant,Draft,"A J2EE application uses System.exit(), which also shuts down its container.",It is never a good idea for a web application to attempt to shut down the application container. Access to a function that can shut down the application is an avenue for Denial of Service (DoS) attacks.,NATURE:ChildOf:CWE ID:705 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - A call to System.exit() is probably part of leftover debug code or code imported from a non-J2EE application.,"SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design STRATEGY - Separation of Privilege DESCRIPTION - The shutdown function should be a privileged function available only to a properly authorized administrative user  PHASE - Implementation DESCRIPTION - Web applications shoul,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:J2EE Bad Practices: System.exit() TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2,,Research Concept
863,Incorrect Authorization,Class,Incomplete,"The product performs an authorization check when an actor attempts to access a resource or perform an action, but it does not correctly perform the check. This allows attackers to bypass intended access restrictions.","Assuming a user with a given identity, authorization is the process of determining whether that user can access a given resource, based on the user's privileges and any permissions or other access-control specifications that apply to the resource. When ac",NATURE:ChildOf:CWE ID:285 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:284 VIEW ID:1340 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY NAME:Web Server TECHNOLOGY PREVALENCE:Often TECHNOLOGY NAME:Database Server TECHNOLOGY PREVALENCE:Often,"An access control list (ACL) represents who/what has permissions to a given object. Different operating systems implement (ACLs) in different ways. In UNIX, there are three types of permissions: read, write, and execute. Users are divided into three class","TERM - AuthZ DESCRIPTION - AuthZ is typically used as an abbreviation of authorization within the web application security community. It is distinct from AuthN (or, sometimes, AuthC) which is an abbreviation of authentication. The use of Auth as an abbrev",PHASE - Architecture and Design: NOTE - Authorization weaknesses may arise when a single-user application is ported to a multi-user environment. PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural,"SCOPE - Confidentiality IMPACT - Read Application Data IMPACT - Read Files or Directories NOTE - An attacker could read sensitive data, either by reading the data directly from a data store that is not correctly restricted, or by accessing insufficiently-","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis is useful for detecting commonly-used idioms for authorization. A tool may be able to analyze related configuration files, such as .htaccess in Apache web servers, or detect the us","PHASE - Architecture and Design DESCRIPTION - Divide the product into anonymous, normal, privileged, and administrative areas. Reduce the attack surface by carefully mapping roles with data and functionality. Use role-based access control (RBAC) [REF-229]","REFERENCE - CVE-2021-39155 DESCRIPTION - Chain: A microservice integration and management platform compares the hostname in the HTTP Host header in a case-sensitive way (CWE-178, CWE-1289), allowing bypass of the authorization policy (CWE-863) using a hos",,,TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-1:ENTRY NAME:Req SD-4 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-2:ENTRY NAME:Req CR 2.1 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-2:ENTRY NAME:Req CR 2.2 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 3-3,,Research Concept
913,Improper Control of Dynamically-Managed Code Resources,Class,Incomplete,"The product does not properly restrict reading from or writing to dynamically-managed code resources such as variables, objects, classes, attributes, functions, or executable instructions or statements.","Many languages offer powerful features that allow the programmer to dynamically create or modify existing code, or resources used by code such as variables and objects. While these features can offer significant flexibility and reduce development time, th",NATURE:ChildOf:CWE ID:664 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Integrity IMPACT - Execute Unauthorized Code or Commands  SCOPE - Other -  SCOPE - Integrity IMPACT - Varies by Context IMPACT - Alter Execution Logic,"METHOD - Fuzzing DESCRIPTION - Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often c","PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - For any externally-influenced input, check the input against an allowlist of acceptable values.  PHASE - Implementation Architecture and Design STRATEGY - Refactoring DESCRIPTION - Refactor ",REFERENCE - CVE-2022-2054 DESCRIPTION - Python compiler uses eval() to execute malicious strings as Python code. LINK - https://www.cve.org/CVERecord?id=CVE-2022-2054  REFERENCE - CVE-2018-1000613 DESCRIPTION - Cryptography API uses unsafe reflection when,,,,,Research Concept
1386,Insecure Operation on Windows Junction / Mount Point,Base,Incomplete,"The product opens a file or directory, but it does not properly prevent the name from being associated with a junction or mount point to a destination that is outside of the intended control sphere.","Depending on the intended action being performed, this could allow an attacker to cause the product to read, write, delete, or otherwise operate on unauthorized files. In Windows, NTFS5 allows for file system objects called reparse points. Applications ca",NATURE:ChildOf:CWE ID:59 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Windows OPERATING SYSTEM PREVALENCE:Undetermined,,,"PHASE - Implementation: NOTE - The developer might not consider that when a program in Windows operates with different permissions than the executing user, the use of links, mount points, and junctions might cause the program to access files or directorie",SCOPE - Confidentiality IMPACT - Read Files or Directories NOTE - Read arbitrary files by replacing a user-controlled folder with a mount point and additional hard links.  SCOPE - Integrity IMPACT - Modify Files or Directories NOTE - Modify an arbitrary f,,"PHASE - Architecture and Design STRATEGY - Separation of Privilege DESCRIPTION - When designing software that will have different rights than the executer, the software should check that files that it is interacting with are not improper hard links or mou","REFERENCE - CVE-2021-26426 DESCRIPTION - Privileged service allows attackers to delete unauthorized files using a directory junction, leading to arbitrary code execution as SYSTEM. LINK - https://www.cve.org/CVERecord?id=CVE-2021-26426  REFERENCE - CVE-20",,,,"TYPE - Terminology NOTE - Symbolic links, hard links, junctions, and mount points can be confusing terminology, as there are differences in how they operate between UNIX-based systems and Windows, and there are interactions between them.  TYPE - Maintenan",Research Concept
1246,Improper Write Handling in Limited-write Non-Volatile Memories,Base,Incomplete,The product does not implement or incorrectly implements wear leveling operations in limited-write non-volatile memories.,"Non-volatile memories such as NAND Flash, EEPROM, etc. have individually erasable segments, each of which can be put through a limited number of program/erase or write cycles. For example, the device can only endure a limited number of writes, after which",NATURE:ChildOf:CWE ID:400 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:System,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Availability IMPACT - DoS -  Instability,,PHASE - Architecture and Design Implementation Testing DESCRIPTION - Include secure wear leveling algorithms and ensure they may not be bypassed. EFFECTIVENESS High,,,,TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-1:ENTRY NAME:Req SD-4 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-1:ENTRY NAME:Req SI-1 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-1:ENTRY NAME:Req SVV-3::,,"Hardware Development,Research Concept"
102,Struts: Duplicate Validation Forms,Variant,Incomplete,"The product uses multiple validation forms with the same name, which might cause the Struts Validator to validate a form that the programmer does not expect.","If two validation forms have the same name, the Struts Validator arbitrarily chooses one of the forms to use for input validation and discards the other. This decision might not correspond to the programmer's expectations, possibly leading to resultant we",NATURE:ChildOf:CWE ID:694 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:1173 VIEW ID:1000 NATURE:ChildOf:CWE ID:20 VIEW ID:700 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,"PHASE - Implementation DESCRIPTION - The DTD or schema validation will not catch the duplicate occurrence of the same form name. To find the issue in the implementation, manual checks or automated static analysis could be applied to the xml configuration ",,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Struts: Duplicate Validation Forms TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,Research Concept
763,Release of Invalid Pointer or Reference,Base,Incomplete,"The product attempts to return a memory resource to the system, but it calls the wrong release function or calls the appropriate release function incorrectly.","This weakness can take several forms, such as: The memory was allocated, explicitly or implicitly, via one memory management method and deallocated using a different, non-compatible function (CWE-762). The function calls or memory management routines chos",NATURE:ChildOf:CWE ID:404 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:404 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:404 VIEW ID:1340 ORDINAL:Primary,,,,,PHASE - Implementation,"SCOPE - Integrity SCOPE - Availability SCOPE - Confidentiality IMPACT - Modify Memory IMPACT - DoS -  Crash, Exit, or Restart IMPACT - Execute Unauthorized Code or Commands NOTE - This weakness may result in the corruption of memory, and perhaps instructi","METHOD - Fuzzing DESCRIPTION - Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often c","PHASE - Implementation DESCRIPTION - Only call matching memory management functions. Do not mix and match routines. For example, when you allocate a buffer with malloc(), dispose of the original pointer with free().  PHASE - Implementation DESCRIPTION - W",REFERENCE - CVE-2019-11930 DESCRIPTION - function internally calls 'calloc' and returns a pointer at an index... inside the allocated buffer. This led to freeing invalid memory. LINK - https://www.cve.org/CVERecord?id=CVE-2019-11930,,Memory,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP12:ENTRY NAME:Faulty Memory Release::,"TYPE - Maintenance NOTE - The view-1000 subtree that is associated with this weakness needs additional work. Several entries will likely be created in this branch. Currently the focus is on free() of memory, but delete and other related release routines m","Software Development,Research Concept"
1318,Missing Support for Security Features in On-chip Fabrics or Buses,Base,Incomplete,"On-chip fabrics or buses either do not support or are not configured to support privilege separation or other security features, such as access control.","Certain on-chip fabrics and buses, especially simple and low-power buses, do not support security features. Apart from data transfer and addressing ports, some fabrics and buses do not have any interfaces to transfer privilege, immutable identity, or any ",NATURE:ChildOf:CWE ID:693 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY NAME:Process,,,PHASE - Architecture and Design PHASE - Implementation,"SCOPE - Confidentiality SCOPE - Integrity SCOPE - Access Control SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart IMPACT - Read Memory IMPACT - Modify Memory LIKELIHOOD - Medium",METHOD - Architecture or Design Review DESCRIPTION - Review the fabric specification and ensure that it contains signals to transfer security-sensitive signals. EFFECTIVENESS - High  METHOD - Manual Static Analysis - Source Code DESCRIPTION - Lack of secu,"PHASE - Architecture and Design DESCRIPTION - If fabric does not support security features, implement security checks in a bridge or any component that is between the master and the fabric. Alternatively, connect all fabric slaves that do not have any sec",,,,,,"Hardware Development,Research Concept"
195,Signed to Unsigned Conversion Error,Variant,Draft,"The product uses a signed primitive and performs a cast to an unsigned primitive, which can produce an unexpected value if the value of the signed primitive can not be represented using an unsigned primitive.","It is dangerous to rely on implicit casts between signed and unsigned numbers because the result can take on an unexpected value and violate assumptions made by the program. Often, functions will return negative values to indicate a failure. When the resu",NATURE:ChildOf:CWE ID:681 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:681 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:681 VIEW ID:1340 ORDINAL:Primary NATURE:CanPrecede:CWE ID:119 VIEW ID:1000,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Integrity IMPACT - Unexpected State NOTE - Conversion between signed and unsigned values can lead to a variety of errors, but from a security standpoint is most commonly associated with integer overflow and buffer overflow vulnerabilities.","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,"REFERENCE - CVE-2007-4268 DESCRIPTION - Chain: integer signedness error (CWE-195) passes signed comparison, leading to heap overflow (CWE-122) LINK - https://www.cve.org/CVERecord?id=CVE-2007-4268",,,TAXONOMY NAME - CLASP:ENTRY NAME:Signed to unsigned conversion error TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP1:ENTRY NAME:Glitch in computation TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:INT31-C:ENTRY NAME:Ensure that integer conversions do,,Research Concept
111,Direct Use of Unsafe JNI,Variant,Draft,"When a Java application uses the Java Native Interface (JNI) to call code written in another programming language, it can expose the application to weaknesses in that code, even if those weaknesses cannot occur in Java.","Many safety features that programmers may take for granted do not apply for native code, so you must carefully review all such code for potential problems. The languages used to implement native code may be more susceptible to buffer overflows and other a",NATURE:ChildOf:CWE ID:695 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:20 VIEW ID:700 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Access Control IMPACT - Bypass Protection Mechanism,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - Implement error handling around the JNI call.  PHASE - Implementation STRATEGY - Refactoring DESCRIPTION - Do not use JNI calls if you don't trust the native library.  PHASE - Implementation STRATEGY - Refactoring DESC,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Unsafe JNI TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SEC08-J:ENTRY NAME:Define wrappers around native methods TAXONOMY NAME - SEI CERT Oracle Coding Standard for Java:E,,Research Concept
1042,Static Member Data Element outside of a Singleton Class Element,Variant,Incomplete,"The code contains a member element that is declared as static (but not final), in which its parent class element is not a singleton class - that is, a class element that can be used only once in the 'to' association of a Create action.","This issue can make the product perform more slowly. If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.",NATURE:ChildOf:CWE ID:1176 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Performance,,,,,,TAXONOMY NAME - OMG ASCPEM:ENTRY ID:ASCPEM-PRF-3::,,Research Concept
87,Improper Neutralization of Alternate XSS Syntax,Variant,Draft,The product does not neutralize or incorrectly neutralizes user-controlled input for alternate script syntax.,,NATURE:ChildOf:CWE ID:79 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Read Application Data IMPACT - Execute Unauthorized Code or Commands,,PHASE - Implementation DESCRIPTION - Resolve all input to absolute or canonical representations before processing.  PHASE - Implementation DESCRIPTION - Carefully check each input parameter against a rigorous positive specification (allowlist) defining th,REFERENCE - CVE-2002-0738 DESCRIPTION - XSS using &={script}. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0738,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Alternate XSS syntax TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,Research Concept
671,Lack of Administrator Control over Security,Class,Draft,The product uses security features in a way that prevents the product's administrator from tailoring security settings to reflect the environment in which the product is being used. This introduces resultant weaknesses or prevents it from operating at a l,"If the product's administrator does not have the ability to manage security-related decisions at all times, then protecting the product from outside threats - including the product's developer - can become impossible. For example, a hard-coded account nam",NATURE:ChildOf:CWE ID:657 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase. PHASE - Implementation,SCOPE - Other IMPACT - Varies by Context,,,REFERENCE - CVE-2022-29953 DESCRIPTION - Condition Monitor firmware has a maintenance interface with hard-coded credentials LINK - https://www.cve.org/CVERecord?id=CVE-2022-29953  REFERENCE - CVE-2000-0127 DESCRIPTION - GUI configuration tool does not ena,,,,,Research Concept
508,Non-Replicating Malicious Code,Base,Incomplete,Non-replicating malicious code only resides on the target system or product that is attacked; it does not attempt to spread to other systems.,,NATURE:ChildOf:CWE ID:507 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation PHASE - Operation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands,,PHASE - Operation DESCRIPTION - Antivirus software can help mitigate known malicious code.  PHASE - Installation DESCRIPTION - Verify the integrity of the software that is being installed.,,,,TAXONOMY NAME - Landwehr:ENTRY NAME:Non-Replicating::,,Research Concept
909,Missing Initialization of Resource,Class,Incomplete,The product does not initialize a critical resource.,"Many resources require initialization before they can be properly used. If a resource is not initialized, it could contain unpredictable or expired data, or it could be initialized to defaults that are invalid. This can have security implications when the",NATURE:ChildOf:CWE ID:665 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:665 VIEW ID:1003 ORDINAL:Primary NATURE:CanPrecede:CWE ID:908 VIEW ID:1000,: ORDINALITY:Primary: ORDINALITY:Resultant::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Confidentiality IMPACT - Read Memory IMPACT - Read Application Data NOTE - When reusing a resource such as memory or a program variable, the original contents of that resource may not be cleared before it is sent to an untrusted party.  SCOPE - Av",,"PHASE - Implementation DESCRIPTION - Explicitly initialize the resource before use. If this is performed through an API function or standard procedure, follow all specified steps.  PHASE - Implementation DESCRIPTION - Pay close attention to complex condit","REFERENCE - CVE-2020-20739 DESCRIPTION - A variable that has its value set in a conditional statement is sometimes used when the conditional fails, sometimes causing data leakage LINK - https://www.cve.org/CVERecord?id=CVE-2020-20739  REFERENCE - CVE-2005",,,,,"Software Development,Research Concept"
187,Partial String Comparison,Variant,Incomplete,"The product performs a comparison that only examines a portion of a factor before determining whether there is a match, such as a substring, leading to resultant weaknesses.","For example, an attacker might succeed in authentication by providing a small password that matches the associated portion of the larger, correct password.",NATURE:ChildOf:CWE ID:1023 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity SCOPE - Access Control IMPACT - Alter Execution Logic IMPACT - Bypass Protection Mechanism,,PHASE - Testing DESCRIPTION - Thoroughly test the comparison scheme before deploying code into production. Perform positive testing as well as negative testing.,REFERENCE - CVE-2014-6394 DESCRIPTION - Product does not prevent access to restricted directories due to partial string comparison with a public directory LINK - https://www.cve.org/CVERecord?id=CVE-2014-6394  REFERENCE - CVE-2004-1012 DESCRIPTION - Argum,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Partial Comparison::,"TYPE - Relationship NOTE - This is conceptually similar to other weaknesses, such as insufficient verification and regular expression errors. It is primary to some weaknesses.::",Research Concept
462,Duplicate Key in Associative List (Alist),Variant,Incomplete,Duplicate keys in associative lists can lead to non-unique keys being mistaken for an error.,"A duplicate key entry -- if the alist is designed properly -- could be used as a constant time replace function. However, duplicate key entries could be inserted by mistake. Because of this ambiguity, duplicate key entries in an association list are not r",NATURE:ChildOf:CWE ID:694 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C# LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Quality Degradation IMPACT - Varies by Context,,PHASE - Architecture and Design DESCRIPTION - Use a hash table instead of an alist.  PHASE - Architecture and Design DESCRIPTION - Use an alist which checks the uniqueness of hash keys with each entry before inserting the entry.,,,,TAXONOMY NAME - CLASP:ENTRY NAME:Duplicate key in associative list (alist) TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:ENV02-C:ENTRY NAME:Beware of multiple environment variables with the same effective name::,,Research Concept
450,Multiple Interpretations of UI Input,Base,Draft,The UI has multiple interpretations of user input but does not prompt the user when it selects the less secure interpretation.,,NATURE:ChildOf:CWE ID:357 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Varies by Context,,"PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n",,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Multiple Interpretations of UI Input::,,Research Concept
833,Deadlock,Base,Incomplete,"The product contains multiple threads or executable segments that are waiting for each other to release a necessary lock, resulting in deadlock.",,NATURE:ChildOf:CWE ID:667 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:662 VIEW ID:1305 ORDINAL:Primary,,,,,#VALUE!,"SCOPE - Availability IMPACT - DoS -  Resource Consumption (CPU) IMPACT - DoS -  Resource Consumption (Other) IMPACT - DoS -  Crash, Exit, or Restart NOTE - Each thread of execution will hang and prevent tasks from completing. In some cases, CPU consumptio",,,"REFERENCE - CVE-1999-1476 DESCRIPTION - A bug in some Intel Pentium processors allow DoS (hang) via an invalid CMPXCHG8B instruction, causing a deadlock LINK - https://www.cve.org/CVERecord?id=CVE-1999-1476  REFERENCE - CVE-2009-2857 DESCRIPTION - OS dead",,,TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:LCK08-J:ENTRY NAME:Ensure actively held locks are released on exceptional conditions::,,"Software Development,Research Concept"
222,Truncation of Security-relevant Information,Base,Draft,"The product truncates the display, recording, or processing of security-relevant information in a way that can obscure the source or nature of an attack.",,NATURE:ChildOf:CWE ID:221 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation PHASE - Operation,SCOPE - Non-Repudiation IMPACT - Hide Activities NOTE - The source of an attack will be difficult or impossible to determine. This can allow attacks to the system to continue without notice.,,,"REFERENCE - CVE-2005-0585 DESCRIPTION - Web browser truncates long sub-domains or paths, facilitating phishing. LINK - https://www.cve.org/CVERecord?id=CVE-2005-0585  REFERENCE - CVE-2004-2032 DESCRIPTION - Bypass URL filter via a long URL with a large nu",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Truncation of Security-relevant Information::,,"Software Development,Research Concept"
1075,Unconditional Control Flow Transfer outside of Switch Block,Base,Incomplete,The product performs unconditional control transfer (such as a goto) in code outside of a branching structure such as a switch block.,"This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",NATURE:ChildOf:CWE ID:1120 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,TAXONOMY NAME - OMG ASCMM:ENTRY ID:ASCMM-MNT-1::,,"Software Development,Research Concept"
188,Reliance on Data/Memory Layout,Base,Draft,"The product makes invalid assumptions about how protocol data or memory is organized at a lower level, resulting in unintended program behavior.","When changing platforms or protocol versions, in-memory organization of data may change in unintended ways. For example, some architectures may place local variables A and B right next to each other with A on top; some may place them next to each other wi",NATURE:ChildOf:CWE ID:1105 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:435 VIEW ID:1000,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity SCOPE - Confidentiality IMPACT - Modify Memory IMPACT - Read Memory NOTE - Can result in unintended modifications or exposure of sensitive memory.,"METHOD - Fuzzing DESCRIPTION - Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often c","PHASE - Implementation Architecture and Design DESCRIPTION - In flat address space situations, never allow computing memory addresses as offsets from another memory address.  PHASE - Architecture and Design DESCRIPTION - Fully specify protocol layout unam",,,,TAXONOMY NAME - CLASP:ENTRY NAME:Reliance on data layout::,,Research Concept
681,Incorrect Conversion between Numeric Types,Base,Draft,"When converting from one data type to another, such as long to integer, data can be omitted or translated in a way that produces unexpected values. If the resulting values are used in a sensitive context, then dangerous behaviors may occur.",,NATURE:ChildOf:CWE ID:704 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:704 VIEW ID:1003 ORDINAL:Primary NATURE:CanPrecede:CWE ID:682 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Other -  SCOPE - Integrity IMPACT - Unexpected State IMPACT - Quality Degradation NOTE - The program could wind up using the wrong number and generate incorrect results. If the number is used to allocate resources or make a security decision, then",,PHASE - Implementation DESCRIPTION - Avoid making conversion between numeric types. Always check for the allowed ranges.,"REFERENCE - CVE-2022-2639 DESCRIPTION - Chain: integer coercion error (CWE-192) prevents a return value from indicating an error, leading to out-of-bounds write (CWE-787) LINK - https://www.cve.org/CVERecord?id=CVE-2022-2639  REFERENCE - CVE-2021-43537 DE",,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FLP34-C:ENTRY NAME:Ensure that floating point conversions are within range of the new type:MAPPING FIT:CWE More Abstract TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:INT15-C:ENTRY NAME:Use intmax_t or uintmax,,"Software Development,Research Concept"
477,Use of Obsolete Function,Base,Draft,"The code uses deprecated or obsolete functions, which suggests that the code has not been actively reviewed or maintained.","As programming languages evolve, functions occasionally become obsolete due to: Advances in the language Improved understanding of how operations should be performed effectively and securely Changes in the conventions that govern certain operations Functi",NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Quality Degradation,"METHOD - Automated Static Analysis - Binary or Bytecode DESCRIPTION - According to SOAR, the following detection techniques may be useful  Highly cost effective  Binary / Bytecode Quality Analysis Cost effective for partial coverage  Bytecode Weakness Ana",PHASE - Implementation DESCRIPTION - Refer to the documentation for the obsolete function in order to determine why it is deprecated or obsolete and to learn about alternative ways to achieve the same functionality.  PHASE - Requirements DESCRIPTION - Con,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Obsolete TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP3:ENTRY NAME:Use of an improper API TAXONOMY NAME - SEI CERT Perl Coding Standard:ENTRY ID:DCL30-PL:ENTRY NAME:Do not import deprecated modules:M,,"Software Development,Research Concept"
1080,Source Code File with Excessive Number of Lines of Code,Base,Incomplete,A source code file has too many lines of code.,"This issue makes it more difficult to understand and/or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities. Wh",NATURE:ChildOf:CWE ID:1120 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,TAXONOMY NAME - OMG ASCMM:ENTRY ID:ASCMM-MNT-8::,,"Software Development,Research Concept"
55,Path Equivalence: '/./' (Single Dot Directory),Variant,Incomplete,"The product accepts path input in the form of single dot directory exploit ('/./') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary fi",,NATURE:ChildOf:CWE ID:41 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same inpu,REFERENCE - CVE-2000-0004 DESCRIPTION - Server allows remote attackers to read source code for executable files by inserting a . (dot) into the URL. LINK - https://www.cve.org/CVERecord?id=CVE-2000-0004  REFERENCE - CVE-2002-0304 DESCRIPTION - Server allo,,,TAXONOMY NAME - PLOVER:ENTRY NAME:/./ (single dot directory) TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,,Research Concept
281,Improper Preservation of Permissions,Base,Draft,"The product does not preserve permissions or incorrectly preserves permissions when copying, restoring, or sharing objects, which can cause them to have less restrictive permissions than intended.",,NATURE:ChildOf:CWE ID:732 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:732 VIEW ID:1003 ORDINAL:Primary,: ORDINALITY:Resultant:DESCRIPTION:This is resultant from errors that prevent the permissions from being preserved.::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. PHASE - Operation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Application Data IMPACT - Modify Application Data,,,REFERENCE - CVE-2002-2323 DESCRIPTION - Incorrect ACLs used when restoring backups from directories that use symbolic links. LINK - https://www.cve.org/CVERecord?id=CVE-2002-2323  REFERENCE - CVE-2001-1515 DESCRIPTION - Automatic modification of permissio,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Permission preservation failure::,,"Software Development,Research Concept"
77,Improper Neutralization of Special Elements used in a Command ('Command Injection'),Class,Draft,"The product constructs all or part of a command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended command when it is sent to a downstream com","Command injection vulnerabilities typically occur when: 1. Data enters the application from an untrusted source. 2. The data is part of a string that is executed as a command by the application. 3. By executing the command, the application gives an attack",NATURE:ChildOf:CWE ID:74 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:74 VIEW ID:1003 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,"SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands NOTE - If a malicious user injects a character (such as a semi-colon) that delimits the end of one command and the beginning of another, it may b","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Architecture and Design DESCRIPTION - If at all possible, use library calls rather than external processes to recreate the desired functionality.  PHASE - Implementation DESCRIPTION - If possible, ensure that all external commands called from the ","REFERENCE - CVE-2022-36069 DESCRIPTION - Python-based dependency management tool avoids OS command injection when generating Git commands but allows injection of optional arguments with input beginning with a dash, potentially allowing for code execution.",,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Command Injection TAXONOMY NAME - CLASP:ENTRY NAME:Command injection TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A2:ENTRY NAME:Injection Flaws:MAPPING FIT:CWE More Specific TAXONOMY NAME - OWASP Top Ten 200,"TYPE - Terminology NOTE - The command injection phrase carries different meanings to different people. For some people, it refers to any  TYPE of attack that can allow the attacker to execute commands of their own choosing, regardless of how those command",Research Concept
1111,Incomplete I/O Documentation,Base,Incomplete,"The product's documentation does not adequately define inputs, outputs, or system/software interfaces.",,NATURE:ChildOf:CWE ID:1059 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,#VALUE!,,,,,,,,"Software Development,Research Concept"
766,Critical Data Element Declared Public,Base,Incomplete,"The product declares a critical variable, field, or member to be public when intended security policy requires it to be private.","This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",NATURE:ChildOf:CWE ID:732 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:1061 VIEW ID:1000,: ORDINALITY:Primary: ORDINALITY:Indirect::,LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C# LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity SCOPE - Confidentiality IMPACT - Read Application Data IMPACT - Modify Application Data NOTE - Making a critical variable public allows anyone with access to the object in which the variable is contained to alter or read the value.  SCOP,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation DESCRIPTION - Data should be private, static, and final whenever possible. This will assure that your code is protected by instantiating early, preventing access, and preventing tampering.",REFERENCE - CVE-2010-3860 DESCRIPTION - variables declared public allow remote read of system properties such as user name and home directory. LINK - https://www.cve.org/CVERecord?id=CVE-2010-3860,,,TAXONOMY NAME - CLASP:ENTRY NAME:Failure to protect stored data from modification TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:OBJ01-J:ENTRY NAME:Declare data members as private and provide accessible wrapper methods TAX,,"Software Development,Research Concept"
289,Authentication Bypass by Alternate Name,Base,Incomplete,"The product performs authentication based on the name of a resource being accessed, or the name of the actor performing the access, but it does not properly check all possible names for that resource or actor.",,NATURE:ChildOf:CWE ID:1390 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic. PHASE - Implementation,SCOPE - Access Control IMPACT - Bypass Protection Mechanism,,PHASE - Architecture and Design STRATEGY - Input Validation DESCRIPTION - Avoid making decisions based on names of resources (e.g. files) if those resources can have alternate names.  PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume,REFERENCE - CVE-2003-0317 DESCRIPTION - Protection mechanism that restricts URL access can be bypassed using URL encoding. LINK - https://www.cve.org/CVERecord?id=CVE-2003-0317  REFERENCE - CVE-2004-0847 DESCRIPTION - Bypass of authentication for files us,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Authentication bypass by alternate name TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS01-J:ENTRY NAME:Normalize strings before validating them:MAPPING FIT:CWE More Specific TAXONOMY NA,"TYPE - Relationship NOTE - Overlaps equivalent encodings, canonicalization, authorization, multiple trailing slash, trailing space, mixed case, and other equivalence issues.  TYPE - Theoretical NOTE - Alternate names are useful in data driven manipulation","Software Development,Research Concept"
1319,Improper Protection against Electromagnetic Fault Injection (EM-FI),Base,Incomplete,"The device is susceptible to electromagnetic fault injection attacks, causing device internal information to be compromised or security mechanisms to be bypassed.","Electromagnetic fault injection may allow an attacker to locally and dynamically modify the signals (both internal and external) of an integrated circuit. EM-FI attacks consist of producing a local, transient magnetic field near the device, inducing curre",NATURE:ChildOf:CWE ID:693 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:System,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Access Control SCOPE - Availability IMPACT - Modify Memory IMPACT - Read Memory IMPACT - Gain Privileges or Assume Identity IMPACT - Bypass Protection Mechanism IMPACT - Execute Unauthorized Code or Comman,,"PHASE - Architecture and Design Implementation DESCRIPTION - 1. Redundancy - By replicating critical operations and comparing the two outputs can help indicate whether a fault has been injected. 2. Error detection and correction codes - Gay, Mael, et al. ",REFERENCE - CVE-2020-27211 DESCRIPTION - Chain: microcontroller system-on-chip uses a register value stored in flash to set product protection state on the memory bus and does not contain protection against fault injection (CWE-1319) which leads to an inc,,,,"TYPE - Maintenance NOTE - This entry is attack-oriented and may require significant modification in future versions, or even deprecation. It is not clear whether there is really a design mistake that enables such attacks, so this is not necessarily a weak","Hardware Development,Research Concept"
402,Transmission of Private Resources into a New Sphere ('Resource Leak'),Class,Draft,The product makes resources available to untrusted parties when those resources are only intended to be accessed by the product.,,NATURE:ChildOf:CWE ID:668 VIEW ID:1000 ORDINAL:Primary,,,,TERM - Resource Leak::,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Application Data,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,"REFERENCE - CVE-2003-0740 DESCRIPTION - Server leaks a privileged file descriptor, allowing the server to be hijacked. LINK - https://www.cve.org/CVERecord?id=CVE-2003-0740  REFERENCE - CVE-2004-1033 DESCRIPTION - File descriptor leak allows read of restr",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Resource leaks::,,Research Concept
379,Creation of Temporary File in Directory with Insecure Permissions,Base,Incomplete,The product creates a temporary file in a directory whose permissions allow unintended actors to determine the file's existence or otherwise access that file.,"On some operating systems, the fact that the temporary file exists may be apparent to any user with sufficient privileges to access that directory. Since the file is visible, the application that is using the temporary file could be known. If one has acce",NATURE:ChildOf:CWE ID:377 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Confidentiality IMPACT - Read Application Data NOTE - Since the file is visible and the application which is using the temp file could be known, the attacker has gained information about what the user is doing at that time.","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Requirements DESCRIPTION - Many contemporary languages have functions which properly handle this condition. Older C temp file functions are especially susceptible.  PHASE - Implementation DESCRIPTION - Try to store sensitive tempfiles in a directo,"REFERENCE - CVE-2022-27818 DESCRIPTION - A hotkey daemon written in Rust creates a domain socket file underneath /tmp, which is accessible by any user. LINK - https://www.cve.org/CVERecord?id=CVE-2022-27818  REFERENCE - CVE-2021-21290 DESCRIPTION - A Java",,,TAXONOMY NAME - CLASP:ENTRY NAME:Guessed or visible temporary file TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FIO15-C:ENTRY NAME:Ensure that file operations are performed in a secure directory::,,"Software Development,Research Concept"
362,Concurrent Execution using Shared Resource with Improper Synchronization ('Race Condition'),Class,Draft,"The product contains a code sequence that can run concurrently with other code, and the code sequence requires temporary, exclusive access to a shared resource, but a timing window exists in which the shared resource can be modified by another code sequen","This can have security implications when the expected synchronization is in security-critical code, such as recording whether a user is authenticated or modifying important state information that should not be influenced by an outsider. A race condition o",NATURE:ChildOf:CWE ID:691 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Sometimes LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Sometimes LANGUAGE NAME:Java LANGUAGE PREVALENCE:Sometimes TECHNOLOGY CLASS:Mobile TECHNOLOGY PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Undeter,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Availability IMPACT - DoS -  Resource Consumption (CPU) IMPACT - DoS -  Resource Consumption (Memory) IMPACT - DoS -  Resource Consumption (Other) NOTE - When a race condition makes it possible to bypass a resource cleanup routine or trigger multi,"METHOD - Black Box DESCRIPTION - Black box  METHODs may be able to identify evidence of race conditions via  METHODs such as multiple simultaneous connections, which may cause the software to become instable or crash. However, race conditions with very na","PHASE - Architecture and Design DESCRIPTION - In languages that support it, use synchronization primitives. Only wrap these around critical code to minimize the impact on performance.  PHASE - Architecture and Design DESCRIPTION - Use thread-safe capabili",REFERENCE - CVE-2022-29527 DESCRIPTION - Go application for cloud management creates a world-writable sudoers file that allows local attackers to inject sudo rules and escalate privileges to root by winning a race condition. LINK - https://www.cve.org/CVE,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Race Conditions TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:VNA03-J:ENTRY NAME:Do not assume that a group of calls to independently atomic methods is atomic::,"TYPE - Maintenance NOTE - The relationship between race conditions and synchronization problems (CWE-662) needs to be further developed. They are not necessarily two perspectives of the same core concept, since synchronization is only one technique for av",Research Concept
1064,Invokable Control Element with Signature Containing an Excessive Number of Parameters,Base,Incomplete,"The product contains a function, subroutine, or method whose signature has an unnecessarily large number of parameters/arguments.","This issue makes it more difficult to understand and/or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities. Wh",NATURE:ChildOf:CWE ID:1120 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,TAXONOMY NAME - OMG ASCMM:ENTRY ID:ASCMM-MNT-13::,,"Software Development,Research Concept"
1301,Insufficient or Incomplete Data Removal within Hardware Component,Base,Incomplete,The product's data removal process does not completely delete all data and potentially sensitive information within hardware components.,"Physical properties of hardware devices, such as remanence of magnetic media, residual charge of ROMs/RAMs, or screen burn-in may still retain sensitive data after a data removal process has taken place and power is removed. Recovering data after erasure ",NATURE:ChildOf:CWE ID:226 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Memory IMPACT - Read Application Data,,"PHASE - Architecture and Design DESCRIPTION - Apply blinding or masking techniques to implementations of cryptographic algorithms.  PHASE - Implementation DESCRIPTION - Alter the method of erasure, add protection of media, or destroy the media to protect ",REFERENCE - CVE-2019-8575 DESCRIPTION - Firmware Data Deletion Vulnerability in which a base station factory reset might not delete all user information. The impact of this enables a new owner of a used device that has been factory-default reset with a vu,,,,TYPE - Maintenance NOTE - This entry is still under development and will continue to see updates and content improvements.::,"Hardware Development,Research Concept"
555,J2EE Misconfiguration: Plaintext Password in Configuration File,Variant,Draft,The J2EE application stores a plaintext password in a configuration file.,"Storing a plaintext password in a configuration file allows anyone who can read the file to access the password-protected resource, making it an easy target for attackers.",NATURE:ChildOf:CWE ID:260 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Access Control IMPACT - Bypass Protection Mechanism,,PHASE - Architecture and Design DESCRIPTION - Do not hardwire passwords into your software.  PHASE - Architecture and Design DESCRIPTION - Use industry standard libraries to encrypt passwords before storage in configuration files.,,,,,,Research Concept
790,Improper Filtering of Special Elements,Class,Incomplete,"The product receives data from an upstream component, but does not filter or incorrectly filters special elements before sending it to a downstream component.",,NATURE:ChildOf:CWE ID:138 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Integrity IMPACT - Unexpected State,,,,,,,,Research Concept
623,Unsafe ActiveX Control Marked Safe For Scripting,Variant,Draft,"An ActiveX control is intended for restricted use, but it has been marked as safe-for-scripting.","This might allow attackers to use dangerous functionality via a web page that accesses the control, which can lead to different resultant vulnerabilities, depending on the control's behavior.",NATURE:ChildOf:CWE ID:267 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:618 VIEW ID:1000,: ORDINALITY:Primary::,,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands,,"PHASE - Architecture and Design DESCRIPTION - During development, do not mark it as safe for scripting.  PHASE - System Configuration DESCRIPTION - After distribution, you can set the kill bit for the control so that it is not accessible from Internet Exp",REFERENCE - CVE-2007-0617 DESCRIPTION - control allows attackers to add malicious email addresses to bypass spam limits LINK - https://www.cve.org/CVERecord?id=CVE-2007-0617  REFERENCE - CVE-2007-0219 DESCRIPTION - web browser uses certain COM objects as,,,,,Research Concept
1271,Uninitialized Value on Reset for Registers Holding Security Settings,Base,Incomplete,Security-critical logic is not set to a known value on reset.,"When the device is first brought out of reset, the state of registers will be indeterminate if they have not been initialized by the logic. Before the registers are initialized, there will be a window during which the device is in an insecure state and ma",NATURE:ChildOf:CWE ID:909 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Implementation,SCOPE - Access Control SCOPE - Authentication SCOPE - Authorization IMPACT - Varies by Context,,PHASE - Implementation DESCRIPTION - Design checks should be performed to identify any uninitialized flip-flops used for security-critical functions.  PHASE - Architecture and Design DESCRIPTION - All registers holding security-critical information should,,,,,TYPE - Maintenance NOTE - This entry is still under development and will continue to see updates and content improvements.::,"Hardware Development,Research Concept"
612,Improper Authorization of Index Containing Sensitive Information,Base,Draft,"The product creates a search index of private or sensitive documents, but it does not properly limit index access to actors who are authorized to see the original information.","Web sites and other document repositories may apply an indexing routine against a group of private documents to facilitate search. If the index's results are available to parties who do not have access to the documents being indexed, then attackers could ",NATURE:ChildOf:CWE ID:1230 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Application Data,,,"REFERENCE - CVE-2022-41918 DESCRIPTION - A search application's access control rules are not properly applied to indices for data streams, allowing for the viewing of sensitive information. LINK - https://www.cve.org/CVERecord?id=CVE-2022-41918",,,TAXONOMY NAME - WASC:ENTRY ID:48:ENTRY NAME:Insecure Indexing::,TYPE - Research Gap NOTE - This weakness is probably under-studied and under-reported.::,Research Concept
602,Client-Side Enforcement of Server-Side Security,Class,Draft,The product is composed of a server that relies on the client to implement a mechanism that is intended to protect the server.,"When the server relies on protection mechanisms placed on the client side, an attacker can modify the client-side behavior to bypass the protection mechanisms, resulting in potentially unexpected interactions between the client and server. The consequence",NATURE:ChildOf:CWE ID:693 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:471 VIEW ID:1000 NATURE:PeerOf:CWE ID:290 VIEW ID:1000 NATURE:PeerOf:CWE ID:300 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Undetermined TECHNOLOGY CLASS:Mobile TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic. PHASE - Architecture and Design: NOTE - Consider a product that consists of two or more processes or nodes that mu,"SCOPE - Access Control SCOPE - Availability IMPACT - Bypass Protection Mechanism IMPACT - DoS -  Crash, Exit, or Restart NOTE - Client-side validation checks can be easily bypassed, allowing malformed or unexpected input to pass into the application, pote",,"PHASE - Architecture and Design DESCRIPTION - For any security checks that are performed on the client side, ensure that these checks are duplicated on the server side. Attackers can bypass the client-side checks by modifying values after the checks have ","REFERENCE - CVE-2022-33139 DESCRIPTION - SCADA system only uses client-side authentication, allowing adversaries to impersonate other users. LINK - https://www.cve.org/CVERecord?id=CVE-2022-33139  REFERENCE - CVE-2006-6994 DESCRIPTION - ASP program allows",,,TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A1:ENTRY NAME:Unvalidated Input:MAPPING FIT:CWE More Specific::,,Research Concept
322,Key Exchange without Entity Authentication,Base,Draft,The product performs a key exchange with an actor without verifying the identity of that actor.,"Performing a key exchange will preserve the integrity of the information sent between two entities, but this will not guarantee that the entities are who they claim they are. This may enable an attacker to impersonate an actor by modifying traffic between",NATURE:ChildOf:CWE ID:306 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:923 VIEW ID:1000 NATURE:PeerOf:CWE ID:295 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.,"SCOPE - Access Control IMPACT - Bypass Protection Mechanism NOTE - No authentication takes place in this process, bypassing an assumed protection of encryption.  SCOPE - Confidentiality IMPACT - Read Application Data NOTE - The encrypted communication bet",,PHASE - Architecture and Design DESCRIPTION - Ensure that proper authentication is included in the system design.  PHASE - Implementation DESCRIPTION - Understand and properly implement all checks necessary to ensure the identity of entities involved in e,,,,TAXONOMY NAME - CLASP:ENTRY NAME:Key exchange without entity authentication::,,"Software Development,Research Concept"
922,Insecure Storage of Sensitive Information,Class,Incomplete,The product stores sensitive information without properly limiting read or write access by unauthorized actors.,"If read access is not properly restricted, then attackers can steal the sensitive information. If write access is not properly restricted, then attackers can modify and possibly delete the data, causing incorrect results and possibly a denial of service.",NATURE:ChildOf:CWE ID:664 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase. PHASE - Implementation PHASE - System Configuration,SCOPE - Confidentiality IMPACT - Read Application Data IMPACT - Read Files or Directories NOTE - Attackers can read sensitive information by accessing the unrestricted storage mechanism.  SCOPE - Integrity IMPACT - Modify Application Data IMPACT - Modify ,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,REFERENCE - CVE-2009-2272 DESCRIPTION - password and username stored in cleartext in a cookie LINK - https://www.cve.org/CVERecord?id=CVE-2009-2272,,,,TYPE - Relationship NOTE - There is an overlapping relationship between insecure storage of sensitive information (CWE-922) and missing encryption of sensitive information (CWE-311). Encryption is often used to prevent an attacker from reading the sensiti,Research Concept
1251,Mirrored Regions with Different Values,Base,Incomplete,The product's architecture mirrors regions without ensuring that their contents always stay in sync.,"Having mirrored regions with different values might result in the exposure of sensitive information or possibly system compromise. In the interest of increased performance, one might need to duplicate a resource. A cache memory is a common example of this",NATURE:ChildOf:CWE ID:1250 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:VHDL LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Verilog LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE,,,#VALUE!,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Access Control SCOPE - Accountability SCOPE - Authentication SCOPE - Authorization SCOPE - Non-Repudiation IMPACT - Varies by Context,,"PHASE - Architecture and Design DESCRIPTION - Whenever there are multiple, physically different copies of the same value that might change and the process to update them is not instantaneous and atomic, it is impossible to assert that the original and sha",,,,,"TYPE - Research Gap NOTE - Issues related to state and cache - creation, preservation, and update - are a significant gap in CWE that is expected to be addressed in future versions. It has relationships to concurrency and synchronization, incorrect behavi","Hardware Development,Research Concept"
130,Improper Handling of Length Parameter Inconsistency,Base,Incomplete,"The product parses a formatted message or structure, but it does not handle or incorrectly handles a length field that is inconsistent with the actual length of the associated data.","If an attacker can manipulate the length parameter associated with an input such that it is inconsistent with the actual length of the input, this can be leveraged to cause the target application to behave in unexpected, and possibly, malicious ways. One ",NATURE:ChildOf:CWE ID:240 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:119 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:119 VIEW ID:1340 ORDINAL:Primary NATURE:CanPrecede:CWE ID:805 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Sometimes LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Sometimes LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,TERM - length manipulation TERM - length tampering::,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Memory IMPACT - Modify Memory IMPACT - Varies by Context,,"PHASE - Implementation DESCRIPTION - When processing structured incoming data containing a size field followed by raw data, ensure that you identify and resolve any inconsistencies between the size field and the actual size of the data.  PHASE - Implement","REFERENCE - CVE-2014-0160 DESCRIPTION - Chain: Heartbleed bug receives an inconsistent length parameter (CWE-130) enabling an out-of-bounds read (CWE-126), returning memory that could include private cryptographic keys and other sensitive data. LINK - htt",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Length Parameter Inconsistency TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted Input to Command::,TYPE - Relationship NOTE - This probably overlaps other categories including zero-length issues.::,"Software Development,Research Concept"
710,Improper Adherence to Coding Standards,Pillar,Incomplete,"The product does not follow certain coding rules for development, which can lead to resultant weaknesses or increase the severity of the associated vulnerabilities.",,#VALUE!,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Other IMPACT - Other,,"PHASE - Implementation DESCRIPTION - Document and closely follow coding standards.  PHASE - Testing Implementation DESCRIPTION - Where possible, use automated tools to enforce the standards.",,,,,,Research Concept
1254,Incorrect Comparison Logic Granularity,Base,Draft,"The product's comparison logic is performed over a series of steps rather than across the entire string in one operation. If there is a comparison logic failure on one of these steps, the operation may be vulnerable to a timing attack that can result in t","Comparison logic is used to compare a variety of objects including passwords, Message Authentication Codes (MACs), and responses to verification challenges. When comparison logic is implemented at a finer granularity (e.g., byte-by-byte comparison) and br",NATURE:ChildOf:CWE ID:208 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:697 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality SCOPE - Authorization IMPACT - Bypass Protection Mechanism,,PHASE - Implementation DESCRIPTION - The hardware designer should ensure that comparison logic is implemented so as to compare in one operation instead in smaller chunks.,"REFERENCE - CVE-2019-10482 DESCRIPTION - Smartphone OS uses comparison functions that are not in constant time, allowing side channels LINK - https://www.cve.org/CVERecord?id=CVE-2019-10482  REFERENCE - CVE-2019-10071 DESCRIPTION - Java-oriented framework",,,,,"Hardware Development,Research Concept"
201,Insertion of Sensitive Information Into Sent Data,Base,Draft,"The code transmits data to another actor, but a portion of the data includes sensitive information that should not be accessible to that actor.","Sensitive information could include data that is sensitive in and of itself (such as credentials or private messages), or otherwise useful in the further exploitation of the system (such as internal file system structure).",NATURE:ChildOf:CWE ID:200 VIEW ID:1000 ORDINAL:Primary NATURE:CanAlsoBe:CWE ID:209 VIEW ID:1000 NATURE:CanAlsoBe:CWE ID:202 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Confidentiality IMPACT - Read Files or Directories IMPACT - Read Memory IMPACT - Read Application Data NOTE - Sensitive data may be exposed to attackers.,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Requirements DESCRIPTION - Specify which data in the software should be regarded as sensitive. Consider which types of users should have access to which types of data.  PHASE - Implementation DESCRIPTION - Ensure that any possibly sensitive data s,"REFERENCE - CVE-2022-0708 DESCRIPTION - Collaboration platform does not clear team emails in a response, allowing leak of email addresses LINK - https://www.cve.org/CVERecord?id=CVE-2022-0708",,,TAXONOMY NAME - CLASP:ENTRY NAME:Accidental leaking of sensitive information through sent data::,,"Software Development,Research Concept"
1310,Missing Ability to Patch ROM Code,Base,Draft,Missing an ability to patch ROM code may leave a System or System-on-Chip (SoC) in a vulnerable state.,"A System or System-on-Chip (SoC) that implements a boot process utilizing security mechanisms such as Root-of-Trust (RoT) typically starts by executing code from a Read-only-Memory (ROM) component. The code in ROM is immutable, hence any security vulnerab",NATURE:ChildOf:CWE ID:1329 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:System,,,PHASE - Architecture and Design: NOTE - This issue could be introduced during hardware architecture and design and can be identified later during Testing. PHASE - Implementation: NOTE - This issue could be introduced during implementation and can be ident,"SCOPE - Other IMPACT - Varies by Context IMPACT - Reduce Maintainability LIKELIHOOD - High NOTE - When the system is unable to be patched, it can be left in a vulnerable state.",,PHASE - Architecture and Design Implementation DESCRIPTION - Secure patch support to allow ROM code to be patched on the next boot. EFFECTIVENESS Moderate  PHASE - Architecture and Design Implementation DESCRIPTION - Support patches that can be programmed,,,,,,"Hardware Development,Research Concept"
307,Improper Restriction of Excessive Authentication Attempts,Base,Draft,"The product does not implement sufficient measures to prevent multiple failed authentication attempts within a short time frame, making it more susceptible to brute force attacks.",,NATURE:ChildOf:CWE ID:1390 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:287 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:799 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.,"SCOPE - Access Control IMPACT - Bypass Protection Mechanism NOTE - An attacker could perform an arbitrary number of authentication attempts using different passwords, and eventually gain access to the targeted account.","METHOD - Dynamic Analysis with Automated Results Interpretation DESCRIPTION - According to SOAR, the following detection techniques may be useful  Highly cost effective  Web Application Scanner Web Services Scanner Database Scanners Cost effective for par",PHASE - Architecture and Design DESCRIPTION - Common protection mechanisms include  Disconnecting the user after a small number of failed attempts Implementing a timeout Locking out a targeted account Requiring a computational task on the user's part.  PH,"REFERENCE - CVE-2019-0039 DESCRIPTION - the REST API for a network OS has a high limit for number of connections, allowing brute force password guessing LINK - https://www.cve.org/CVERecord?id=CVE-2019-0039  REFERENCE - CVE-1999-1152 DESCRIPTION - Product",,,TAXONOMY NAME - PLOVER:ENTRY ID:AUTHENT.MULTFAIL:ENTRY NAME:Multiple Failed Authentication Attempts not Prevented TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP34:ENTRY NAME:Unrestricted authentication::,,"Software Development,Research Concept"
95,Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection'),Variant,Incomplete,"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before using the input in a dynamic evaluation call (e.g. eval).","This may allow an attacker to execute arbitrary code, or at least modify what code can be executed.",NATURE:ChildOf:CWE ID:94 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:JavaScript LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Python LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Perl LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:PHP LANGUAGE PREVALENCE:U,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. PHASE - Implementation: NOTE - This weakness is prevalent in handler/dispatch procedures that might want to invoke a large numbe,"SCOPE - Confidentiality IMPACT - Read Files or Directories IMPACT - Read Application Data NOTE - The injected code could access restricted data / files.  SCOPE - Access Control IMPACT - Bypass Protection Mechanism NOTE - In some cases, injectable code con","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Architecture and Design Implementation DESCRIPTION - If possible, refactor your code so that it does not need to use eval() at all.  PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept know",REFERENCE - CVE-2022-2054 DESCRIPTION - Python compiler uses eval() to execute malicious strings as Python code. LINK - https://www.cve.org/CVERecord?id=CVE-2022-2054  REFERENCE - CVE-2021-22204 DESCRIPTION - Chain: regex in EXIF processor code does not c,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Direct Dynamic Code Evaluation ('Eval Injection') TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A3:ENTRY NAME:Malicious File Execution:MAPPING FIT:CWE More Specific TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A6:ENTRY NAME:,"TYPE - Other NOTE - Factors: special character errors can play a role in increasing the variety of code that can be injected, although some vulnerabilities do not require special characters at all, e.g. when a single function without arguments can be refe",Research Concept
344,Use of Invariant Value in Dynamically Changing Context,Base,Draft,"The product uses a constant value, name, or reference, but this value can (or should) vary across different environments.",,NATURE:ChildOf:CWE ID:330 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary: ORDINALITY:Resultant::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Other IMPACT - Varies by Context,,,"REFERENCE - CVE-2002-0980 DESCRIPTION - Component for web browser writes an error message to a known location, which can then be  REFERENCEd by attackers to process HTML/script in a less restrictive context LINK - https://www.cve.org/CVERecord?id=CVE-2002",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Static Value in Unpredictable Context::,TYPE - Relationship NOTE - overlaps default configuration.::,"Software Development,Research Concept"
89,Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection'),Base,Stable,"The product constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downs","Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted as SQL instead of ordinary user data. This can be used to alter query logic to bypass security checks, or to ",NATURE:ChildOf:CWE ID:943 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:74 VIEW ID:1003 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY NAME:Database Server TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. PHASE - Implementation: NOTE - This weakness typically appears in data-rich applications that save user inputs in a database.,"SCOPE - Confidentiality IMPACT - Read Application Data NOTE - Since SQL databases generally hold sensitive data, loss of confidentiality is a frequent problem with SQL injection vulnerabilities.  SCOPE - Access Control IMPACT - Bypass Protection Mechanism",METHOD - Automated Static Analysis DESCRIPTION - This weakness can often be detected using automated static analysis tools. Many modern tools use data flow analysis or constraint-based techniques to minimize the number of false positives. Automated static,"PHASE - Architecture and Design STRATEGY - Libraries or Frameworks DESCRIPTION - Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, consider using persi",REFERENCE - CVE-2023-32530 DESCRIPTION - SQL injection in security product dashboard using crafted certificate fields LINK - https://www.cve.org/CVERecord?id=CVE-2023-32530  REFERENCE - CVE-2021-42258 DESCRIPTION - SQL injection in time and billing softwa,,,TAXONOMY NAME - PLOVER:ENTRY NAME:SQL injection TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:SQL Injection TAXONOMY NAME - CLASP:ENTRY NAME:SQL injection TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A2:ENTRY NAME:Injection Flaws:MAPPING FIT:CWE More Sp,"TYPE - Relationship NOTE - SQL injection can be resultant from special character mismanagement, MAID, or denylist/allowlist problems. It can be primary to authentication errors.::","Software Development,Research Concept"
796,Only Filtering Special Elements Relative to a Marker,Variant,Incomplete,"The product receives data from an upstream component, but only accounts for special elements positioned relative to a marker (e.g. at the beginning/end of a string; the second argument), thereby missing remaining special elements that may exist before sen",,NATURE:ChildOf:CWE ID:795 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Integrity IMPACT - Unexpected State,,,,,,,,Research Concept
1230,Exposure of Sensitive Information Through Metadata,Base,Incomplete,"The product prevents direct access to a resource containing sensitive information, but it does not sufficiently limit access to metadata that is derived from the original, sensitive information.","Developers might correctly prevent unauthorized access to a database or other resource containing sensitive information, but they might not consider that portions of the original information might also be recorded in metadata, search indices, statistical ",NATURE:ChildOf:CWE ID:285 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined,,,PHASE - Architecture and Design,#VALUE!,,,,,,,,"Software Development,Research Concept"
301,Reflection Attack in an Authentication Protocol,Base,Draft,Simple authentication protocols are subject to reflection attacks if a malicious user can use the target machine to impersonate a trusted user.,"A mutual authentication protocol requires each party to respond to a random challenge by the other party by encrypting it with a pre-shared key. Often, however, such protocols employ the same pre-shared key for communication with a number of different ent",NATURE:ChildOf:CWE ID:1390 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:327 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - The primary result of reflection attacks is successful authentication with a target machine -- as an impersonated user.,,PHASE - Architecture and Design DESCRIPTION - Use different keys for the initiator and responder or of a different type of challenge for the initiator and responder.  PHASE - Architecture and Design DESCRIPTION - Let the initiator prove its identity befor,REFERENCE - CVE-2005-3435 DESCRIPTION - product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks. LINK - https://www.cve.org/CVERecord?id=CVE-2005-3435,,,TAXONOMY NAME - CLASP:ENTRY NAME:Reflection attack in an auth protocol TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A7:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::,"TYPE - Maintenance NOTE - The term reflection is used in multiple ways within CWE and the community, so its usage should be reviewed.::","Software Development,Research Concept"
1061,Insufficient Encapsulation,Class,Incomplete,"The product does not sufficiently hide the internal representation and implementation details of data or methods, which might allow external components or modules to modify data unexpectedly, invoke unexpected functionality, or introduce dependencies that","This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,#VALUE!,,,REFERENCE - CVE-2010-3860 DESCRIPTION - variables declared public allow remote read of system properties such as user name and home directory. LINK - https://www.cve.org/CVERecord?id=CVE-2010-3860,,,,,Research Concept
141,Improper Neutralization of Parameter/Argument Delimiters,Variant,Draft,"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as parameter or argument delimiters when they are sent to a downstream component.","As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.",NATURE:ChildOf:CWE ID:140 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,"PHASE - DESCRIPTION - Developers should anticipate that parameter/argument delimiters will be injected/removed/manipulated in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and",REFERENCE - CVE-2003-0307 DESCRIPTION - Attacker inserts field separator into input to specify admin privileges. LINK - https://www.cve.org/CVERecord?id=CVE-2003-0307,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Parameter Delimiter TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,Research Concept
64,Windows Shortcut Following (.LNK),Variant,Incomplete,"The product, when opening a file or directory, does not sufficiently handle when the file is a Windows shortcut (.LNK) whose target is outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorized fil",The shortcut (file with the .lnk extension) can permit an attacker to read/write a file that they originally did not have permissions to access.,NATURE:ChildOf:CWE ID:59 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Resultant::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Windows OPERATING SYSTEM PREVALENCE:Undetermined,,TERM - Windows symbolic link following TERM - symlink::,PHASE - Operation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,PHASE - Architecture and Design STRATEGY - Separation of Privilege DESCRIPTION - Follow the principle of least privilege when assigning access rights to entities in a software system. Denying access to a file can prevent an attacker from replacing that fi,REFERENCE - CVE-2019-19793 DESCRIPTION - network access control service executes program with high privileges and allows symlink to invoke another executable or perform DLL injection. LINK - https://www.cve.org/CVERecord?id=CVE-2019-19793  REFERENCE - CVE,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Windows Shortcut Following (.LNK) TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FIO05-C:ENTRY NAME:Identify files using multiple file attributes TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP18:ENTRY NAME:Link in re,"TYPE - Research Gap NOTE - Under-studied. Windows .LNK files are more portable than Unix symlinks and have been used in remote exploits. Some Windows API's will access LNK's as if they are regular files, so one would expect that they would be reported mor",Research Concept
116,Improper Encoding or Escaping of Output,Class,Draft,"The product prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.","Improper encoding or escaping can allow attackers to change the commands that are sent to another component, inserting malicious commands instead. Most products follow a certain protocol that uses structured messages for communication between components, ",NATURE:ChildOf:CWE ID:707 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:74 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Often TECHNOLOGY NAME:Database Server TECHNOLOGY PREVALENCE:Often TECHNOLOGY NAME:Web Server TECHNOLOGY PREVALENCE:Often,,TERM - Output Sanitization TERM - Output Validation TERM - Output Encoding::,PHASE - Implementation PHASE - Operation,"SCOPE - Integrity IMPACT - Modify Application Data NOTE - The communications between components can be modified in unexpected ways. Unexpected commands can be executed, bypassing other security mechanisms. Incoming data can be misinterpreted.  SCOPE - Int",METHOD - Automated Static Analysis DESCRIPTION - This weakness can often be detected using automated static analysis tools. Many modern tools use data flow analysis or constraint-based techniques to minimize the number of false positives. EFFECTIVENESS - ,"PHASE - Architecture and Design STRATEGY - Libraries or Frameworks DESCRIPTION - Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, consider using the E","REFERENCE - CVE-2021-41232 DESCRIPTION - Chain: authentication routine in Go-based agile development product does not escape user name (CWE-116), allowing LDAP injection (CWE-90) LINK - https://www.cve.org/CVERecord?id=CVE-2021-41232  REFERENCE - CVE-2008",,,TAXONOMY NAME - WASC:ENTRY ID:22:ENTRY NAME:Improper Output Handling TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS00-J:ENTRY NAME:Sanitize untrusted data passed across a trust boundary:MAPPING FIT:Exact TAXONOMY NAME,TYPE - Relationship NOTE - This weakness is primary to all weaknesses related to injection (CWE-74) since the inherent nature of injection involves the violation of structured messages.  TYPE - Relationship NOTE - CWE-116 and CWE-20 have a close associati,Research Concept
598,Use of GET Request Method With Sensitive Query Strings,Variant,Draft,The web application uses the HTTP GET method to process a request and includes sensitive information in the query string of that request.,"The query string for the URL could be saved in the browser's history, passed through Referers to other web sites, stored in web logs, or otherwise recorded in other sources. If the query string contains sensitive information such as session identifiers, t",NATURE:ChildOf:CWE ID:201 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Architecture and Design PHASE - Implementation,"SCOPE - Confidentiality IMPACT - Read Application Data NOTE - At a minimum, attackers can garner information from query strings that can be utilized in escalating their method of attack, such as information about the internal workings of the application o","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation DESCRIPTION - When sensitive information is sent, use the POST method (e.g. registration form).",REFERENCE - CVE-2022-23546 DESCRIPTION - A discussion platform leaks private information in GET requests. LINK - https://www.cve.org/CVERecord?id=CVE-2022-23546,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::,,Research Concept
618,Exposed Unsafe ActiveX Method,Variant,Incomplete,"An ActiveX control is intended for use in a web browser, but it exposes dangerous methods that perform actions that are outside of the browser's security model (e.g. the zone or domain).","ActiveX controls can exercise far greater control over the operating system than typical Java or javascript. Exposed methods can be subject to various vulnerabilities, depending on the implemented behaviors of those methods, and whether input validation i",NATURE:ChildOf:CWE ID:749 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Other IMPACT - Other,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation DESCRIPTION - If you must expose a method, make sure to perform input validation on all arguments, and protect against all possible vulnerabilities.  PHASE - Architecture and Design DESCRIPTION - Use code signing, although this does",REFERENCE - CVE-2007-1120 DESCRIPTION - download a file to arbitrary folders. LINK - https://www.cve.org/CVERecord?id=CVE-2007-1120  REFERENCE - CVE-2006-6838 DESCRIPTION - control downloads and executes a url in a parameter LINK - https://www.cve.org/CVE,,,,,"Software Development,Research Concept"
1022,Use of Web Link to Untrusted Target with window.opener Access,Variant,Incomplete,"The web application produces links to untrusted external sites outside of its sphere of control, but it does not properly prevent the external site from modifying security-critical properties of the window.opener object, such as the location property.","When a user clicks a link to an external site (target), the target=_blank attribute causes the target site's contents to be opened in a new window or tab, which runs in the same process as the original page. The window.opener object records information ab",NATURE:ChildOf:CWE ID:266 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:JavaScript LANGUAGE PREVALENCE:Often TECHNOLOGY CLASS:Web Based TECHNOLOGY PREVALENCE:Often,,TERM - tabnabbing::,PHASE - Architecture and Design: NOTE - This weakness is introduced during the design of an application when the architect does not specify that a linked external document should not be able to alter the location of the calling page. PHASE - Implementatio,SCOPE - Confidentiality IMPACT - Alter Execution Logic NOTE - The user may be redirected to an untrusted page that contains undesired content or malicious script code.,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design DESCRIPTION - Specify in the design that any linked external document must not be granted access to the location object of the calling page.  PHASE - Implementation DESCRIPTION - When creating a link to an external document,"REFERENCE - CVE-2022-4927 DESCRIPTION - Library software does not use rel: noopener noreferrer setting, allowing tabnabbing attacks to redirect to a malicious page LINK - https://www.cve.org/CVERecord?id=CVE-2022-4927",,,,,Research Concept
35,Path Traversal: '.../...//',Variant,Incomplete,"The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '.../...//' (doubled triple dot slash) sequences that can resolve to a location that is outside of that directory.",This allows attackers to traverse the file system to access files or directories that are outside of the restricted directory. The '.../...//' manipulation is useful for bypassing some path traversal protection schemes. If ../ is filtered in a sequential ,NATURE:ChildOf:CWE ID:23 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,"PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n",REFERENCE - CVE-2005-2169 DESCRIPTION - chain: .../...// bypasses protection mechanism using regexp's that remove ../ resulting in collapse into an unsafe value ../ (CWE-182) and resultant path traversal. LINK - https://www.cve.org/CVERecord?id=CVE-2005-2,,,TAXONOMY NAME - PLOVER:ENTRY NAME:'.../...//' TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,,Research Concept
393,Return of Wrong Status Code,Base,Draft,"A function or operation returns an incorrect return value or status code that does not indicate an error, but causes the product to modify its behavior based on the incorrect result.","This can lead to unpredictable behavior. If the function is used to make security-critical decisions or provide security-critical information, then the wrong status code can cause the product to assume that an action is safe, even when it is not.",NATURE:ChildOf:CWE ID:684 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:703 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity SCOPE - Other IMPACT - Unexpected State IMPACT - Alter Execution Logic NOTE - This weakness could place the system in a state that could lead unexpected logic to be executed or other unintended behaviors.,"METHOD - Fuzzing DESCRIPTION - Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often c",,"REFERENCE - CVE-2003-1132 DESCRIPTION - DNS server returns wrong response code for non-existent AAAA record, which effectively says that the domain is inaccessible. LINK - https://www.cve.org/CVERecord?id=CVE-2003-1132  REFERENCE - CVE-2001-1509 DESCRIPTI",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Wrong Status Code TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP6:ENTRY NAME:Incorrect Exception Behavior::,"TYPE - Relationship NOTE - This can be primary or resultant, but it is probably most often primary to other issues.::","Software Development,Research Concept"
427,Uncontrolled Search Path Element,Base,Draft,"The product uses a fixed or controlled search path to find resources, but one or more locations in that path can be under the control of unintended actors.","Although this weakness can occur with any type of resource, it is frequently introduced when a product uses a directory search path to find executables or code libraries, but the path contains a directory that can be modified by an attacker, such as /tmp ",NATURE:ChildOf:CWE ID:668 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:668 VIEW ID:1003 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined,,"TERM - DLL preloading DESCRIPTION - This term is one of several that are used to describe exploitation of untrusted search path elements in Windows systems, which received wide attention in August 2010. From a weakness perspective, the term is imprecise b",PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Architecture and Design Implementation STRATEGY - Attack Surface Reduction DESCRIPTION - Hard-code the search path to a set of known-safe values (such as system directories), or only allow them to be specified by the administrator in a configurati","REFERENCE - CVE-2023-25815 DESCRIPTION - chain: a change in an underlying package causes the gettext function to use implicit initialization with a hard-coded path (CWE-1419) under the user-writable C: drive, introducing an untrusted search path element (",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Uncontrolled Search Path Element::,"TYPE - Relationship NOTE - Unlike untrusted search path (CWE-426), which inherently involves control over the definition of a control sphere (i.e., modification of a search path), this entry concerns a fixed control sphere in which some part of the sphere","Software Development,Research Concept"
787,Out-of-bounds Write,Base,Draft,"The product writes data past the end, or before the beginning, of the intended buffer.","Typically, this can result in corruption of data, a crash, or code execution. The product may modify an index or perform pointer arithmetic that references a memory location that is outside of the boundaries of the buffer. A subsequent write operation the",NATURE:ChildOf:CWE ID:119 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:119 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:119 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:119 VIEW ID:1340 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Often LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Often LANGUAGE CLASS:Assembly LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Often,,"TERM - Memory Corruption DESCRIPTION - Often used to describe the consequences of writing to memory outside the bounds of a buffer, or to memory that is invalid, when the root cause is something other than a sequential copy of excessive data from a fixed",PHASE - Implementation,"SCOPE - Integrity SCOPE - Availability IMPACT - Modify Memory IMPACT - DoS -  Crash, Exit, or Restart IMPACT - Execute Unauthorized Code or Commands",METHOD - Automated Static Analysis DESCRIPTION - This weakness can often be detected using automated static analysis tools. Many modern tools use data flow analysis or constraint-based techniques to minimize the number of false positives. Automated static,"PHASE - Requirements STRATEGY - Language Selection DESCRIPTION - Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, many languages that perform their own memory management","REFERENCE - CVE-2021-21220 DESCRIPTION - Chain: insufficient input validation (CWE-20) in browser allows heap corruption (CWE-787), as exploited in the wild per CISA KEV. LINK - https://www.cve.org/CVERecord?id=CVE-2021-21220  REFERENCE - CVE-2021-28664 D",,,TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 3-3:ENTRY NAME:Req SR 3.5 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-1:ENTRY NAME:Req SI-1 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-1:ENTRY NAME:Req SI-2 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-1:E,,"Software Development,Research Concept"
1189,Improper Isolation of Shared Resources on System-on-a-Chip (SoC),Base,Stable,The System-On-a-Chip (SoC) does not properly isolate shared resources between trusted and untrusted agents.,"A System-On-a-Chip (SoC) has a lot of functionality, but it may have a limited number of pins or pads. A pin can only perform one function at a time. However, it can be configured to perform multiple different functions. This technique is called pin multi",NATURE:ChildOf:CWE ID:653 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:668 VIEW ID:1000 NATURE:PeerOf:CWE ID:1331 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:System on Chip TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,"SCOPE - Access Control IMPACT - Bypass Protection Mechanism NOTE - If resources being used by a trusted user are shared with an untrusted user, the untrusted user may be able to modify the functionality of the shared resource of the trusted user.  SCOPE -","METHOD - Automated Dynamic Analysis DESCRIPTION - Pre-silicon / post-silicon  Test access to shared systems resources (memory ranges, control registers, etc.) from untrusted software to verify that the assets are not incorrectly exposed to untrusted agent","PHASE - Architecture and Design STRATEGY - Separation of Privilege DESCRIPTION - When sharing resources, avoid mixing agents of varying trust levels. Untrusted agents should not share resources with trusted agents.",REFERENCE - CVE-2020-8698 DESCRIPTION - Processor has improper isolation of shared resources allowing for information disclosure. LINK - https://www.cve.org/CVERecord?id=CVE-2020-8698  REFERENCE - CVE-2019-6260 DESCRIPTION - Baseboard Management Controlle,,,,,"Hardware Development,Research Concept"
33,Path Traversal: '....' (Multiple Dot),Variant,Incomplete,"The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '....' (multiple dot) sequences that can resolve to a location that is outside of that directory.","This allows attackers to traverse the file system to access files or directories that are outside of the restricted directory. The '....' manipulation is useful for bypassing some path traversal protection schemes. On some Windows systems, it is equivalen",NATURE:ChildOf:CWE ID:23 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,"PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n",REFERENCE - CVE-2000-0240 DESCRIPTION - read files via /........../ in URL LINK - https://www.cve.org/CVERecord?id=CVE-2000-0240  REFERENCE - CVE-2000-0773 DESCRIPTION - read files via .... in web server LINK - https://www.cve.org/CVERecord?id=CVE-2000-07,,,TAXONOMY NAME - PLOVER:ENTRY NAME:'....' (multiple dot) TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,"TYPE - Maintenance NOTE - Like the triple-dot CWE-32, this manipulation probably hides multiple weaknesses that should be made more explicit.::",Research Concept
1351,Improper Handling of Hardware Behavior in Exceptionally Cold Environments,Base,Incomplete,"A hardware device, or the firmware running on it, is missing or has incorrect protection features to maintain goals of security primitives when the device is cooled below standard operating temperatures.",The hardware designer may improperly anticipate hardware behavior when exposed to exceptionally cold conditions. As a result they may introduce a weakness by not accounting for the modified behavior of critical components when in extreme environments. An ,NATURE:ChildOf:CWE ID:1384 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Embedded:ARCHITECTURE PREVALENCE:Undetermined ARCHITECTURE CLASS:Microcomputer:ARCHITE,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Integrity SCOPE - Authentication IMPACT - Varies by Context IMPACT - Unexpected State LIKELIHOOD - Low NOTE - Consequences of this weakness are highly contextual.,,PHASE - Architecture and Design DESCRIPTION - The system should account for security primitive behavior when cooled outside standard temperatures.,,,,,,"Hardware Development,Research Concept"
627,Dynamic Variable Evaluation,Variant,Incomplete,"In a language where the user can influence the name of a variable at runtime, if the variable names are not controlled, an attacker can read or write to arbitrary variables, or access arbitrary functions.","The resultant vulnerabilities depend on the behavior of the application, both at the crossover point and in any control/data flow that is reachable by the related variables or functions.",NATURE:ChildOf:CWE ID:914 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:183 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE NAME:PHP LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Perl LANGUAGE PREVALENCE:Undetermined,"Many interpreted languages support the use of a $$varname construct to set a variable whose name is specified by the $varname variable. In PHP, these are referred to as variable variables. Functions might also be invoked using similar syntax, such as $$fu",TERM - Dynamic evaluation::,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Modify Application Data IMPACT - Execute Unauthorized Code or Commands NOTE - An attacker could gain unauthorized access to internal program variables and execute arbitrary code.,,PHASE - Implementation STRATEGY - Refactoring DESCRIPTION - Refactor the code to avoid dynamic variable evaluation whenever possible.  PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Use only allowlists of acceptable variable or function ,REFERENCE - CVE-2009-0422 DESCRIPTION - Chain: Dynamic variable evaluation allows resultant remote file inclusion and path traversal. LINK - https://www.cve.org/CVERecord?id=CVE-2009-0422  REFERENCE - CVE-2007-2431 DESCRIPTION - Chain: dynamic variable ev,,,,"TYPE - Research Gap NOTE - Under-studied, probably under-reported. Few researchers look for this issue; most public reports are for PHP, although other languages are affected. This issue is likely to grow in PHP as developers begin to implement functional",Research Concept
244,Improper Clearing of Heap Memory Before Release ('Heap Inspection'),Variant,Draft,"Using realloc() to resize buffers that store sensitive information can leave the sensitive information exposed to attack, because it is not removed from memory.","When sensitive data such as a password or an encryption key is not removed from memory, it could be exposed to an attacker using a heap inspection attack that reads the sensitive data using memory dumps or other methods. The realloc() function is commonly",NATURE:ChildOf:CWE ID:226 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:669 VIEW ID:1000,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Other IMPACT - Read Memory IMPACT - Other NOTE - Be careful using vfork() and fork() in security sensitive code. The process state will not be cleaned up and will contain traces of data from past use.,,,REFERENCE - CVE-2019-3733 DESCRIPTION - Cryptography library does not clear heap memory before release LINK - https://www.cve.org/CVERecord?id=CVE-2019-3733,,Memory,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Heap Inspection TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:MEM03-C:ENTRY NAME:Clear sensitive information stored in reusable resources returned for reuse TAXONOMY NAME - Software Fault Patterns:ENTRY ID:,,Research Concept
1191,On-Chip Debug and Test Interface With Improper Access Control,Base,Stable,The chip does not implement or does not correctly perform access control to check whether users are authorized to access internal registers and test modes through the physical debug/test interface.,"A device's internal information may be accessed through a scan chain of interconnected internal registers, usually through a JTAG interface. The JTAG interface provides access to these registers in a serial fashion in the form of a scan chain for the purp",NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Application Data LIKELIHOOD - High  SCOPE - Confidentiality IMPACT - Read Memory LIKELIHOOD - High  SCOPE - Authorization IMPACT - Execute Unauthorized Code or Commands LIKELIHOOD - High  SCOPE - Integrity IMPACT - Mo,METHOD - Dynamic Analysis with Manual Results Interpretation DESCRIPTION - Authentication and authorization of debug and test interfaces should be part of the architecture and design review process. Withholding of private register documentation from the d,"PHASE - Architecture and Design STRATEGY - Separation of Privilege DESCRIPTION - If feasible, the manufacturer should disable the JTAG interface or implement authentication and authorization for the JTAG interface. If authentication logic is added, it sho","REFERENCE - CVE-2019-18827 DESCRIPTION - chain: JTAG interface is not disabled (CWE-1191) during ROM code execution, introducing a race condition (CWE-362) to extract encryption keys LINK - https://www.cve.org/CVERecord?id=CVE-2019-18827",,,,"TYPE - Relationship NOTE - CWE-1191 and CWE-1244 both involve physical debug access, but the weaknesses are different. CWE-1191 is effectively about missing authorization for a debug interface, i.e. JTAG. CWE-1244 is about providing internal assets with t","Hardware Development,Research Concept"
1240,Use of a Cryptographic Primitive with a Risky Implementation,Base,Draft,"To fulfill the need for a cryptographic primitive, the product implements a cryptographic algorithm using a non-standard, unproven, or disallowed/non-compliant cryptographic implementation.","Cryptographic protocols and systems depend on cryptographic primitives (and associated algorithms) as their basic building blocks. Some common examples of primitives are digital signatures, one-way hash functions, ciphers, and public key cryptography; how",NATURE:ChildOf:CWE ID:327 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:System,,,PHASE - Architecture and Design: NOTE - This weakness is primarily introduced during the architecture and design phase as risky primitives are included. PHASE - Implementation: NOTE - Even in cases where the Architectural phase properly specifies a crypto,SCOPE - Confidentiality IMPACT - Read Application Data LIKELIHOOD - High NOTE - Incorrect usage of crypto primitives could render the supposedly encrypted data as unencrypted plaintext in the worst case.,"METHOD - Architecture or Design Review DESCRIPTION - Review requirements, documentation, and product design to ensure that primitives are consistent with the strongest-available recommendations from trusted parties. If the product appears to be using cust","PHASE - Requirements DESCRIPTION - Require compliance with the strongest-available recommendations from trusted parties, and require that compliance must be kept up-to-date, since recommendations evolve over time. For example, US government systems requir","REFERENCE - CVE-2020-4778 DESCRIPTION - software uses MD5, which is less safe than the default SHA-256 used by related products LINK - https://www.cve.org/CVERecord?id=CVE-2020-4778  REFERENCE - CVE-2005-2946 DESCRIPTION - Default configuration of product",,,,"TYPE - Terminology NOTE - Terminology for cryptography varies widely, from informal and colloquial to mathematically-defined, with different precision and formalism depending on whether the stakeholder is a developer, cryptologist, etc. Yet there is a nee","Hardware Development,Software Development,Research Concept"
778,Insufficient Logging,Base,Draft,"When a security-critical event occurs, the product either does not record the event or omits important details about the event when logging it.","When security-critical events are not logged properly, such as a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analysis after an attack succeeds. As organizations adopt cloud storage resources, the",NATURE:ChildOf:CWE ID:223 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:693 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Cloud Computing TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Operation: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.,"SCOPE - Non-Repudiation IMPACT - Hide Activities NOTE - If security critical information is not recorded, there will be no trail for forensic analysis and discovering the cause of problems or the source of attacks may become more difficult or impossible.","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design DESCRIPTION - Use a centralized logging mechanism that supports multiple levels of detail.  PHASE - Implementation DESCRIPTION - Ensure that all security-related successes and failures can be logged. When storing data in th,"REFERENCE - CVE-2008-4315 DESCRIPTION - server does not log failed authentication attempts, making it easier for attackers to perform brute force password guessing without being detected LINK - https://www.cve.org/CVERecord?id=CVE-2008-4315  REFERENCE - C",,,,,"Software Development,Research Concept"
547,"Use of Hard-coded, Security-relevant Constants",Base,Draft,"The product uses hard-coded constants instead of symbolic names for security-critical values, which increases the likelihood of mistakes during code maintenance or security policy change.","If the developer does not find all occurrences of the hard-coded constants, an incorrect policy decision may be made if one of the constants is not changed. Making changes to these values will require code changes that may be difficult or impossible once ",NATURE:ChildOf:CWE ID:1078 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,PHASE - Implementation,SCOPE - Other IMPACT - Varies by Context IMPACT - Quality Degradation NOTE - The existence of hardcoded constants could cause unexpected behavior and the introduction of weaknesses during code maintenance or when making changes to the code if all occurren,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - Avoid using hard-coded constants. Configuration files offer a more flexible solution.,,,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:DCL06-C:ENTRY NAME:Use meaningful symbolic constants to represent literal values in program logic::,,"Software Development,Research Concept"
437,Incomplete Model of Endpoint Features,Base,Incomplete,"A product acts as an intermediary or monitor between two or more endpoints, but it does not have a complete model of an endpoint's features, behaviors, or state, potentially causing the product to perform incorrect actions based on this incomplete model.",,NATURE:ChildOf:CWE ID:436 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Integrity SCOPE - Other IMPACT - Unexpected State IMPACT - Varies by Context,,,,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Extra Unhandled Features::,"TYPE - Relationship NOTE - This can be related to interaction errors, although in some cases, one of the endpoints is not performing correctly according to specification.::","Software Development,Research Concept"
164,Improper Neutralization of Internal Special Elements,Variant,Incomplete,"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes internal special elements that could be interpreted in unexpected ways when they are sent to a downstream component.","As data is parsed, improperly handled internal special elements may cause the process to take unexpected actions that result in an attack.",NATURE:ChildOf:CWE ID:138 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,"PHASE - DESCRIPTION - Developers should anticipate that internal special elements will be injected/removed/manipulated in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and app",,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Internal Special Element TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,Research Concept
1394,Use of Default Cryptographic Key,Base,Incomplete,The product uses a default cryptographic key for potentially critical functionality.,"It is common practice for products to be designed to use default keys. The rationale is to simplify the manufacturing process or the system administrator's task of installation and deployment into an enterprise. However, if admins do not change the defaul",NATURE:ChildOf:CWE ID:1392 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design,SCOPE - Authentication IMPACT - Gain Privileges or Assume Identity,,"PHASE - Requirements DESCRIPTION - Prohibit use of default, hard-coded, or other values that do not vary for each installation of the product - especially for separate organizations. EFFECTIVENESS High  PHASE - Architecture and Design DESCRIPTION - Force ",REFERENCE - CVE-2018-3825 DESCRIPTION - cloud cluster management product has a default master encryption key LINK - https://www.cve.org/CVERecord?id=CVE-2018-3825  REFERENCE - CVE-2016-1561 DESCRIPTION - backup storage product has a default SSH public key,,,,,Research Concept
326,Inadequate Encryption Strength,Class,Draft,"The product stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required.",A weak encryption scheme can be subjected to brute force attacks that have a reasonable chance of succeeding using current attack methods and resources.,NATURE:ChildOf:CWE ID:693 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.,SCOPE - Access Control SCOPE - Confidentiality IMPACT - Bypass Protection Mechanism IMPACT - Read Application Data NOTE - An attacker may be able to decrypt the data using brute force attacks.,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design DESCRIPTION - Use an encryption scheme that is currently considered to be strong by experts in the field.,REFERENCE - CVE-2001-1546 DESCRIPTION - Weak encryption LINK - https://www.cve.org/CVERecord?id=CVE-2001-1546  REFERENCE - CVE-2004-2172 DESCRIPTION - Weak encryption (chosen plaintext attack) LINK - https://www.cve.org/CVERecord?id=CVE-2004-2172  REFEREN,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Weak Encryption TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A8:ENTRY NAME:Insecure Cryptographic Storage:MAPPING FIT:CWE More Specific TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A9:ENTRY NAME:Insecure Communications:MAPP,,Research Concept
196,Unsigned to Signed Conversion Error,Variant,Draft,"The product uses an unsigned primitive and performs a cast to a signed primitive, which can produce an unexpected value if the value of the unsigned primitive can not be represented using a signed primitive.","Although less frequent an issue than signed-to-unsigned conversion, unsigned-to-signed conversion can be the perfect precursor to dangerous buffer underwrite conditions that allow attackers to move down the stack where they otherwise might not have access",NATURE:ChildOf:CWE ID:681 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:681 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:681 VIEW ID:1340 ORDINAL:Primary NATURE:CanAlsoBe:CWE ID:124 VIEW ID:1000 NATURE:CanAlsoBe:CWE ID:120 VIEW ID:1000,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart NOTE - Incorrect sign conversions generally lead to undefined behavior, and therefore crashes.  SCOPE - Integrity IMPACT - Modify Memory NOTE - If a poor cast lead to a buffer overflow or simila",,PHASE - Requirements DESCRIPTION - Choose a language which is not subject to these casting flaws.  PHASE - Architecture and Design DESCRIPTION - Design object accessor functions to implicitly check values for valid sizes. Ensure that all functions which w,,,,TAXONOMY NAME - CLASP:ENTRY NAME:Unsigned to signed conversion error TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP1:ENTRY NAME:Glitch in computation::,,Research Concept
79,Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),Base,Stable,The product does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,"Cross-site scripting (XSS) vulnerabilities occur when: Untrusted data enters a web application, typically from a web request. The web application dynamically generates a web page that contains this untrusted data. During page generation, the application d",NATURE:ChildOf:CWE ID:74 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:74 VIEW ID:1003 ORDINAL:Primary NATURE:CanPrecede:CWE ID:494 VIEW ID:1000 NATURE:PeerOf:CWE ID:352 VIEW ID:1000,: ORDINALITY:Resultant::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Web Based TECHNOLOGY PREVALENCE:Often,"The Same Origin Policy states that browsers should limit the resources accessible to scripts running on a given web site, or origin, to the resources associated with that web site on the client-side, and not the client-side resources of any other sites or","TERM - XSS DESCRIPTION - A common abbreviation for Cross-Site Scripting. TERM - HTML Injection DESCRIPTION - Used as a synonym of stored (Type 2) XSS. TERM - CSS DESCRIPTION - In the early years after initial discovery of XSS, CSS was a commonly-used acro",PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,"SCOPE - Access Control SCOPE - Confidentiality IMPACT - Bypass Protection Mechanism IMPACT - Read Application Data NOTE - The most common attack performed with cross-site scripting involves the disclosure of information stored in user cookies. Typically, ","METHOD - Automated Static Analysis DESCRIPTION - Use automated static analysis tools that target this type of weakness. Many modern techniques use data flow analysis to minimize the number of false positives. This is not a perfect solution, since 100% acc",PHASE - Architecture and Design STRATEGY - Libraries or Frameworks DESCRIPTION - Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Examples of libraries and framewo,"REFERENCE - CVE-2021-25926 DESCRIPTION - Python Library Manager did not sufficiently neutralize a user-supplied search term, allowing reflected XSS. LINK - https://www.cve.org/CVERecord?id=CVE-2021-25926  REFERENCE - CVE-2021-25963 DESCRIPTION - Python-ba",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Cross-site scripting (XSS) TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Cross-site Scripting TAXONOMY NAME - CLASP:ENTRY NAME:Cross-site scripting TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A1:ENTRY NAME:Cross Site S,TYPE - Relationship NOTE - There can be a close relationship between XSS and CSRF (CWE-352). An attacker might use CSRF in order to trick the victim into submitting requests to the server in which the requests contain an XSS payload. A well-known example ,"Software Development,Research Concept"
777,Regular Expression without Anchors,Variant,Incomplete,"The product uses a regular expression to perform neutralization, but the regular expression is not anchored and may allow malicious or malformed data to slip through.","When performing tasks such as validating against a set of allowed inputs (allowlist), data is examined and possibly modified to ensure that it is well-formed and adheres to a list of safe values. If the regular expression is not anchored, malicious or mal",NATURE:ChildOf:CWE ID:625 VIEW ID:1000 ORDINAL:Primary,,,"Regular expressions are typically used to match a pattern of text. Anchors are used in regular expressions to specify where the pattern should match: at the beginning, the end, or both (the whole input).",,PHASE - Implementation,"SCOPE - Availability SCOPE - Confidentiality SCOPE - Access Control IMPACT - Bypass Protection Mechanism NOTE - An unanchored regular expression in the context of an allowlist will possibly result in a protection mechanism failure, allowing malicious or m",,PHASE - Implementation DESCRIPTION - Be sure to understand both what will be matched and what will not be matched by a regular expression. Anchoring the ends of the expression will allow the programmer to define an allowlist strictly limited to what is ma,"REFERENCE - CVE-2022-30034 DESCRIPTION - Chain: Web UI for a Python RPC framework does not use regex anchors to validate user login emails (CWE-777), potentially allowing bypass of OAuth (CWE-1390). LINK - https://www.cve.org/CVERecord?id=CVE-2022-30034",,,,,Research Concept
302,Authentication Bypass by Assumed-Immutable Data,Base,Incomplete,"The authentication scheme or implementation uses key data elements that are assumed to be immutable, but can be controlled or modified by the attacker.",,NATURE:ChildOf:CWE ID:1390 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:807 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic. PHASE - Implementation,SCOPE - Access Control IMPACT - Bypass Protection Mechanism,,"PHASE - Architecture and Design Operation Implementation DESCRIPTION - Implement proper protection for immutable data (e.g. environment variable, hidden form fields, etc.)",REFERENCE - CVE-2002-0367 DESCRIPTION - DebPloit LINK - https://www.cve.org/CVERecord?id=CVE-2002-0367  REFERENCE - CVE-2004-0261 DESCRIPTION - Web auth LINK - https://www.cve.org/CVERecord?id=CVE-2004-0261  REFERENCE - CVE-2002-1730 DESCRIPTION - Authent,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Authentication Bypass via Assumed-Immutable Data TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A1:ENTRY NAME:Unvalidated Input:MAPPING FIT:CWE More Specific TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2,,Research Concept
207,Observable Behavioral Discrepancy With Equivalent Products,Variant,Draft,"The product operates in an environment in which its existence or specific identity should not be known, but it behaves differently than other products with equivalent functionality, in a way that is observable to an attacker.","For many kinds of products, multiple products may be available that perform the same functionality, such as a web server, network interface, or intrusion detection system. Attackers often perform fingerprinting, which uses discrepancies in order to identi",NATURE:ChildOf:CWE ID:205 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality SCOPE - Access Control IMPACT - Read Application Data IMPACT - Bypass Protection Mechanism,,,REFERENCE - CVE-2002-0208 DESCRIPTION - Product modifies TCP/IP stack and ICMP error messages in unusual ways that show the product is in use. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0208  REFERENCE - CVE-2004-2252 DESCRIPTION - Behavioral infole,,,TAXONOMY NAME - PLOVER:ENTRY NAME:External behavioral inconsistency infoleak::,,Research Concept
360,Trust of System Event Data,Base,Incomplete,Security based on event locations are insecure and can be spoofed.,"Events are a messaging system which may provide control data to programs listening for events. Events often do not have any type of authentication framework to allow them to be verified from a trusted source. Any application, in Windows, on a given deskto",NATURE:ChildOf:CWE ID:345 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity IMPACT - Execute Unauthorized Code or Commands NOTE - If one trusts the system-event information and executes commands based ,,PHASE - Architecture and Design DESCRIPTION - Never trust or rely any of the information in an Event for security.,REFERENCE - CVE-2004-0213 DESCRIPTION - Attacker uses Shatter attack to bypass GUI-enforced protection for CVE-2003-0908. LINK - https://www.cve.org/CVERecord?id=CVE-2004-0213,,,TAXONOMY NAME - CLASP:ENTRY NAME:Trust of system event data TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP29:ENTRY NAME:Faulty endpoint authentication::,,"Software Development,Research Concept"
347,Improper Verification of Cryptographic Signature,Base,Draft,"The product does not verify, or incorrectly verifies, the cryptographic signature for data.",,NATURE:ChildOf:CWE ID:345 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:345 VIEW ID:1003 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Access Control SCOPE - Integrity SCOPE - Confidentiality IMPACT - Gain Privileges or Assume Identity IMPACT - Modify Application Data IMPACT - Execute Unauthorized Code or Commands NOTE - An attacker could gain access to sensitive data and possibl,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,REFERENCE - CVE-2002-1796 DESCRIPTION - Does not properly verify signatures for trusted entities. LINK - https://www.cve.org/CVERecord?id=CVE-2002-1796  REFERENCE - CVE-2005-2181 DESCRIPTION - Insufficient verification allows spoofing. LINK - https://www.,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Improperly Verified Signature TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SEC06-J:ENTRY NAME:Do not rely on the default automatic signature verification provided by URLClassLoader and j,,"Software Development,Research Concept"
1224,Improper Restriction of Write-Once Bit Fields,Base,Incomplete,"The hardware design control register sticky bits or write-once bit fields are improperly implemented, such that they can be reprogrammed by software.",Integrated circuits and hardware IP software programmable controls and settings are commonly stored in register circuits. These register contents have to be initialized at hardware reset to define default values that are hard coded in the hardware descrip,NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Verilog LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:VHDL LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:System on Chip TECHNOLOGY PREVALENCE:Undetermined,,,"PHASE - Architecture and Design PHASE - Implementation: NOTE - Such issues could be introduced during implementation of hardware design, since IP parameters and defaults are defined in HDL code and identified later during Testing or System Configuration p",SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Access Control IMPACT - Varies by Context NOTE - System configuration cannot be programmed in a secure way.,,PHASE - Architecture and Design DESCRIPTION - During hardware design all register write-once or sticky fields must be evaluated for proper configuration.  PHASE - Testing DESCRIPTION - The testing  PHASE should use automated tools to test that values are ,,,,,,"Hardware Development,Research Concept"
1265,Unintended Reentrant Invocation of Non-reentrant Code Via Nested Calls,Base,Draft,"During execution of non-reentrant code, the product performs a call that unintentionally produces a nested invocation of the non-reentrant code.","In a complex product, a single function call may lead to many different possible code paths, some of which may involve deeply nested calls. It may be difficult to foresee all possible code paths that could emanate from a given function call. In some syste",NATURE:ChildOf:CWE ID:691 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:663 VIEW ID:1000 NATURE:CanPrecede:CWE ID:416 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,#VALUE!,SCOPE - Integrity IMPACT - Unexpected State LIKELIHOOD - Unknown NOTE - Exploitation of this weakness can leave the application in an unexpected state and cause variables to be reassigned before the first invocation has completed. This may eventually resu,,"PHASE - Architecture and Design DESCRIPTION - When architecting a system that will execute untrusted code in response to events, consider executing the untrusted event handlers asynchronously (asynchronous message passing) as opposed to executing them syn","REFERENCE - CVE-2014-1772 DESCRIPTION - In this vulnerability, by registering a malicious onerror handler, an adversary can produce unexpected re-entrance of a CDOMRange object. [REF-1098] LINK - https://www.cve.org/CVERecord?id=CVE-2014-1772  REFERENCE -",,,,,"Software Development,Research Concept"
690,Unchecked Return Value to NULL Pointer Dereference,Compound,Draft,"The product does not check for an error after calling a function that can return with a NULL pointer if the function fails, which leads to a resultant NULL pointer dereference.","While unchecked return value weaknesses are not limited to returns of NULL pointers (see the examples in CWE-252), functions often return NULL to indicate an error status. When this error condition is not checked, a NULL pointer dereference can occur.",NATURE:StartsWith:CWE ID:252 VIEW ID:709:CHAIN ID:690 NATURE:ChildOf:CWE ID:252 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,,"PHASE - Implementation: NOTE - A typical occurrence of this weakness occurs when an application includes user-controlled input to a malloc() call. The related code might be correct with respect to preventing buffer overflows, but if a large value is provi","SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart  SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands IMPACT - Read Memory IMPACT - Modify Memory NOTE - In rare circumstances, when NULL","METHOD - Black Box DESCRIPTION - This typically occurs in rarely-triggered error conditions, reducing the chances of detection during black box testing.  METHOD - White Box DESCRIPTION - Code analysis can require knowledge of API behaviors for library fun",,REFERENCE - CVE-2008-1052 DESCRIPTION - Large Content-Length value leads to NULL pointer de REFERENCE when malloc fails. LINK - https://www.cve.org/CVERecord?id=CVE-2008-1052  REFERENCE - CVE-2006-6227 DESCRIPTION - Large message length field leads to NUL,,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:EXP34-C:ENTRY NAME:Do not dereference null pointers:MAPPING FIT:CWE More Specific TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:ERR08-J:ENTRY NAME:Do not catch NullPointerExce,,Research Concept
826,Premature Release of Resource During Expected Lifetime,Base,Incomplete,The product releases a resource that is still intended to be used by itself or another actor.,"This weakness focuses on errors in which the product should not release a resource, but performs the release anyway. This is different than a weakness in which the product releases a resource at the appropriate time, but it maintains a reference to the re",NATURE:ChildOf:CWE ID:666 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:672 VIEW ID:1000,,,,,#VALUE!,"SCOPE - Confidentiality IMPACT - Read Application Data IMPACT - Read Memory NOTE - If the released resource is subsequently reused or reallocated, then a read operation on the original resource might access sensitive data that is associated with a differe",,,"REFERENCE - CVE-2009-3547 DESCRIPTION - Chain: race condition (CWE-362) might allow resource to be released before operating on it, leading to NULL de REFERENCE (CWE-476) LINK - https://www.cve.org/CVERecord?id=CVE-2009-3547",,,,"TYPE - Research Gap NOTE - Under-studied and under-reported as of September 2010. This weakness has been reported in high-visibility software, although the focus has been primarily on memory allocation and de-allocation. There are very few examples of thi","Software Development,Research Concept"
1076,Insufficient Adherence to Expected Conventions,Class,Incomplete,"The product's architecture, source code, design, documentation, or other artifact does not follow required conventions.","This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,,,Research Concept
654,Reliance on a Single Factor in a Security Decision,Base,Draft,"A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.",,NATURE:ChildOf:CWE ID:657 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:693 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,"TERM - Separation of Privilege DESCRIPTION - Some people and publications use the term Separation of Privilege to describe this weakness, but this term has dual meanings in current usage. While this entry is closely associated with the original definition",PHASE - Architecture and Design PHASE - Implementation PHASE - Operation,"SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - If the single factor is compromised (e.g. by theft or spoofing), then the integrity of the entire security mechanism can be violated with respect to the user that is identified by t",,PHASE - Architecture and Design DESCRIPTION - Use multiple simultaneous checks before granting access to critical operations or granting critical privileges. A weaker but helpful mitigation is to use several successive checks (multiple layers of security),"REFERENCE - CVE-2022-35248 DESCRIPTION - Chat application skips validation when Central Authentication Service (CAS) is enabled, effectively removing the second factor from two-factor authentication LINK - https://www.cve.org/CVERecord?id=CVE-2022-35248",,,TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-1:ENTRY NAME:Req SD-3 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-1:ENTRY NAME:Req SD-4 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-1:ENTRY NAME:Req SI-1::,"TYPE - Maintenance NOTE - This entry is closely associated with the term Separation of Privilege. This term is used in several different ways in the industry, but they generally combine two closely related principles: compartmentalization (CWE-653) and us","Software Development,Research Concept"
797,Only Filtering Special Elements at an Absolute Position,Variant,Incomplete,"The product receives data from an upstream component, but only accounts for special elements at an absolute position (e.g. byte number 10), thereby missing remaining special elements that may exist before sending it to a downstream component.",,NATURE:ChildOf:CWE ID:795 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Integrity IMPACT - Unexpected State,,,,,,,,Research Concept
317,Cleartext Storage of Sensitive Information in GUI,Variant,Draft,The product stores sensitive information in cleartext within the GUI.,"An attacker can often obtain data from a GUI, even if hidden, by using an API to directly access GUI objects such as windows and menus. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encodi",NATURE:ChildOf:CWE ID:312 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Windows OPERATING SYSTEM PREVALENCE:Sometimes,,,PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.,SCOPE - Confidentiality IMPACT - Read Memory IMPACT - Read Application Data,,,REFERENCE - CVE-2002-1848 DESCRIPTION - Unencrypted passwords stored in GUI dialog may allow local users to access the passwords. LINK - https://www.cve.org/CVERecord?id=CVE-2002-1848,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Plaintext Storage in GUI TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::,"TYPE - Terminology NOTE - Different people use cleartext and plaintext to mean the same thing: the lack of encryption. However, within cryptography, these have more precise meanings. Plaintext is the information just before it is fed into a cryptographic ",Research Concept
548,Exposure of Information Through Directory Listing,Variant,Draft,"A directory listing is inappropriately exposed, yielding potentially sensitive information to attackers.",A directory listing provides an attacker with the complete index of all the resources located inside of the directory. The specific risks and consequences vary depending on which files are listed and accessible.,NATURE:ChildOf:CWE ID:497 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation PHASE - Operation,"SCOPE - Confidentiality IMPACT - Read Files or Directories NOTE - Exposing the contents of a directory can lead to an attacker gaining access to source code or providing useful information for the attacker to devise exploits, such as creation times of fil","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Architecture and Design System Configuration DESCRIPTION - Recommendations include restricting access to important directories or files by adopting a need to know requirement for both the document and server root, and turning off features such as ",,,,TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A10:ENTRY NAME:Insecure Configuration Management:MAPPING FIT:CWE More Specific TAXONOMY NAME - WASC:ENTRY ID:16:ENTRY NAME:Directory Indexing::,,Research Concept
688,Function Call With Incorrect Variable or Reference as Argument,Variant,Draft,"The product calls a function, procedure, or routine, but the caller specifies the wrong variable or reference as one of the arguments, which may lead to undefined behavior and resultant weaknesses.",,NATURE:ChildOf:CWE ID:628 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Perl LANGUAGE PREVALENCE:Undetermined,,,"PHASE - Implementation: NOTE - This problem typically occurs when the programmer makes a typo, or copy and paste errors.",SCOPE - Other IMPACT - Quality Degradation,"METHOD - Other DESCRIPTION - While this weakness might be caught by the compiler in some languages, it can occur more frequently in cases in which the called function accepts variable numbers of arguments, such as format strings in C. It also can occur in",PHASE - Testing DESCRIPTION - Because this function call often produces incorrect behavior it will usually be detected during testing or normal operation of the product. During testing exercise all possible control paths will typically expose this weaknes,"REFERENCE - CVE-2005-2548 DESCRIPTION - Kernel code specifies the wrong variable in first argument, leading to resultant NULL pointer de REFERENCE. LINK - https://www.cve.org/CVERecord?id=CVE-2005-2548",,,,,Research Concept
449,The UI Performs the Wrong Action,Base,Incomplete,The UI performs the wrong action with respect to the user's request.,,NATURE:ChildOf:CWE ID:446 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Quality Degradation IMPACT - Varies by Context,,PHASE - Testing DESCRIPTION - Perform extensive functionality testing of the UI. The UI should behave as specified.,"REFERENCE - CVE-2001-1387 DESCRIPTION - Network firewall accidentally implements one command line option as if it were another, possibly leading to behavioral infoleak. LINK - https://www.cve.org/CVERecord?id=CVE-2001-1387  REFERENCE - CVE-2001-0081 DESCR",,,TAXONOMY NAME - PLOVER:ENTRY NAME:The UI performs the wrong action::,,"Software Development,Research Concept"
785,Use of Path Manipulation Function without Maximum-sized Buffer,Variant,Incomplete,"The product invokes a function for normalizing paths or file names, but it provides an output buffer that is smaller than the maximum possible size, such as PATH_MAX.","Passing an inadequately-sized output buffer to a path manipulation function can result in a buffer overflow. Such functions include realpath(), readlink(), PathAppend(), and others.",NATURE:ChildOf:CWE ID:676 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:120 VIEW ID:1000 NATURE:ChildOf:CWE ID:20 VIEW ID:700 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,"Windows provides a large number of utility functions that manipulate buffers containing filenames. In most cases, the result is returned in a buffer that is passed in as input. (Usually the filename is modified in place.) Most functions require the buffer",,PHASE - Implementation,"SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability IMPACT - Modify Memory IMPACT - Execute Unauthorized Code or Commands IMPACT - DoS -  Crash, Exit, or Restart",,PHASE - Implementation DESCRIPTION - Always specify output buffers large enough to handle the maximum-size possible result from path manipulation functions.,,,Memory File or Directory,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Often Misused: File System TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP9:ENTRY NAME:Faulty String Expansion::,"TYPE - Maintenance NOTE - This entry is at a much lower level of abstraction than most entries because it is function-specific. It also has significant overlap with other entries that can vary depending on the perspective. For example, incorrect usage cou",Research Concept
924,Improper Enforcement of Message Integrity During Transmission in a Communication Channel,Base,Incomplete,"The product establishes a communication channel with an endpoint and receives a message from that endpoint, but it does not sufficiently ensure that the message was not modified during transmission.",Attackers might be able to modify the message and spoof the endpoint by interfering with the data as it crosses the network or by redirecting the connection to a system under their control.,NATURE:ChildOf:CWE ID:345 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:345 VIEW ID:1003 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,"SCOPE - Integrity SCOPE - Confidentiality IMPACT - Gain Privileges or Assume Identity NOTE - If an attackers can spoof the endpoint, the attacker gains all the privileges that were intended for the original endpoint.",,,,,,,"TYPE - Maintenance NOTE - This entry should be made more comprehensive in later CWE versions, as it is likely an important design flaw that underlies (or chains to) other weaknesses.::","Software Development,Research Concept"
1051,Initialization with Hard-Coded Network Resource Configuration Data,Base,Incomplete,The product initializes data using hard-coded values that act as network resource identifiers.,"This issue can prevent the product from running reliably, e.g. if it runs in an environment does not use the hard-coded network resource identifiers. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnera",NATURE:ChildOf:CWE ID:1419 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Reliability,,,,,,TAXONOMY NAME - OMG ASCRM:ENTRY ID:ASCRM-RLB-18::,,"Software Development,Research Concept"
270,Privilege Context Switching Error,Base,Draft,The product does not properly manage privileges while it is switching between different contexts that have different privileges or spheres of control.,,NATURE:ChildOf:CWE ID:269 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. PHASE - Operation,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - A user can assume the identity of another user with separate privileges in another context. This will give the user unauthorized access that may allow them to acquire the access inf,,"PHASE - Architecture and Design Operation DESCRIPTION - Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software.  PHASE - Architecture and Design Operation STRATEGY - Environment Hardening D",REFERENCE - CVE-2002-1688 DESCRIPTION - Web browser cross domain problem when user hits back button. LINK - https://www.cve.org/CVERecord?id=CVE-2002-1688  REFERENCE - CVE-2003-1026 DESCRIPTION - Web browser cross domain problem when user hits back button,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Privilege Context Switching Error::,TYPE - Research Gap NOTE - This concept needs more study.::,"Software Development,Research Concept"
767,Access to Critical Private Variable via Public Method,Base,Incomplete,The product defines a public method that reads or modifies a private variable.,"If an attacker modifies the variable to contain unexpected values, this could violate assumptions from other parts of the code. Additionally, if an attacker can read the private variable, it may expose sensitive information or make it easier to launch fur",NATURE:ChildOf:CWE ID:668 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C# LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity SCOPE - Other IMPACT - Modify Application Data IMPACT - Other,,PHASE - Implementation DESCRIPTION - Use class accessor and mutator methods appropriately. Perform validation when accepting data from a public method that is intended to modify a critical private variable. Also be sure that appropriate access controls ar,,,,TAXONOMY NAME - CLASP:ENTRY NAME:Failure to protect stored data from modification TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data TAXONOMY NAME - SEI CERT Perl Coding Standard:ENTRY ID:OOP31-PL:ENTRY NAME:Do not access priva,"TYPE - Maintenance NOTE - This entry is closely associated with access control for public methods. If the public methods are restricted with proper access controls, then the information in the private variable will not be exposed to unexpected parties. Th","Software Development,Research Concept"
75,Failure to Sanitize Special Elements into a Different Plane (Special Element Injection),Class,Draft,The product does not adequately filter user-controlled input for special elements with control implications.,,NATURE:ChildOf:CWE ID:74 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability IMPACT - Modify Application Data IMPACT - Execute Unauthorized Code or Commands,,PHASE - Requirements DESCRIPTION - Programming languages and supporting technologies might be chosen which are not subject to these issues.  PHASE - Implementation DESCRIPTION - Utilize an appropriate mix of allowlist and denylist parsing to filter specia,,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Special Element Injection::,,Research Concept
391,Unchecked Error Condition,Base,Incomplete,"[PLANNED FOR DEPRECATION. SEE MAINTENANCE NOTES AND CONSIDER CWE-252, CWE-248, OR CWE-1069.] Ignoring exceptions and other error conditions may allow an attacker to induce unexpected behavior unnoticed.",,NATURE:ChildOf:CWE ID:754 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:703 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:703 VIEW ID:1340 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Integrity SCOPE - Other IMPACT - Varies by Context IMPACT - Unexpected State IMPACT - Alter Execution Logic,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Requirements DESCRIPTION - The choice between a language which has named or unnamed exceptions needs to be done. While unnamed exceptions exacerbate the chance of not properly dealing with an exception, named exceptions suffer from the up call ver",,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Unchecked Return Value TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Empty Catch Block TAXONOMY NAME - CLASP:ENTRY NAME:Uncaught exception TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A7:ENTRY NAME:Improper Error Handli,"TYPE - Maintenance NOTE - This entry is slated for deprecation; it has multiple widespread interpretations by CWE analysts. It currently combines information from three different taxonomies, but each taxonomy is talking about a slightly different issue. C","Software Development,Research Concept"
509,Replicating Malicious Code (Virus or Worm),Base,Incomplete,"Replicating malicious code, including viruses and worms, will attempt to attack other systems once it has successfully compromised the target system or the product.",,NATURE:ChildOf:CWE ID:507 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation PHASE - Operation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands,,PHASE - Operation DESCRIPTION - Antivirus software scans for viruses or worms.  PHASE - Installation DESCRIPTION - Always verify the integrity of the software that is being installed.,,,,TAXONOMY NAME - Landwehr:ENTRY NAME:Replicating (virus)::,,Research Concept
1236,Improper Neutralization of Formula Elements in a CSV File,Base,Incomplete,"The product saves user-provided information into a Comma-Separated Value (CSV) file, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as a command when the file is opened by a spreadsheet product.","User-provided data is often saved to traditional databases. This data can be exported to a CSV file, which allows users to read the data using spreadsheet software such as Excel, Numbers, or Calc. This software interprets entries beginning with '=' as for",NATURE:ChildOf:CWE ID:74 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:74 VIEW ID:1003 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY NAME:Other T,,TERM - CSV Injection TERM - Formula Injection TERM - Excel Macro Injection::,"PHASE - Implementation: NOTE - The weakness is in the implementation of a software's CSV export feature, in particular how it formats formula entries as the output gets flattened into a text file.",SCOPE - Confidentiality IMPACT - Read Application Data IMPACT - Execute Unauthorized Code or Commands LIKELIHOOD - Low NOTE - Current versions of Excel warn users of untrusted content.,,"PHASE - Implementation DESCRIPTION - When generating CSV output, ensure that formula-sensitive metacharacters are effectively escaped or removed from all data before storage in the resultant CSV. Risky characters include '=' (equal), '+' (plus), '-' (minu",REFERENCE - CVE-2019-12134 DESCRIPTION - Low privileged user can trigger CSV injection through a contact form field value LINK - https://www.cve.org/CVERecord?id=CVE-2019-12134  REFERENCE - CVE-2019-4521 DESCRIPTION - Cloud management product allows arbit,,,,,"Software Development,Research Concept"
463,Deletion of Data Structure Sentinel,Base,Incomplete,The accidental deletion of a data-structure sentinel can cause serious programming logic problems.,Often times data-structure sentinels are used to mark structure of the data structure. A common example of this is the null character at the end of strings. Another common example is linked lists which may contain a sentinel to mark the end of the list. I,NATURE:ChildOf:CWE ID:707 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:464 VIEW ID:1000,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Availability SCOPE - Other IMPACT - Other NOTE - Generally this error will cause the data structure to not work properly.  SCOPE - Authorization SCOPE - Other IMPACT - Other NOTE - If a control character, such as NULL is removed, one may cause res",,PHASE - Architecture and Design DESCRIPTION - Use an abstraction library to abstract away risky APIs. Not a complete solution.  PHASE - Build and Compilation STRATEGY - Compilation or Build Hardening DESCRIPTION - Run or compile the software using feature,,,,TAXONOMY NAME - CLASP:ENTRY NAME:Deletion of data-structure sentinel::,,"Software Development,Research Concept"
369,Divide By Zero,Base,Draft,The product divides a value by zero.,"This weakness typically occurs when an unexpected value is provided to the product, or if an error occurs that is not properly detected. It frequently occurs in calculations involving physical dimensions such as size, length, width, and height.",NATURE:ChildOf:CWE ID:682 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:682 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:682 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:682 VIEW ID:1340 ORDINAL:Primary,,,,,PHASE - Implementation,"SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart NOTE - A Divide by Zero results in a crash.","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,REFERENCE - CVE-2007-3268 DESCRIPTION - Invalid size value leads to divide by zero. LINK - https://www.cve.org/CVERecord?id=CVE-2007-3268  REFERENCE - CVE-2007-2723 DESCRIPTION - Empty content triggers divide by zero. LINK - https://www.cve.org/CVERecord?,,,TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FLP03-C:ENTRY NAME:Detect and handle floating point errors TAXONOMY NAME - CERT C Secure Coding:ENTRY I,,"Software Development,Research Concept"
38,Path Traversal: 'absolutepathnamehere',Variant,Draft,"The product accepts input in the form of a backslash absolute path ('absolutepathnamehere') without appropriate validation, which can allow an attacker to traverse the file system to unintended locations or access arbitrary files.",,NATURE:ChildOf:CWE ID:36 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,"PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n",REFERENCE - CVE-1999-1263 DESCRIPTION - Mail client allows remote attackers to overwrite arbitrary files via an e-mail message containing a uuencoded attachment that specifies the full pathname for the file to be modified. LINK - https://www.cve.org/CVERe,,,TAXONOMY NAME - PLOVER:ENTRY NAME:absolutepathnamehere ('backslash absolute path') TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FIO05-C:ENTRY NAME:Identify files using multiple file attributes TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY,,Research Concept
1043,Data Element Aggregating an Excessively Large Number of Non-Primitive Elements,Base,Incomplete,The product uses a data element that has an excessively large number of sub-elements with non-primitive data types such as structures or aggregated objects.,"This issue can make the product perform more slowly. If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability. While the interpretation of excessively large may vary for each product or developer, CIS",NATURE:ChildOf:CWE ID:1093 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Performance,,,,,,TAXONOMY NAME - OMG ASCPEM:ENTRY ID:ASCPEM-PRF-12::,,"Software Development,Research Concept"
694,Use of Multiple Resources with Duplicate Identifier,Base,Incomplete,"The product uses multiple resources that can have the same identifier, in a context in which unique identifiers are required.","If the product assumes that each resource has a unique identifier, the product could operate on the wrong resource if attackers can cause multiple resources to be associated with the same identifier.",NATURE:ChildOf:CWE ID:99 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:573 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,"SCOPE - Access Control IMPACT - Bypass Protection Mechanism NOTE - If unique identifiers are assumed when protecting sensitive resources, then duplicate identifiers might allow attackers to bypass the protection.  SCOPE - Other IMPACT - Quality Degradatio",,"PHASE - Architecture and Design DESCRIPTION - Where possible, use unique identifiers. If non-unique identifiers are detected, then do not operate any resource with a non-unique identifier and report the error appropriately.","REFERENCE - CVE-2013-4787 DESCRIPTION - chain: mobile OS verifies cryptographic signature of file in an archive, but then installs a different file with the same name that is also listed in the archive. LINK - https://www.cve.org/CVERecord?id=CVE-2013-478",,,,"TYPE - Relationship NOTE - This weakness is probably closely associated with other issues related to doubling, such as CWE-675 (Duplicate Operations on Resource). It's often a case of an API contract violation (CWE-227).::","Software Development,Research Concept"
110,Struts: Validator Without Form Field,Variant,Draft,Validation fields that do not appear in forms they are associated with indicate that the validation logic is out of date.,It is easy for developers to forget to update validation logic when they make changes to an ActionForm class. One indication that validation logic is not being properly maintained is inconsistencies between the action form and the validation form. Althoug,NATURE:ChildOf:CWE ID:1164 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:20 VIEW ID:700 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation PHASE - Operation,SCOPE - Other IMPACT - Other NOTE - It is critically important that validation logic be maintained and kept in sync with the rest of the application. Unchecked input is the root cause of some of today's worst and most common software security problems. Cr,"METHOD - Automated Static Analysis DESCRIPTION - To find the issue in the implementation, manual checks or automated static analysis could be applied to the XML configuration files. EFFECTIVENESS - Moderate  METHOD - Manual Static Analysis DESCRIPTION - T",,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Struts: Validator Without Form Field TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,Research Concept
771,Missing Reference to Active Allocated Resource,Base,Incomplete,"The product does not properly maintain a reference to a resource that has been allocated, which prevents the resource from being reclaimed.","This does not necessarily apply in languages or frameworks that automatically perform garbage collection, since the removal of all references may act as a signal that the resource is ready to be reclaimed.",NATURE:ChildOf:CWE ID:400 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation,SCOPE - Availability IMPACT - DoS -  Resource Consumption (Other) NOTE - An attacker that can influence the allocation of resources that are not properly maintained could deplete the available resource pool and prevent all other processes from accessing t,,"PHASE - Operation Architecture and Design STRATEGY - Resource Limitation DESCRIPTION - Use resource-limiting settings provided by the operating system or environment. For example, when managing system resources in POSIX, setrlimit() can be used to set lim",,,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FIO42-C:ENTRY NAME:Close files when they are no longer needed:MAPPING FIT:CWE More Abstract TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:MEM31-C:ENTRY NAME:Free dynamically allocated memory when no longer nee,,"Software Development,Research Concept"
156,Improper Neutralization of Whitespace,Variant,Draft,"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as whitespace when they are sent to a downstream component.","This can include space, tab, etc.",NATURE:ChildOf:CWE ID:138 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,TERM - White space::,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,"PHASE - DESCRIPTION - Developers should anticipate that whitespace will be injected/removed/manipulated in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appropriate input ","REFERENCE - CVE-2002-0637 DESCRIPTION - MIE. virus protection bypass with RFC violations involving extra whitespace, or missing whitespace. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0637  REFERENCE - CVE-2004-0942 DESCRIPTION - CPU consumption with",,,TAXONOMY NAME - PLOVER:ENTRY ID:SPEC.WHITESPACE:ENTRY NAME:Whitespace TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,TYPE - Relationship NOTE - Can overlap other separator characters or delimiters.::,Research Concept
510,Trapdoor,Base,Incomplete,"A trapdoor is a hidden piece of code that responds to a special input, allowing its user access to resources without passing through the normal security enforcement mechanism.",,NATURE:ChildOf:CWE ID:506 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Architecture and Design PHASE - Implementation PHASE - Operation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Access Control IMPACT - Execute Unauthorized Code or Commands IMPACT - Bypass Protection Mechanism,"METHOD - Automated Static Analysis - Binary or Bytecode DESCRIPTION - According to SOAR, the following detection techniques may be useful  Cost effective for partial coverage  Inter-application Flow Analysis Binary / Bytecode simple extractor - strings, E","PHASE - Installation DESCRIPTION - Always verify the integrity of the software that is being installed.  PHASE - Testing DESCRIPTION - Identify and closely inspect the conditions for entering privileged areas of the code, especially those related to authe",,,,TAXONOMY NAME - Landwehr:ENTRY NAME:Trapdoor::,,Research Concept
54,Path Equivalence: 'filedir' (Trailing Backslash),Variant,Incomplete,"The product accepts path input in the form of trailing backslash ('filedir') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",,NATURE:ChildOf:CWE ID:41 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:162 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same inpu,REFERENCE - CVE-2004-0847 DESCRIPTION - web framework for .NET allows remote attackers to bypass authentication for .aspx files in restricted directories via a request containing a (1) (backslash) or (2) %5C (encoded backslash) LINK - https://www.cve.org/,,,TAXONOMY NAME - PLOVER:ENTRY NAME:filedir (trailing backslash) TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,,Research Concept
556,ASP.NET Misconfiguration: Use of Identity Impersonation,Variant,Incomplete,Configuring an ASP.NET application to run with impersonated credentials may give the application unnecessary privileges.,The use of impersonated credentials allows an ASP.NET application to run with either the privileges of the client on whose behalf it is executing or with arbitrary privileges granted in its configuration.,NATURE:ChildOf:CWE ID:266 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation PHASE - Operation,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity,,PHASE - Architecture and Design DESCRIPTION - Use the least privilege principle.,,,,,,Research Concept
316,Cleartext Storage of Sensitive Information in Memory,Variant,Draft,The product stores sensitive information in cleartext in memory.,"The sensitive memory might be saved to disk, stored in a core dump, or remain uncleared if the product crashes, or if the programmer does not properly clear the memory before freeing it. It could be argued that such problems are usually only exploitable b",NATURE:ChildOf:CWE ID:312 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.,SCOPE - Confidentiality IMPACT - Read Memory,,,REFERENCE - CVE-2001-1517 DESCRIPTION - Sensitive authentication information in cleartext in memory. LINK - https://www.cve.org/CVERecord?id=CVE-2001-1517  REFERENCE - CVE-2001-0984 DESCRIPTION - Password protector leaves passwords in memory when window i,,Memory,TAXONOMY NAME - PLOVER:ENTRY NAME:Plaintext Storage in Memory TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::,"TYPE - Relationship NOTE - This could be a resultant weakness, e.g. if the compiler removes code that was intended to wipe memory.  TYPE - Terminology NOTE - Different people use cleartext and plaintext to mean the same thing: the lack of encryption. Howe",Research Concept
1302,Missing Source Identifier in Entity Transactions on a System-On-Chip (SOC),Base,Incomplete,The product implements a security identifier mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. A transaction is sent without a security identifier.,"In a System-On-Chip (SoC), various integrated circuits and hardware engines generate transactions such as to access (reads/writes) assets or perform certain actions (e.g., reset, fetch, compute). A typical transaction is comprised of source identity (to i",NATURE:ChildOf:CWE ID:1294 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design: NOTE - Such issues could be introduced during hardware architecture and design and identified later during Testing or System Configuration phases. PHASE - Implementation: NOTE - Such issues could be introduced during imple,"SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Access Control IMPACT - Modify Memory IMPACT - Read Memory IMPACT - DoS -  Crash, Exit, or Restart IMPACT - Bypass Protection Mechanism IMPACT - Execute Unauthorized Code or Commands L",,PHASE - Architecture and Design DESCRIPTION - Transaction details must be reviewed for design inconsistency and common weaknesses.  PHASE - Implementation DESCRIPTION - Security identifier definition and programming flow must be tested in pre-silicon and ,,,,,,"Hardware Development,Research Concept"
1192,Improper Identifier for IP Block used in System-On-Chip (SOC),Base,Draft,"The System-on-Chip (SoC) does not have unique, immutable identifiers for each of its components.",A System-on-Chip (SoC) comprises several components (IP) with varied trust requirements. It is required that each IP is identified uniquely and should distinguish itself from other entities in the SoC without any ambiguity. The unique secured identity is ,NATURE:ChildOf:CWE ID:657 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:System on Chip TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation PHASE - Operation,SCOPE - Access Control IMPACT - Bypass Protection Mechanism LIKELIHOOD - High,,"PHASE - Architecture and Design STRATEGY - Separation of Privilege DESCRIPTION - Every identity generated in the SoC should be unique and immutable in hardware. The actions that an IP is trusted or not trusted should be clearly defined, implemented, confi",,,,,,"Hardware Development,Research Concept"
1188,Initialization of a Resource with an Insecure Default,Base,Incomplete,"The product initializes or sets a resource with a default that is intended to be changed by the administrator, but the default is not secure.","Developers often choose default values that leave the product as open and easy to use as possible out-of-the-box, under the assumption that the administrator can (or should) change the default value. However, this ease-of-use comes at a cost when the defa",NATURE:ChildOf:CWE ID:1419 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:665 VIEW ID:1003 ORDINAL:Primary,: ORDINALITY:Primary::,,,,#VALUE!,#VALUE!,,,REFERENCE - CVE-2022-36349 DESCRIPTION - insecure default variable initialization in BIOS firmware for a hardware board allows DoS LINK - https://www.cve.org/CVERecord?id=CVE-2022-36349  REFERENCE - CVE-2022-42467 DESCRIPTION - A generic database browser,,,,"TYPE - Maintenance NOTE - This entry improves organization of concepts under initialization. The typical CWE model is to cover Missing and Incorrect behaviors. Arguably, this entry could be named as Incorrect instead of Insecure. This might be changed in ","Software Development,Research Concept"
497,Exposure of Sensitive System Information to an Unauthorized Control Sphere,Base,Incomplete,The product does not properly prevent sensitive system-level information from being accessed by unauthorized actors who do not have the same level of access to the underlying system as the product does.,"Network-based products, such as web applications, often run on top of an operating system or similar environment. When the product communicates with outside parties, details about the underlying system are expected to remain hidden, such as path names for",NATURE:ChildOf:CWE ID:200 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Application Data,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design Implementation DESCRIPTION - Production applications should never use methods that generate internal details such as stack traces and error messages unless that information is directly committed to a log that is not viewabl,"REFERENCE - CVE-2021-32638 DESCRIPTION - Code analysis product passes access tokens as a command-line parameter or through an environment variable, making them visible to other processes via the ps command. LINK - https://www.cve.org/CVERecord?id=CVE-2021",,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:System Information Leak TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:ERR01-J:ENTRY NAME:Do not allow exceptions to expose sensitive information TAXONOMY NAME - Software Fa,,"Software Development,Research Concept"
583,finalize() Method Declared Public,Variant,Incomplete,The product violates secure coding principles for mobile code by declaring a finalize() method public.,"A product should never call finalize explicitly, except to call super.finalize() inside an implementation of finalize(). In mobile code situations, the otherwise error prone practice of manual garbage collection can become a security threat if an attacker",NATURE:ChildOf:CWE ID:668 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Alter Execution Logic IMPACT - Execute Unauthorized Code or Commands IMPACT - Modify Application Data,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation DESCRIPTION - If you are using finalize() as it was designed, there is no reason to declare finalize() with anything other than protected access.",,,,TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MET12-J:ENTRY NAME:Do not use finalizers TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP28:ENTRY NAME:Unexpected access points::,,Research Concept
574,EJB Bad Practices: Use of Synchronization Primitives,Variant,Draft,The product violates the Enterprise JavaBeans (EJB) specification by using thread synchronization primitives.,"The Enterprise JavaBeans specification requires that every bean provider follow a set of programming guidelines designed to ensure that the bean will be portable and behave consistently in any EJB container. In this case, the product violates the followin",NATURE:ChildOf:CWE ID:695 VIEW ID:1000 NATURE:ChildOf:CWE ID:821 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Quality Degradation,,PHASE - Implementation DESCRIPTION - Do not use Synchronization Primitives when writing EJBs.,,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP3:ENTRY NAME:Use of an improper API::,,Research Concept
521,Weak Password Requirements,Base,Draft,"The product does not require that users should have strong passwords, which makes it easier for attackers to compromise user accounts.",Authentication mechanisms often rely on a memorized secret (also known as a password) to provide an assertion of identity for a user of a system. It is therefore important that this password be of sufficient complexity and impractical for an adversary to ,NATURE:ChildOf:CWE ID:1391 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:287 VIEW ID:1003 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic. PHASE - Implementation: NOTE - Not enforcing the password policy stated in a products design can allow users to cr,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - An attacker could easily guess user passwords and gain access user accounts.,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Architecture and Design DESCRIPTION - A product's design should require adherance to an appropriate password policy. Specific password requirements depend strongly on contextual factors, but it is recommended to contain the following attributes  E",REFERENCE - CVE-2020-4574 DESCRIPTION - key server application does not require strong passwords LINK - https://www.cve.org/CVERecord?id=CVE-2020-4574,,,TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::,,"Software Development,Research Concept"
167,Improper Handling of Additional Special Element,Base,Draft,"The product receives input from an upstream component, but it does not handle or incorrectly handles when an additional unexpected special element is provided.",,NATURE:ChildOf:CWE ID:159 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:228 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,"PHASE - DESCRIPTION - Developers should anticipate that extra special elements will be injected in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appropriate input is proce",REFERENCE - CVE-2000-0116 DESCRIPTION - Extra < in front of SCRIPT tag bypasses XSS prevention. LINK - https://www.cve.org/CVERecord?id=CVE-2000-0116  REFERENCE - CVE-2001-1157 DESCRIPTION - Extra < in front of SCRIPT tag. LINK - https://www.cve.org/CVERe,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Extra Special Element::,,"Software Development,Research Concept"
584,Return Inside Finally Block,Base,Draft,"The code has a return statement inside a finally block, which will cause any thrown exception in the try block to be discarded.",,NATURE:ChildOf:CWE ID:705 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation,SCOPE - Other IMPACT - Alter Execution Logic,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - Do not use a return statement inside the finally block. The finally block should have cleanup code.,,,,TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:ERR04-J:ENTRY NAME:Do not complete abruptly from a finally block TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:ERR05-J:ENTRY NAME:Do not let,,"Software Development,Research Concept"
910,Use of Expired File Descriptor,Base,Incomplete,The product uses or accesses a file descriptor after it has been closed.,"After a file descriptor for a particular file or device has been released, it can be reused. The code might not write to the original file, since the reused file descriptor might reference a different file or device.",NATURE:ChildOf:CWE ID:672 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary: ORDINALITY:Resultant::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Sometimes LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Sometimes LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,TERM - Stale file descriptor::,PHASE - Implementation,"SCOPE - Confidentiality IMPACT - Read Files or Directories NOTE - The program could read data from the wrong file.  SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart NOTE - Accessing a file descriptor that has been closed can cause a crash.",,,,,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FIO46-C:ENTRY NAME:Do not access a closed file:MAPPING FIT:Exact::,,"Software Development,Research Concept"
1320,Improper Protection for Outbound Error Messages and Alert Signals,Base,Draft,Untrusted agents can disable alerts about signal conditions exceeding limits or the response mechanism that handles such alerts.,Hardware sensors are used to detect whether a device is operating within design limits. The threshold values for these limits are set by hardware fuses or trusted software such as a BIOS. Modification of these limits may be protected by hardware mechanism,NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:System,,,PHASE - Architecture and Design PHASE - Implementation,"SCOPE - Availability IMPACT - DoS -  Instability IMPACT - DoS -  Crash, Exit, or Restart IMPACT - Reduce Reliability IMPACT - Unexpected State LIKELIHOOD - High",,PHASE - Architecture and Design DESCRIPTION - Alert signals generated by critical events should be protected from access by untrusted agents. Only hardware or trusted firmware modules should be able to alter the alert configuration.,,,,,,"Hardware Development,Research Concept"
1091,Use of Object without Invoking Destructor Method,Base,Incomplete,The product contains a method that accesses an object but does not later invoke the element's associated finalize/destructor method.,"This issue can make the product perform more slowly by retaining memory and/or other resources longer than necessary. If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.",NATURE:ChildOf:CWE ID:772 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:1076 VIEW ID:1000,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Performance,,,,,,TAXONOMY NAME - OMG ASCPEM:ENTRY ID:ASCPEM-PRF-15::,,Research Concept
353,Missing Support for Integrity Check,Base,Draft,"The product uses a transmission protocol that does not include a mechanism for verifying the integrity of the data during transmission, such as a checksum.","If integrity check values or checksums are omitted from a protocol, there is no way of determining if data has been corrupted in transmission. The lack of checksum functionality in a protocol removes the first application-level check of data that can be u",NATURE:ChildOf:CWE ID:345 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:354 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase. PHASE - Implementation,SCOPE - Integrity SCOPE - Other IMPACT - Other NOTE - Data that is parsed and used may be corrupted.  SCOPE - Non-Repudiation SCOPE - Other IMPACT - Hide Activities IMPACT - Other NOTE - Without a checksum it is impossible to determine if any changes have,,"PHASE - Architecture and Design DESCRIPTION - Add an appropriately sized checksum to the protocol, ensuring that data received may be simply validated before it is parsed and used.  PHASE - Implementation DESCRIPTION - Ensure that the checksums present in",,,,TAXONOMY NAME - CLASP:ENTRY NAME:Failure to add integrity check value TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 2-4:ENTRY NAME:Req SP.03.03 RE(1) TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 2-4:ENTRY NAME:Req SP.04.02 RE(1) TAXONOMY NAME - ISA/IEC 62443,,"Software Development,Research Concept"
1086,Class with Excessive Number of Child Classes,Base,Incomplete,A class contains an unnecessarily large number of children.,"This issue makes it more difficult to understand and maintain the software, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities. Whil",NATURE:ChildOf:CWE ID:1093 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,TAXONOMY NAME - OMG ASCMM:ENTRY ID:ASCMM-MNT-18::,,"Software Development,Research Concept"
123,Write-what-where Condition,Base,Draft,"Any condition where the attacker has the ability to write an arbitrary value to an arbitrary location, often as the result of a buffer overflow.",,NATURE:ChildOf:CWE ID:787 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:119 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:119 VIEW ID:1340 ORDINAL:Primary,: ORDINALITY:Resultant::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability SCOPE - Access Control IMPACT - Modify Memory IMPACT - Execute Unauthorized Code or Commands IMPACT - Gain Privileges or Assume Identity IMPACT - DoS -  Crash, Exit, or Restart IMPACT - Bypass",,PHASE - Architecture and Design STRATEGY - Language Selection DESCRIPTION - Use a language that provides appropriate memory abstractions.  PHASE - Operation DESCRIPTION - Use OS-level preventative functionality integrated after the fact. Not a complete so,"REFERENCE - CVE-2022-21668 DESCRIPTION - Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190). LI",,,TAXONOMY NAME - CLASP:ENTRY NAME:Write-what-where condition TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:ARR30-C:ENTRY NAME:Do not form or use out-of-bounds pointers or array subscripts:MAPPING FIT:Imprecise TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:,,Research Concept
44,Path Equivalence: 'file.name' (Internal Dot),Variant,Incomplete,"The product accepts path input in the form of internal dot ('file.ordir') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",,NATURE:ChildOf:CWE ID:41 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,,,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Internal Dot - 'file.ordir' TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,TYPE - Relationship NOTE - An improper attempt to remove the internal dots from the string could lead to CWE-181 (Incorrect Behavior Order: Validate Before Filter).::,Research Concept
131,Incorrect Calculation of Buffer Size,Base,Draft,"The product does not correctly calculate the size to be used when allocating a buffer, which could lead to a buffer overflow.",,NATURE:ChildOf:CWE ID:682 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:682 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:682 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:682 VIEW ID:1340 ORDINAL:Primary NATURE:CanPrecede:CWE ID:119 VIEW I,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Integrity SCOPE - Availability SCOPE - Confidentiality IMPACT - DoS -  Crash, Exit, or Restart IMPACT - Execute Unauthorized Code or Commands IMPACT - Read Memory IMPACT - Modify Memory NOTE - If the incorrect calculation is used in the context of",METHOD - Automated Static Analysis DESCRIPTION - This weakness can often be detected using automated static analysis tools. Many modern tools use data flow analysis or constraint-based techniques to minimize the number of false positives. Automated static,"PHASE - Implementation DESCRIPTION - When allocating a buffer for the purpose of transforming, converting, or encoding an input, allocate enough memory to handle the largest possible encoding. For example, in a routine that converts & characters to & for ","REFERENCE - CVE-2020-17087 DESCRIPTION - Chain: integer truncation (CWE-197) causes small buffer allocation (CWE-131) leading to out-of-bounds write (CWE-787) in kernel pool, as exploited in the wild per CISA KEV. LINK - https://www.cve.org/CVERecord?id=C",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Other length calculation error TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:INT30-C:ENTRY NAME:Ensure that unsigned integer operations do not wrap:MAPPING FIT:Imprecise TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:MEM35,"TYPE - Maintenance NOTE - This is a broad category. Some examples include: simple math errors, incorrectly updating parallel counters, not accounting for size differences when transforming one input to another format (e.g. URL canonicalization or other tr","Software Development,Research Concept"
496,Public Data Assigned to Private Array-Typed Field,Variant,Incomplete,Assigning public data to a private array is equivalent to giving public access to the array.,,NATURE:ChildOf:CWE ID:664 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C# LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Modify Application Data NOTE - The contents of the array can be modified from outside the intended  SCOPE.,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - Do not allow objects to modify private members of a class.,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Public Data Assigned to Private Array-Typed Field TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP25:ENTRY NAME:Tainted input to variable::,,Research Concept
1333,Inefficient Regular Expression Complexity,Base,Draft,"The product uses a regular expression with an inefficient, possibly exponential worst-case computational complexity that consumes excessive CPU cycles.","Some regular expression engines have a feature called backtracking. If the token cannot match, the engine backtracks to a position that may result in a different token that can match. Backtracking becomes a weakness if all of these conditions are met: The",NATURE:ChildOf:CWE ID:407 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:407 VIEW ID:1003 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,"TERM - ReDoS DESCRIPTION - ReDoS is an abbreviation of Regular expression Denial of Service. TERM - Regular Expression Denial of Service DESCRIPTION - While this term is attack-focused, this is commonly used to describe the weakness. TERM - Catastrophic b","PHASE - Implementation: NOTE - A RegEx can be easy to create and read using unbounded matching characters, but the programmer might not consider the risk of excessive backtracking.",SCOPE - Availability IMPACT - DoS -  Resource Consumption (CPU) LIKELIHOOD - High,,"PHASE - Architecture and Design DESCRIPTION - Use regular expressions that do not support backtracking, e.g. by removing nested quantifiers. EFFECTIVENESS High  PHASE - System Configuration DESCRIPTION - Set backtracking limits in the configuration of the","REFERENCE - CVE-2020-5243 DESCRIPTION - server allows ReDOS with crafted User-Agent strings, due to overlapping capture groups that cause excessive backtracking. LINK - https://www.cve.org/CVERecord?id=CVE-2020-5243  REFERENCE - CVE-2021-21317 DESCRIPTION",,,,,"Software Development,Research Concept"
237,Improper Handling of Structural Elements,Base,Incomplete,The product does not handle or incorrectly handles inputs that are related to complex structures.,,NATURE:ChildOf:CWE ID:228 VIEW ID:1000 ORDINAL:Primary,,,,,#VALUE!,SCOPE - Integrity IMPACT - Unexpected State,,,,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Element Problems::,,"Software Development,Research Concept"
1107,Insufficient Isolation of Symbolic Constant Definitions,Base,Incomplete,"The source code uses symbolic constants, but it does not sufficiently place the definitions of these constants into a more centralized or isolated location.","This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",NATURE:ChildOf:CWE ID:1078 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,,,"Software Development,Research Concept"
1209,Failure to Disable Reserved Bits,Base,Incomplete,"The reserved bits in a hardware design are not disabled prior to production. Typically, reserved bits are used for future capabilities and should not support any functional logic in the design. However, designers might covertly use these bits to debug or ","Reserved bits are labeled as such so they can be allocated for a later purpose. They are not to do anything in the current design. However, designers might want to use these bits to debug or control/configure a future capability to help minimize time to m",NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:System,,,PHASE - Architecture and Design: NOTE - The Designer and Implementer have to make a conscious choice to do this PHASE - Implementation: NOTE - The Designer and Implementer have to make a conscious choice to do this PHASE - Documentation: NOTE - If documen,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Access Control SCOPE - Accountability SCOPE - Authentication SCOPE - Authorization SCOPE - Non-Repudiation IMPACT - Varies by Context NOTE - This type of weakness all depends on the ca,,"PHASE - Architecture and Design Implementation DESCRIPTION - Include a feature to disable reserved bits.  PHASE - Integration DESCRIPTION - Any writes to these reserve bits are blocked (e.g., ignored, access-protected, etc.), or an exception can be assert",,,,,,"Hardware Development,Research Concept"
290,Authentication Bypass by Spoofing,Base,Incomplete,This attack-focused weakness is caused by incorrectly implemented authentication schemes that are subject to spoofing attacks.,,NATURE:ChildOf:CWE ID:1390 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:287 VIEW ID:1003 ORDINAL:Primary,,,,,PHASE - Implementation,SCOPE - Access Control IMPACT - Bypass Protection Mechanism IMPACT - Gain Privileges or Assume Identity NOTE - This weakness can allow an attacker to access resources which are not otherwise accessible without proper authentication.,,,"REFERENCE - CVE-2022-30319 DESCRIPTION - S-bus functionality in a home automation product performs access control using an IP allowlist, which can be bypassed by a forged IP address. LINK - https://www.cve.org/CVERecord?id=CVE-2022-30319  REFERENCE - CVE-",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Authentication bypass by spoofing::,TYPE - Relationship NOTE - This can be resultant from insufficient verification.::,"Software Development,Research Concept"
327,Use of a Broken or Risky Cryptographic Algorithm,Class,Draft,The product uses a broken or risky cryptographic algorithm or protocol.,"Cryptographic algorithms are the methods by which data is scrambled to prevent observation or influence by unauthorized actors. Insecure cryptography can be exploited to expose sensitive information, modify data in unexpected ways, spoof identities of oth",NATURE:ChildOf:CWE ID:693 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:311 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Verilog LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:VHDL LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined TE,,,"PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic. PHASE - Implementation: NOTE - With hardware, the Architecture or Design Phase might start with compliant cryptogr",SCOPE - Confidentiality IMPACT - Read Application Data NOTE - The confidentiality of sensitive data may be compromised by the use of a broken or risky cryptographic algorithm.  SCOPE - Integrity IMPACT - Modify Application Data NOTE - The integrity of sen,METHOD - Automated Analysis DESCRIPTION - Automated  METHODs may be useful for recognizing commonly-used libraries or features that have become obsolete. EFFECTIVENESS - Moderate  METHOD - Manual Analysis DESCRIPTION - This weakness can be detected using ,"PHASE - Architecture and Design STRATEGY - Libraries or Frameworks DESCRIPTION - When there is a need to store or transmit sensitive data, use strong, up-to-date cryptographic algorithms to encrypt that data. Select a well-vetted algorithm that is current","REFERENCE - CVE-2022-30273 DESCRIPTION - SCADA-based protocol supports a legacy encryption mode that uses Tiny Encryption Algorithm (TEA) in ECB mode, which leaks patterns in messages and cannot protect integrity LINK - https://www.cve.org/CVERecord?id=CV",,,TAXONOMY NAME - CLASP:ENTRY NAME:Using a broken or risky cryptographic algorithm TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A8:ENTRY NAME:Insecure Storage:MAPPING FIT:CWE More Specific TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:MSC30-C:ENTRY NAME:Do n,"TYPE - Maintenance NOTE - Since CWE 4.4, various cryptography-related entries, including CWE-327 and CWE-1240, have been slated for extensive research, analysis, and community consultation to define consistent terminology, improve relationships, and reduc",Research Concept
311,Missing Encryption of Sensitive Data,Class,Draft,The product does not encrypt sensitive or critical information before storage or transmission.,"The lack of proper data encryption passes up the guarantees of confidentiality, integrity, and accountability that properly implemented encryption conveys.",NATURE:ChildOf:CWE ID:693 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase. PHASE - Operation,"SCOPE - Confidentiality IMPACT - Read Application Data NOTE - If the application does not use a secure channel, such as SSL, to exchange sensitive information, it is possible for an attacker with access to the network traffic to sniff packets from the con","METHOD - Manual Analysis DESCRIPTION - The characterizaton of sensitive data often requires domain-specific understanding, so manual  METHODs are useful. However, manual efforts might not achieve desired code coverage within limited time constraints. Blac",PHASE - Requirements DESCRIPTION - Clearly specify which data or resources are valuable enough that they should be protected by encryption. Require that any transmission or storage of this data/resource should use well-vetted encryption algorithms.  PHASE,REFERENCE - CVE-2009-2272 DESCRIPTION - password and username stored in cleartext in a cookie LINK - https://www.cve.org/CVERecord?id=CVE-2009-2272  REFERENCE - CVE-2009-1466 DESCRIPTION - password stored in cleartext in a file with insecure permissions L,,,TAXONOMY NAME - CLASP:ENTRY NAME:Failure to encrypt data TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A8:ENTRY NAME:Insecure Cryptographic Storage:MAPPING FIT:CWE More Specific TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A9:ENTRY NAME:Insecure Communicatio,TYPE - Relationship NOTE - There is an overlapping relationship between insecure storage of sensitive information (CWE-922) and missing encryption of sensitive information (CWE-311). Encryption is often used to prevent an attacker from reading the sensiti,Research Concept
530,Exposure of Backup File to an Unauthorized Control Sphere,Variant,Incomplete,A backup file is stored in a directory or archive that is made accessible to unauthorized actors.,"Often, older backup files are renamed with an extension such as .~bk to distinguish them from production files. The source code for old files that have been renamed in this manner and left in the webroot can often be retrieved. This renaming may have been",NATURE:ChildOf:CWE ID:552 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Operation: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.,"SCOPE - Confidentiality IMPACT - Read Application Data NOTE - At a minimum, an attacker who retrieves this file would have all the information contained in it, whether that be database calls, the format of parameters accepted by the application, or simply","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Policy DESCRIPTION - Recommendations include implementing a security policy within your organization that prohibits backing up web application source code in the webroot.,,,,,,Research Concept
46,Path Equivalence: 'filename ' (Trailing Space),Variant,Incomplete,"The product accepts path input in the form of trailing space ('filedir ') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",,NATURE:ChildOf:CWE ID:41 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:162 VIEW ID:1000 NATURE:CanPrecede:CWE ID:289 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,,REFERENCE - CVE-2001-0693 DESCRIPTION - Source disclosure via trailing encoded space %20 LINK - https://www.cve.org/CVERecord?id=CVE-2001-0693  REFERENCE - CVE-2001-0778 DESCRIPTION - Source disclosure via trailing encoded space %20 LINK - https://www.cve,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Trailing Space - 'filedir ' TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,,Research Concept
1264,Hardware Logic with Insecure De-Synchronization between Control and Data Channels,Base,Incomplete,The hardware logic for error handling and security checks can incorrectly forward data before the security check is complete.,Many high-performance on-chip bus protocols and processor data-paths employ separate channels for control and data to increase parallelism and maximize throughput. Bugs in the hardware logic that handle errors and security checks can make it possible for ,NATURE:ChildOf:CWE ID:821 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:1037 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design: NOTE - The weakness can be introduced in the data transfer or bus protocol itself or in the implementation. PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Memory IMPACT - Read Application Data,,PHASE - Architecture and Design DESCRIPTION - Thoroughly verify the data routing logic to ensure that any error handling or security checks effectively block illegal dataflows.,REFERENCE - CVE-2017-5754 DESCRIPTION - Systems with microprocessors utilizing speculative execution and indirect branch prediction may allow unauthorized disclosure of information to an attacker with local user access via a side-channel analysis of the d,,,,"TYPE - Maintenance NOTE - As of CWE 4.9, members of the CWE Hardware SIG are closely analyzing this entry and others to improve CWE's coverage of transient execution weaknesses, which include issues related to Spectre, Meltdown, and other attacks. Additio","Hardware Development,Research Concept"
293,Using Referer Field for Authentication,Variant,Draft,"The referer field in HTTP requests can be easily modified and, as such, is not a valid means of message integrity checking.",,NATURE:ChildOf:CWE ID:290 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,"The referer field in HTML requests can be simply modified by malicious users, rendering it useless as a means of checking the validity of the request in question.","TERM - referrer DESCRIPTION - While the proper spelling might be regarded as referrer, the HTTP RFCs and their implementations use referer, so this is regarded as the correct spelling.::",PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.,"SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - Actions, which may not be authorized otherwise, can be carried out as if they were validated by the server referred to.","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Architecture and Design DESCRIPTION - In order to usefully check if a given action is authorized, some means of strong authentication and method protection must be used. Use other means of authorization that cannot be simply spoofed. Possibilities",,,,TAXONOMY NAME - CLASP:ENTRY NAME:Using referrer field for authentication TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP29:ENTRY NAME:Faulty endpoint authentication::,,Research Concept
1331,Improper Isolation of Shared Resources in Network On Chip (NoC),Base,Stable,"The Network On Chip (NoC) does not isolate or incorrectly isolates its on-chip-fabric and internal resources such that they are shared between trusted and untrusted agents, creating timing channels.","Typically, network on chips (NoC) have many internal resources that are shared between packets from different trust domains. These resources include internal buffers, crossbars and switches, individual ports, and channels. The sharing of resources causes ",NATURE:ChildOf:CWE ID:653 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:668 VIEW ID:1000 NATURE:PeerOf:CWE ID:1189 VIEW ID:1194,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY NAME:Securit,"Network-on-chip (NoC) is a commonly-used term used for hardware interconnect fabrics used by multicore Systems-on-Chip (SoC). Communication between modules on the chip uses packet-based methods, with improved efficiency and scalability compared to bus arc",,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality SCOPE - Availability IMPACT - DoS -  Resource Consumption (Other) IMPACT - Varies by Context IMPACT - Other LIKELIHOOD - Medium NOTE - Attackers may infer data that belongs to a trusted agent. The methods used to perform this attac,METHOD - Manual Analysis DESCRIPTION - Providing marker flags to send through the interfaces coupled with examination of which users are able to read or manipulate the flags will help verify that the proper isolation has been achieved and is effective. EF,PHASE - Architecture and Design Implementation DESCRIPTION - Implement priority-based arbitration inside the NoC and have dedicated buffers or virtual channels for routing secret data from trusted agents.,REFERENCE - CVE-2021-33096 DESCRIPTION - Improper isolation of shared resource in a network-on-chip leads to denial of service LINK - https://www.cve.org/CVERecord?id=CVE-2021-33096,,,,,"Hardware Development,Research Concept"
119,Improper Restriction of Operations within the Bounds of a Memory Buffer,Class,Stable,"The product performs operations on a memory buffer, but it can read from or write to a memory location that is outside of the intended boundary of the buffer.",Certain languages allow direct addressing of memory locations and do not automatically ensure that these locations are valid for the memory buffer that is being referenced. This can cause read or write operations to be performed on memory locations that m,NATURE:ChildOf:CWE ID:118 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:20 VIEW ID:700 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Often LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Often LANGUAGE CLASS:Assembly LANGUAGE PREVALENCE:Undetermined,,"TERM - Buffer Overflow DESCRIPTION - This term has many different meanings to different audiences. From a CWE mapping perspective, this term should be avoided where possible. Some researchers, developers, and tools intend for it to mean write past the end",PHASE - Implementation,"SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands IMPACT - Modify Memory NOTE - If the memory accessible by the attacker can be effectively controlled, it may be possible to execute arbitrary cod",METHOD - Automated Static Analysis DESCRIPTION - This weakness can often be detected using automated static analysis tools. Many modern tools use data flow analysis or constraint-based techniques to minimize the number of false positives. Automated static,"PHASE - Requirements STRATEGY - Language Selection DESCRIPTION - Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, many languages that perform their own memory management","REFERENCE - CVE-2021-22991 DESCRIPTION - Incorrect URI normalization in application traffic product leads to buffer overflow, as exploited in the wild per CISA KEV. LINK - https://www.cve.org/CVERecord?id=CVE-2021-22991  REFERENCE - CVE-2020-29557 DESCRIP",,Memory,TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A5:ENTRY NAME:Buffer Overflows:MAPPING FIT:Exact TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:ARR00-C:ENTRY NAME:Understand how arrays work TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:ARR30-C:ENTRY NAME:Do no,"TYPE - Applicable Platform NOTE - It is possible in any programming languages without memory management support to attempt an operation outside of the bounds of a memory buffer, but the consequences will vary widely depending on the language, platform, an",Research Concept
204,Observable Response Discrepancy,Base,Incomplete,The product provides different responses to incoming requests in a way that reveals internal state information to an unauthorized actor outside of the intended control sphere.,"This issue frequently occurs during authentication, where a difference in failed-login messages could allow an attacker to determine if the username is valid or not. These exposures can be inadvertent (bug) or intentional (design).",NATURE:ChildOf:CWE ID:203 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality SCOPE - Access Control IMPACT - Read Application Data IMPACT - Bypass Protection Mechanism,,PHASE - Architecture and Design STRATEGY - Separation of Privilege DESCRIPTION - Compartmentalize the system to have safe areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always b,"REFERENCE - CVE-2002-2094 DESCRIPTION - This, and others, use .. attacks and monitor error responses, so there is overlap with directory traversal. LINK - https://www.cve.org/CVERecord?id=CVE-2002-2094  REFERENCE - CVE-2001-1483 DESCRIPTION - Enumeration",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Response discrepancy infoleak::,TYPE - Relationship NOTE - can overlap errors related to escalated privileges::,"Software Development,Research Concept"
409,Improper Handling of Highly Compressed Data (Data Amplification),Base,Incomplete,The product does not handle or incorrectly handles a compressed input with a very high compression ratio that produces a large output.,"An example of data amplification is a decompression bomb, a small ZIP file that can produce a large amount of data when it is decompressed.",NATURE:ChildOf:CWE ID:405 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,"SCOPE - Availability IMPACT - DoS -  Amplification IMPACT - DoS -  Crash, Exit, or Restart IMPACT - DoS -  Resource Consumption (CPU) IMPACT - DoS -  Resource Consumption (Memory) NOTE - System resources, CPU and memory, can be quickly consumed. This can ",,,REFERENCE - CVE-2009-1955 DESCRIPTION - XML bomb in web server module LINK - https://www.cve.org/CVERecord?id=CVE-2009-1955  REFERENCE - CVE-2003-1564 DESCRIPTION - Parsing library allows XML bomb LINK - https://www.cve.org/CVERecord?id=CVE-2003-1564,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Data Amplification TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS04-J:ENTRY NAME:Limit the size of files passed to ZipInputStream::,,"Software Development,Research Concept"
242,Use of Inherently Dangerous Function,Base,Draft,The product calls a function that can never be guaranteed to work safely.,Certain functions behave in dangerous ways regardless of how they are used. Functions in this category were often implemented without taking security concerns into account. The gets() function is unsafe because it does not perform bounds checking on the s,NATURE:ChildOf:CWE ID:1177 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Varies by Context,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation Requirements DESCRIPTION - Ban the use of dangerous functions. Use their safe equivalent.  PHASE - Testing DESCRIPTION - Use grep or static analysis tools to spot usage of dangerous functions.,"REFERENCE - CVE-2007-4004 DESCRIPTION - FTP client uses inherently insecure gets() function and is setuid root on some systems, allowing buffer overflow LINK - https://www.cve.org/CVERecord?id=CVE-2007-4004",,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Dangerous Functions TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:POS33-C:ENTRY NAME:Do not use vfork():MAPPING FIT:CWE More Abstract TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP3:ENTRY NAME:Use of,,"Software Development,Research Concept"
219,Storage of File with Sensitive Data Under Web Root,Variant,Draft,"The product stores sensitive data under the web document root with insufficient access control, which might make it accessible to untrusted parties.","Besides public-facing web pages and code, products may store sensitive data, code that is not directly invoked, or other files under the web document root of the web server. If the server is not configured or otherwise used to prevent direct access to tho",NATURE:ChildOf:CWE ID:552 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Operation: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic. PHASE - Implementation: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tact,SCOPE - Confidentiality IMPACT - Read Application Data,,PHASE - Implementation System Configuration DESCRIPTION - Avoid storing information under the web root directory.  PHASE - System Configuration DESCRIPTION - Access control permissions should be set to prevent reading/writing of sensitive files inside/out,REFERENCE - CVE-2005-1835 DESCRIPTION - Data file under web root. LINK - https://www.cve.org/CVERecord?id=CVE-2005-1835  REFERENCE - CVE-2005-2217 DESCRIPTION - Data file under web root. LINK - https://www.cve.org/CVERecord?id=CVE-2005-2217  REFERENCE - C,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Sensitive Data Under Web Root TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A10:ENTRY NAME:Insecure Configuration Management:MAPPING FIT:CWE More Specific::,,Research Concept
807,Reliance on Untrusted Inputs in a Security Decision,Base,Incomplete,"The product uses a protection mechanism that relies on the existence or values of an input, but the input can be modified by an untrusted actor in a way that bypasses the protection mechanism.","Developers may assume that inputs such as cookies, environment variables, and hidden form fields cannot be modified. However, an attacker could change these inputs using customized clients or other attacks. This change might not be detected. When security",NATURE:ChildOf:CWE ID:693 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic. PHASE - Implementation,SCOPE - Confidentiality SCOPE - Access Control SCOPE - Availability SCOPE - Other IMPACT - Bypass Protection Mechanism IMPACT - Gain Privileges or Assume Identity IMPACT - Varies by Context NOTE - Attackers can bypass the security decision to access whate,"METHOD - Manual Static Analysis DESCRIPTION - Since this weakness does not typically appear frequently within a single software package, manual white box techniques may be able to provide sufficient code coverage and reduction of false positives if all po",PHASE - Architecture and Design STRATEGY - Attack Surface Reduction DESCRIPTION - Store state information and sensitive data on the server side only. Ensure that the system definitively and unambiguously keeps track of its own state and user state and has,REFERENCE - CVE-2009-1549 DESCRIPTION - Attacker can bypass authentication by setting a cookie to a specific value. LINK - https://www.cve.org/CVERecord?id=CVE-2009-1549  REFERENCE - CVE-2009-1619 DESCRIPTION - Attacker can bypass authentication and gain,,,TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SEC09-J:ENTRY NAME:Do not base security checks on untrusted sources::,,"Software Development,Research Concept"
367,Time-of-check Time-of-use (TOCTOU) Race Condition,Base,Incomplete,"The product checks the state of a resource before using that resource, but the resource's state can change between the check and the use in a way that invalidates the results of the check. This can cause the product to perform invalid actions when the res","This weakness can be security-relevant when an attacker can influence the state of the resource between check and use. This can happen with shared resources such as files, memory, or even variables in multithreaded programs.",NATURE:ChildOf:CWE ID:362 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:362 VIEW ID:1003 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,"TERM - TOCTTOU DESCRIPTION - The TOCTTOU acronym expands to Time Of Check To Time Of Use. TERM - TOCCTOU DESCRIPTION - The TOCCTOU acronym is most likely a typo of TOCTTOU, but it has been used in some influential documents, so the typo is repeated fairly",PHASE - Implementation,SCOPE - Integrity SCOPE - Other IMPACT - Alter Execution Logic IMPACT - Unexpected State NOTE - The attacker can gain access to otherwise unauthorized resources.  SCOPE - Integrity SCOPE - Other IMPACT - Modify Application Data IMPACT - Modify Files or Di,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - The most basic advice for TOCTOU vulnerabilities is to not perform a check before the use. This does not resolve the underlying issue of the execution of a function on a resource whose state and identity cannot be assu,"REFERENCE - CVE-2015-1743 DESCRIPTION - TOCTOU in sandbox process allows installation of untrusted browser add-ons by replacing a file after it has been verified, but before it is executed LINK - https://www.cve.org/CVERecord?id=CVE-2015-1743  REFERENCE -",,,"TAXONOMY NAME - PLOVER:ENTRY NAME:Time-of-check Time-of-use race condition TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:File Access Race Conditions: TOCTOU TAXONOMY NAME - CLASP:ENTRY NAME:Time of check, time of use race condition TAXONOMY NAME - CLAS","TYPE - Relationship NOTE - TOCTOU issues do not always involve symlinks, and not every symlink issue is a TOCTOU problem.  TYPE - Research Gap NOTE - Non-symlink TOCTOU issues are not reported frequently, but they are likely to occur in code that attempts","Software Development,Research Concept"
1270,Generation of Incorrect Security Tokens,Base,Incomplete,"The product implements a Security Token mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Tokens generated in the system are incorrect.","Systems-On-a-Chip (SoC) (Integrated circuits and hardware engines) implement Security Tokens to differentiate and identify actions originated from various agents. These actions could be read, write, program, reset, fetch, compute, etc. Security Tokens are",NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:1294 VIEW ID:1194 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Access Control IMPACT - Modify Files or Directories IMPACT - Execute Unauthorized Code or Commands IMPACT - Bypass Protection Mechanism IMPACT - Gain Privileges or Assume Identity IMPA,,PHASE - Architecture and Design Implementation DESCRIPTION - Generation of Security Tokens should be reviewed for design inconsistency and common weaknesses. Security-Token definition and programming flow should be tested in pre-silicon and post-silicon t,,,,,,"Hardware Development,Research Concept"
352,Cross-Site Request Forgery (CSRF),Compound,Stable,"The web application does not, or can not, sufficiently verify whether a well-formed, valid, consistent request was intentionally provided by the user who submitted the request.","When a web server is designed to receive a request from a client without any mechanism for verifying that it was intentionally sent, then it might be possible for an attacker to trick a client into making an unintentional request to the web server which w",NATURE:ChildOf:CWE ID:345 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:345 VIEW ID:1003 ORDINAL:Primary NATURE:Requires:CWE ID:346 VIEW ID:1000 NATURE:Requires:CWE ID:441 VIEW ID:1000 NATURE:Requires:CWE ID:642 VIEW ID:1000 NATURE:Requires:CWE ID:61,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY NAME:Web Server TECHNOLOGY PREVALENCE:Undetermined,,TERM - Session Riding TERM - Cross Site Reference Forgery TERM - XSRF::,PHASE - Architecture and Design: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Non-Repudiation SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity IMPACT - Bypass Protection Mechanism IMPACT - Read Application Data IMPACT - Modify Application Data ,"METHOD - Manual Analysis DESCRIPTION - This weakness can be detected using tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active ","PHASE - Architecture and Design STRATEGY - Libraries or Frameworks DESCRIPTION - Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, use anti-CSRF packag",REFERENCE - CVE-2004-1703 DESCRIPTION - Add user accounts via a URL in an img tag LINK - https://www.cve.org/CVERecord?id=CVE-2004-1703  REFERENCE - CVE-2004-1995 DESCRIPTION - Add user accounts via a URL in an img tag LINK - https://www.cve.org/CVERecord,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Cross-Site Request Forgery (CSRF) TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A5:ENTRY NAME:Cross Site Request Forgery (CSRF):MAPPING FIT:Exact TAXONOMY NAME - WASC:ENTRY ID:9:ENTRY NAME:Cross-site Request Forgery::,TYPE - Relationship NOTE - There can be a close relationship between XSS and CSRF (CWE-352). An attacker might use CSRF in order to trick the victim into submitting requests to the server in which the requests contain an XSS payload. A well-known example ,Research Concept
232,Improper Handling of Undefined Values,Variant,Draft,"The product does not handle or incorrectly handles when a value is not defined or supported for the associated parameter, field, or argument name.",,NATURE:ChildOf:CWE ID:229 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,,REFERENCE - CVE-2000-1003 DESCRIPTION - Client crash when server returns unknown driver type. LINK - https://www.cve.org/CVERecord?id=CVE-2000-1003,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Undefined Value Error TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:ERR08-J:ENTRY NAME:Do not catch NullPointerException or any of its ancestors::,,Research Concept
338,Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG),Base,Draft,"The product uses a Pseudo-Random Number Generator (PRNG) in a security context, but the PRNG's algorithm is not cryptographically strong.","When a non-cryptographic PRNG is used in a cryptographic context, it can expose the cryptography to certain types of attacks. Often a pseudo-random number generator (PRNG) is not designed for cryptography. Sometimes a mediocre source of randomness is suff",NATURE:ChildOf:CWE ID:330 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:330 VIEW ID:1003 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,"SCOPE - Access Control IMPACT - Bypass Protection Mechanism NOTE - If a PRNG is used for authentication and authorization, such as a session ID or a seed for generating a cryptographic key, then an attacker may be able to easily guess the ID or cryptograp","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation DESCRIPTION - Use functions or hardware which use a hardware-based random number generation for all crypto. This is the recommended solution. Use CyptGenRandom on Windows, or hw_rand() on Linux.",REFERENCE - CVE-2021-3692 DESCRIPTION - PHP framework uses mt_rand() function (Marsenne Twister) when generating tokens LINK - https://www.cve.org/CVERecord?id=CVE-2021-3692  REFERENCE - CVE-2009-3278 DESCRIPTION - Crypto product uses rand() library funct,,,TAXONOMY NAME - CLASP:ENTRY NAME:Non-cryptographic PRNG TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:MSC30-C:ENTRY NAME:Do not use the rand() function for generating pseudorandom numbers:MAPPING FIT:CWE More Abstract::,"TYPE - Maintenance NOTE - As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, randomness is used heavily. However, within cryptography, entropy is distinct, typically i","Software Development,Research Concept"
558,Use of getlogin() in Multithreaded Application,Variant,Draft,"The product uses the getlogin() function in a multithreaded context, potentially causing it to return incorrect values.","The getlogin() function returns a pointer to a string that contains the name of the user associated with the calling process. The function is not reentrant, meaning that if it is called from another process, the contents are not locked out and the value o",NATURE:ChildOf:CWE ID:663 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity SCOPE - Access Control SCOPE - Other IMPACT - Modify Application Data IMPACT - Bypass Protection Mechanism IMPACT - Other,,"PHASE - Architecture and Design DESCRIPTION - Using names for security purposes is not advised. Names are easy to forge and can have overlapping user IDs, potentially causing confusion or impersonation.  PHASE - Implementation DESCRIPTION - Use getlogin_r",,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Often Misused: Authentication TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP3:ENTRY NAME:Use of an improper API::,,Research Concept
323,"Reusing a Nonce, Key Pair in Encryption",Base,Incomplete,Nonces should be used for the present occasion and only once.,,NATURE:ChildOf:CWE ID:344 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,Nonces are often bundled with a key in a communication exchange to produce a new session key for each exchange.,,PHASE - Architecture and Design: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,"SCOPE - Access Control IMPACT - Bypass Protection Mechanism IMPACT - Gain Privileges or Assume Identity NOTE - Potentially a replay attack, in which an attacker could send the same data twice, could be crafted if nonces are allowed to be reused. This coul",,"PHASE - Implementation DESCRIPTION - Refuse to reuse nonce values.  PHASE - Implementation DESCRIPTION - Use techniques such as requiring incrementing, time based and/or challenge response to assure uniqueness of nonces.",,,,"TAXONOMY NAME - CLASP:ENTRY NAME:Reusing a nonce, key pair in encryption::",,"Software Development,Research Concept"
768,Incorrect Short Circuit Evaluation,Variant,Incomplete,"The product contains a conditional statement with multiple logical expressions in which one of the non-leading expressions may produce side effects. This may lead to an unexpected state in the program after the execution of the conditional, because short-","Usage of short circuit evaluation, though well-defined in the C standard, may alter control flow in a way that introduces logic errors that are difficult to detect, possibly causing errors later during the product's execution. If an attacker can discover ",NATURE:ChildOf:CWE ID:691 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Varies by Context NOTE - Widely varied consequences are possible if an attacker is aware of an unexpected state in the product after a conditional. It may lead to information exposure,,PHASE - Implementation DESCRIPTION - Minimizing the number of statements in a conditional that produce side effects will help to prevent the likelihood of short circuit evaluation to alter control flow in an unexpected way.,,,,TAXONOMY NAME - CLASP:ENTRY NAME:Failure to protect stored data from modification TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP1:ENTRY NAME:Glitch in computation::,,Research Concept
363,Race Condition Enabling Link Following,Base,Draft,"The product checks the status of a file or directory before accessing it, which produces a race condition in which the file can be replaced with a link before the access is performed, causing the product to access the wrong file.","While developers might expect that there is a very narrow time window between the time of check and time of use, there is still a race condition. An attacker could cause the product to slow down (e.g. with memory consumption), causing the time window to b",NATURE:ChildOf:CWE ID:367 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:59 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,,,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Race condition enabling link following TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:POS35-C:ENTRY NAME:Avoid race conditions while checking for the existence of a symbolic link:MAPPING FIT:Exact TAXONOMY NAME - Software,"TYPE - Relationship NOTE - This is already covered by the Link Following weakness (CWE-59). It is included here because so many people associate race conditions with link problems; however, not all link following issues involve race conditions.::",Research Concept
1120,Excessive Code Complexity,Class,Incomplete,"The code is too complex, as calculated using a well-defined, quantitative measure.","This issue makes it more difficult to understand and/or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities. Th",NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability  SCOPE - Other IMPACT - Reduce Performance,,,,,,,,Research Concept
471,Modification of Assumed-Immutable Data (MAID),Base,Draft,The product does not properly protect an assumed-immutable element from being modified by an attacker.,"This occurs when a particular input is critical enough to the functioning of the application that it should not be modifiable at all, but it is. Certain resources are often assumed to be immutable when they are not, such as hidden form fields in web appli",NATURE:ChildOf:CWE ID:664 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation PHASE - Architecture and Design,"SCOPE - Integrity IMPACT - Modify Application Data NOTE - Common data types that are attacked are environment variables, web application parameters, and HTTP headers.  SCOPE - Integrity IMPACT - Unexpected State",,"PHASE - Architecture and Design Operation Implementation DESCRIPTION - When the data is stored or transmitted through untrusted sources that could modify the data, implement integrity checks to detect unauthorized modification, or store/transmit the data ",REFERENCE - CVE-2002-1757 DESCRIPTION - Relies on $PHP_SELF variable for authentication. LINK - https://www.cve.org/CVERecord?id=CVE-2002-1757  REFERENCE - CVE-2005-1905 DESCRIPTION - Gain privileges by modifying assumed-immutable code addresses that are,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Modification of Assumed-Immutable Data::,"TYPE - Relationship NOTE - MAID issues can be primary to many other weaknesses, and they are a major factor in languages that provide easy access to internal program constructs, such as PHP's register_globals and similar features. However, MAID issues can",Research Concept
253,Incorrect Check of Function Return Value,Base,Incomplete,"The product incorrectly checks a return value from a function, which prevents it from detecting errors or exceptional conditions.",Important and common functions will return some value about the success of its actions. This will alert the program whether or not to handle any errors caused by that function.,NATURE:ChildOf:CWE ID:573 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:754 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Availability SCOPE - Integrity IMPACT - Unexpected State IMPACT - DoS -  Crash, Exit, or Restart NOTE - An unexpected return value could place the system in a state that could lead to a crash or other unintended behaviors.",,PHASE - Architecture and Design STRATEGY - Language Selection DESCRIPTION - Use a language or compiler that uses exceptions and requires the catching of those exceptions.  PHASE - Implementation DESCRIPTION - Properly check all functions which return a va,REFERENCE - CVE-2023-49286 DESCRIPTION - Chain: function in web caching proxy does not correctly check a return value (CWE-253) leading to a reachable assertion (CWE-617) LINK - https://www.cve.org/CVERecord?id=CVE-2023-49286,,,TAXONOMY NAME - CLASP:ENTRY NAME:Misinterpreted function return value TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP4:ENTRY NAME:Unchecked Status Condition TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:ERR33-C:ENTRY NAME:Detect and handle standard l,,"Software Development,Research Concept"
96,Improper Neutralization of Directives in Statically Saved Code ('Static Code Injection'),Base,Draft,"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before inserting the input into an executable resource, such as a library, configuration file, or template.",,NATURE:ChildOf:CWE ID:94 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE NAME:PHP LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Perl LANGUAGE PREVALENCE:Undetermined LANGUAGE CLASS:Interpreted LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. PHASE - Implementation: NOTE - This issue is frequently found in PHP applications that allow users to set configuration variable,"SCOPE - Confidentiality IMPACT - Read Files or Directories IMPACT - Read Application Data NOTE - The injected code could access restricted data / files.  SCOPE - Access Control IMPACT - Bypass Protection Mechanism NOTE - In some cases, injectable code con",,"PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n",REFERENCE - CVE-2002-0495 DESCRIPTION - Perl code directly injected into CGI library file from parameters to another CGI program. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0495  REFERENCE - CVE-2005-1876 DESCRIPTION - Direct PHP code injection into,,File or Directory,TAXONOMY NAME - PLOVER:ENTRY NAME:Direct Static Code Injection TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted Input to Command::,"TYPE - Relationship NOTE - HTML injection (see CWE-79: XSS) could be thought of as an example of this, but the code is injected and executed on the client side, not the server side. Server-Side Includes (SSI) are an example of direct static code injection",Research Concept
1283,Mutable Attestation or Measurement Reporting Data,Base,Incomplete,The register contents used for attestation or measurement reporting data to verify boot flow are modifiable by an adversary.,"A System-on-Chip (SoC) implements secure boot or verified boot. During this boot flow, the SoC often measures the code that it authenticates. The measurement is usually done by calculating the one-way hash of the code binary and extending it to the previo",NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design: NOTE - Such issues can be introduced during hardware architecture or design and can be identified later during Testing or System Configuration phases. PHASE - Implementation: NOTE - If the access-controls which protecting,SCOPE - Confidentiality IMPACT - Read Memory IMPACT - Read Application Data,,PHASE - Architecture and Design DESCRIPTION - Measurement data should be stored in registers that are read-only or otherwise have access controls that prevent modification by an untrusted agent.,,,,,TYPE - Maintenance NOTE - This entry is still in development and will continue to see updates and content improvements.::,"Hardware Development,Research Concept"
1077,Floating Point Comparison with Incorrect Operator,Variant,Incomplete,"The code performs a comparison such as an equality test between two float (floating point) values, but it uses comparison operators that do not account for the possibility of loss of precision.","Numeric calculation using floating point values can generate imprecise results because of rounding errors. As a result, two different calculations might generate numbers that are mathematically equal, but have slightly different bit representations that d",NATURE:ChildOf:CWE ID:697 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Reliability,,,,,,TAXONOMY NAME - OMG ASCRM:ENTRY ID:ASCRM-RLB-9::,,Research Concept
916,Use of Password Hash With Insufficient Computational Effort,Base,Incomplete,"The product generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort that would make password cracking attacks infeasible or expensive.","Many password storage mechanisms compute a hash and store the hash, instead of storing the original password in plaintext. In this design, authentication involves accepting an incoming password, computing its hash, and comparing it to the stored hash. Man",NATURE:ChildOf:CWE ID:328 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:327 VIEW ID:1003 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,"SCOPE - Access Control IMPACT - Bypass Protection Mechanism IMPACT - Gain Privileges or Assume Identity NOTE - If an attacker can gain access to the hashes, then the lack of sufficient computational effort will make it easier to conduct brute force attack","METHOD - Automated Static Analysis - Binary or Bytecode DESCRIPTION - According to SOAR, the following detection techniques may be useful  Cost effective for partial coverage  Bytecode Weakness Analysis - including disassembler + source code weakness anal","PHASE - Architecture and Design DESCRIPTION - Use an adaptive hash function that can be configured to change the amount of computational effort needed to compute the hash, such as the number of iterations (stretching) or the amount of memory required. Som","REFERENCE - CVE-2008-1526 DESCRIPTION - Router does not use a salt with a hash, making it easier to crack passwords. LINK - https://www.cve.org/CVERecord?id=CVE-2008-1526  REFERENCE - CVE-2006-1058 DESCRIPTION - Router does not use a salt with a hash, mak",,,,,"Software Development,Research Concept"
805,Buffer Access with Incorrect Length Value,Base,Incomplete,"The product uses a sequential operation to read or write a buffer, but it uses an incorrect length value that causes it to access memory that is outside of the bounds of the buffer.","When the length value exceeds the size of the destination, a buffer overflow could occur.",NATURE:ChildOf:CWE ID:119 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:119 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:119 VIEW ID:1340 ORDINAL:Primary,: ORDINALITY:Resultant: ORDINALITY:Primary::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Often LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Often LANGUAGE CLASS:Assembly LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability IMPACT - Read Memory IMPACT - Modify Memory IMPACT - Execute Unauthorized Code or Commands NOTE - Buffer overflows often can be used to execute arbitrary code, which is usually outside the  SC",METHOD - Automated Static Analysis DESCRIPTION - This weakness can often be detected using automated static analysis tools. Many modern tools use data flow analysis or constraint-based techniques to minimize the number of false positives. Automated static,"PHASE - Requirements STRATEGY - Language Selection DESCRIPTION - Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, many languages that perform their own memory management","REFERENCE - CVE-2011-1959 DESCRIPTION - Chain: large length value causes buffer over-read (CWE-126) LINK - https://www.cve.org/CVERecord?id=CVE-2011-1959  REFERENCE - CVE-2011-1848 DESCRIPTION - Use of packet length field to make a calculation, then copy",,Memory,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:ARR38-C:ENTRY NAME:Guarantee that library functions do not form invalid pointers:MAPPING FIT:Imprecise::,,"Software Development,Research Concept"
580,clone() Method Without super.clone(),Variant,Draft,The product contains a clone() method that does not call super.clone() to obtain the new object.,"All implementations of clone() should obtain the new object by calling super.clone(). If a class does not follow this convention, a subclass's clone() method will return an object of the wrong type.",NATURE:ChildOf:CWE ID:664 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:573 VIEW ID:1000,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity SCOPE - Other IMPACT - Unexpected State IMPACT - Quality Degradation,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation DESCRIPTION - Call super.clone() within your clone() method, when obtaining a new object.  PHASE - Implementation DESCRIPTION - In some cases, you can eliminate the clone method altogether and use copy constructors.",,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP28:ENTRY NAME:Unexpected access points::,,"Software Development,Research Concept"
543,Use of Singleton Pattern Without Synchronization in a Multithreaded Context,Variant,Incomplete,The product uses the singleton pattern when creating a resource within a multithreaded environment.,The use of a singleton pattern may not be thread-safe.,NATURE:ChildOf:CWE ID:820 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:662 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:662 VIEW ID:1340 ORDINAL:Primary,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other -  SCOPE - Integrity IMPACT - Other IMPACT - Modify Application Data,,"PHASE - Architecture and Design DESCRIPTION - Use the Thread-Specific Storage Pattern. See References.  PHASE - Implementation DESCRIPTION - Do not use member fields to store information in the Servlet. In multithreading environments, storing user data in",,,,TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MSC07-J:ENTRY NAME:Prevent multiple instantiations of singleton objects TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP19:ENTRY NAME:Missing Lock::,,Research Concept
106,Struts: Plug-in Framework not in Use,Variant,Draft,"When an application does not use an input validation framework such as the Struts Validator, there is a greater risk of introducing weaknesses related to insufficient input validation.","Unchecked input is the leading cause of vulnerabilities in J2EE applications. Unchecked input leads to cross-site scripting, process control, and SQL injection vulnerabilities, among others. Although J2EE applications are not generally susceptible to memo",NATURE:ChildOf:CWE ID:1173 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:20 VIEW ID:700 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,PHASE - Architecture and Design STRATEGY - Input Validation DESCRIPTION - Use an input validation framework such as Struts.  PHASE - Architecture and Design STRATEGY - Libraries or Frameworks DESCRIPTION - Use an input validation framework such as Struts.,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Struts: Plug-in Framework Not In Use::,,Research Concept
606,Unchecked Input for Loop Condition,Base,Draft,"The product does not properly check inputs that are used for loop conditions, potentially leading to a denial of service or other consequences because of excessive looping.",,NATURE:ChildOf:CWE ID:1284 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:834 VIEW ID:1000,,,,,PHASE - Implementation,SCOPE - Availability IMPACT - DoS -  Resource Consumption (CPU),"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - Do not use user-controlled data for loop conditions.  PHASE - Implementation DESCRIPTION - Perform input validation.,,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP25:ENTRY NAME:Tainted input to variable TAXONOMY NAME - OMG ASCSM:ENTRY ID:ASCSM-CWE-606::,,"Software Development,Research Concept"
822,Untrusted Pointer Dereference,Base,Incomplete,"The product obtains a value from an untrusted source, converts this value to a pointer, and dereferences the resulting pointer.","An attacker can supply a pointer for memory locations that the product is not expecting. If the pointer is dereferenced for a write operation, the attack might allow modification of critical state variables, cause a crash, or execute code. If the derefere",NATURE:ChildOf:CWE ID:119 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:119 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:119 VIEW ID:1340 ORDINAL:Primary NATURE:CanPrecede:CWE ID:125 VIEW ID:1000 NATURE:CanPrecede:CWE ID:787 VIEW ID:1000,,,,,#VALUE!,"SCOPE - Confidentiality IMPACT - Read Memory NOTE - If the untrusted pointer is used in a read operation, an attacker might be able to read sensitive portions of memory.  SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart NOTE - If the untrusted",,,"REFERENCE - CVE-2007-5655 DESCRIPTION - message-passing framework interprets values in packets as pointers, causing a crash. LINK - https://www.cve.org/CVERecord?id=CVE-2007-5655  REFERENCE - CVE-2010-2299 DESCRIPTION - labeled as a type confusion issue,",,,,TYPE - Maintenance NOTE - There are close relationships between incorrect pointer dereferences and other weaknesses related to buffer operations. There may not be sufficient community agreement regarding these relationships. Further study is needed to det,"Software Development,Research Concept"
248,Uncaught Exception,Base,Draft,"An exception is thrown from a function, but it is not caught.","When an exception is not caught, it may cause the program to crash or expose sensitive information.",NATURE:ChildOf:CWE ID:705 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:755 VIEW ID:1000 NATURE:ChildOf:CWE ID:703 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:703 VIEW ID:1340 ORDINAL:Primary,,LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C# LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Availability SCOPE - Confidentiality IMPACT - DoS -  Crash, Exit, or Restart IMPACT - Read Application Data NOTE - An uncaught exception could cause the system to be placed in a state that could lead to a crash, exposure of sensitive information o","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,REFERENCE - CVE-2023-41151 DESCRIPTION - SDK for OPC Unified Architecture (OPC UA) server has uncaught exception when a socket is blocked for writing but the server tries to send an error LINK - https://www.cve.org/CVERecord?id=CVE-2023-41151  REFERENCE -,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Often Misused: Exception Handling TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:ERR05-J:ENTRY NAME:Do not let checked exceptions escape from a finally block TAXONOMY NAME -,,"Software Development,Research Concept"
464,Addition of Data Structure Sentinel,Base,Incomplete,The accidental addition of a data-structure sentinel can cause serious programming logic problems.,Data-structure sentinels are often used to mark the structure of data. A common example of this is the null character at the end of strings or a special sentinel to mark the end of a linked list. It is dangerous to allow this type of control data to be ea,NATURE:ChildOf:CWE ID:138 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Modify Application Data NOTE - Generally this error will cause the data structure to not work properly by truncating the data.,,PHASE - Implementation Architecture and Design DESCRIPTION - Encapsulate the user from interacting with data sentinels. Validate user input to verify that sentinels are not present.  PHASE - Implementation DESCRIPTION - Proper error checking can reduce th,,,,TAXONOMY NAME - CLASP:ENTRY NAME:Addition of data-structure sentinel TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:STR03-C:ENTRY NAME:Do not inadvertently truncate a null-terminated byte string TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:STR06-C:ENTRY N,,"Software Development,Research Concept"
83,Improper Neutralization of Script in Attributes in a Web Page,Variant,Draft,"The product does not neutralize or incorrectly neutralizes javascript: or other URIs from dangerous attributes within tags, such as onmouseover, onload, onerror, or style.",,NATURE:ChildOf:CWE ID:79 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Read Application Data IMPACT - Execute Unauthorized Code or Commands,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation DESCRIPTION - Carefully check each input parameter against a rigorous positive specification (allowlist) defining the specific characters and format allowed. All input should be neutralized, not just parameters that the user is supp","REFERENCE - CVE-2001-0520 DESCRIPTION - Bypass filtering of SCRIPT tags using onload in BODY, href in A, BUTTON, INPUT, and others. LINK - https://www.cve.org/CVERecord?id=CVE-2001-0520  REFERENCE - CVE-2002-1493 DESCRIPTION - guestbook XSS in STYLE or IM",,,TAXONOMY NAME - PLOVER:ENTRY NAME:XSS using Script in Attributes TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,Research Concept
761,Free of Pointer not at Start of Buffer,Variant,Incomplete,"The product calls free() on a pointer to a memory resource that was allocated on the heap, but the pointer is not at the start of the buffer.","This can cause the product to crash, or in some cases, modify critical program variables or execute code. This weakness often occurs when the memory is allocated explicitly on the heap with one of the malloc() family functions and free() is called, but po",NATURE:ChildOf:CWE ID:763 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:404 VIEW ID:1340 ORDINAL:Primary,,,,,PHASE - Implementation,"SCOPE - Integrity SCOPE - Availability SCOPE - Confidentiality IMPACT - Modify Memory IMPACT - DoS -  Crash, Exit, or Restart IMPACT - Execute Unauthorized Code or Commands",,"PHASE - Implementation DESCRIPTION - When utilizing pointer arithmetic to traverse a buffer, use a separate variable to track progress through memory and preserve the originally allocated address for later freeing.  PHASE - Implementation DESCRIPTION - Wh",REFERENCE - CVE-2019-11930 DESCRIPTION - function internally calls 'calloc' and returns a pointer at an index... inside the allocated buffer. This led to freeing invalid memory. LINK - https://www.cve.org/CVERecord?id=CVE-2019-11930,,Memory,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP12:ENTRY NAME:Faulty Memory Release::,"TYPE - Maintenance NOTE - Currently, CWE-763 is the parent, however it may be desirable to have an intermediate parent which is not function-specific, similar to how CWE-762 is an intermediate parent between CWE-763 and CWE-590.::",Research Concept
1074,Class with Excessively Deep Inheritance,Base,Incomplete,"A class has an inheritance level that is too high, i.e., it has a large number of parent classes.","This issue makes it more difficult to understand and maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities. While",NATURE:ChildOf:CWE ID:1093 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,TAXONOMY NAME - OMG ASCMM:ENTRY ID:ASCMM-MNT-17::,,"Software Development,Research Concept"
1341,Multiple Releases of Same Resource or Handle,Base,Incomplete,"The product attempts to close or release a resource or handle more than once, without any successful open between the close operations.","Code typically requires opening handles or references to resources such as memory, files, devices, socket connections, services, etc. When the code is finished with using the resource, it is typically expected to close or release the resource, which indic",NATURE:ChildOf:CWE ID:675 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:672 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Rust LANGUAGE PREVALENCE:Undetermined LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVA,,,PHASE - Implementation,"SCOPE - Availability SCOPE - Integrity IMPACT - DoS -  Crash, Exit, or Restart LIKELIHOOD - Medium","METHOD - Automated Static Analysis DESCRIPTION - For commonly-used APIs and resource types, automated tools often have signatures that can spot this issue.  METHOD - Automated Dynamic Analysis DESCRIPTION - Some compiler instrumentation tools such as Addr","PHASE - Implementation DESCRIPTION - Change the code's logic so that the resource is only closed once. This might require simplifying or refactoring. This fix can be simple to do in small code blocks, but more difficult when multiple closes are buried wit",REFERENCE - CVE-2019-13351 DESCRIPTION - file descriptor double close can cause the wrong file to be associated with a file descriptor. LINK - https://www.cve.org/CVERecord?id=CVE-2019-13351  REFERENCE - CVE-2006-5051 DESCRIPTION - Chain: Signal handler c,,,,"TYPE - Terminology NOTE - The terms related to release may vary depending on the  TYPE of resource, programming language, specification, or framework. Close has been used synonymously for the release of resources like file descriptors and file handles. Re","Software Development,Research Concept"
1071,Empty Code Block,Base,Incomplete,"The source code contains a block that does not contain any code, i.e., the block is empty.","Empty code blocks can occur in the bodies of conditionals, function or method definitions, exception handlers, etc. While an empty code block might be intentional, it might also indicate incomplete implementation, accidental code deletion, unexpected macr",NATURE:ChildOf:CWE ID:1164 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Reliability,,,,,,,,"Software Development,Research Concept"
276,Incorrect Default Permissions,Base,Draft,"During installation, installed file permissions are set to allow anyone to modify those files.",,NATURE:ChildOf:CWE ID:732 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:732 VIEW ID:1003 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation PHASE - Installation PHASE - Operation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Application Data IMPACT - Modify Application Data,"METHOD - Automated Static Analysis - Binary or Bytecode DESCRIPTION - According to SOAR, the following detection techniques may be useful  Cost effective for partial coverage  Inter-application Flow Analysis EFFECTIVENESS - SOAR Partial  METHOD - Manual S",PHASE - Architecture and Design Operation DESCRIPTION - The architecture needs to access and modification attributes for files to only those users who actually require those actions.  PHASE - Architecture and Design STRATEGY - Separation of Privilege DESC,REFERENCE - CVE-2005-1941 DESCRIPTION - Executables installed world-writable. LINK - https://www.cve.org/CVERecord?id=CVE-2005-1941  REFERENCE - CVE-2002-1713 DESCRIPTION - Home directories installed world-readable. LINK - https://www.cve.org/CVERecord?id,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Insecure Default Permissions TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FIO06-C:ENTRY NAME:Create files with appropriate access permissions TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY I,,"Hardware Development,Software Development,Research Concept"
99,Improper Control of Resource Identifiers ('Resource Injection'),Class,Draft,"The product receives input from an upstream component, but it does not restrict or incorrectly restricts the input before it is used as an identifier for a resource that may be outside the intended sphere of control.","A resource injection issue occurs when the following two conditions are met: An attacker can specify the identifier used to access a system resource. For example, an attacker might be able to specify part of the name of a file to be opened or a port numbe",NATURE:ChildOf:CWE ID:74 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:706 VIEW ID:1000 NATURE:CanAlsoBe:CWE ID:73 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,"TERM - Insecure Direct Object Reference DESCRIPTION - OWASP uses this term, although it is effectively the same as resource injection.::",PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Application Data IMPACT - Modify Application Data IMPACT - Read Files or Directories IMPACT - Modify Files or Directories NOTE - An attacker could gain access to or modify sensitive data or system re,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n","REFERENCE - CVE-2013-4787 DESCRIPTION - chain: mobile OS verifies cryptographic signature of file in an archive, but then installs a different file with the same name that is also listed in the archive. LINK - https://www.cve.org/CVERecord?id=CVE-2013-478",,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Resource Injection TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command TAXONOMY NAME - OMG ASCSM:ENTRY ID:ASCSM-CWE-99::,TYPE - Relationship NOTE - Resource injection that involves resources stored on the filesystem goes by the name path manipulation (CWE-73).  TYPE - Maintenance NOTE - The relationship between CWE-99 and CWE-610 needs further investigation and clarificatio,Research Concept
1231,Improper Prevention of Lock Bit Modification,Base,Stable,"The product uses a trusted lock bit for restricting access to registers, address regions, or other resources, but the product does not prevent the value of the lock bit from being modified after it has been set.","In integrated circuits and hardware intellectual property (IP) cores, device configuration controls are commonly programmed after a device power reset by a trusted firmware or software module (e.g., BIOS/bootloader) and then locked from any further modifi",NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design: NOTE - Such issues could be introduced during hardware architecture and design and identified later during Testing or System Configuration phases. PHASE - Implementation: NOTE - Such issues could be introduced during imple,SCOPE - Access Control IMPACT - Modify Memory LIKELIHOOD - High NOTE - Registers protected by lock bit can be modified even when lock is set.,"METHOD - Manual Analysis DESCRIPTION - Set the lock bit. Power cycle the device. Attempt to clear the lock bit. If the information is changed, implement a design fix. Retest. Also, attempt to indirectly clear the lock bit or bypass it. EFFECTIVENESS - Hig",PHASE - Architecture and Design Implementation Testing DESCRIPTION - Security lock bit protections must be reviewed for design inconsistency and common weaknesses. Security lock programming flow and lock properties must be tested in pre-silicon and post-s,REFERENCE - CVE-2017-6283 DESCRIPTION - chip reset clears critical read/write lock permissions for RSA function LINK - https://www.cve.org/CVERecord?id=CVE-2017-6283,,,,,"Hardware Development,Research Concept"
779,Logging of Excessive Data,Base,Draft,"The product logs too much information, making log files hard to process and possibly hindering recovery efforts or forensic analysis after an attack.","While logging is a good practice in general, and very high levels of logging are appropriate for debugging stages of development, too much logging in a production environment might hinder a system administrator's ability to detect anomalous conditions. Th",NATURE:ChildOf:CWE ID:400 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Operation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,"SCOPE - Availability IMPACT - DoS -  Resource Consumption (CPU) IMPACT - DoS -  Resource Consumption (Other) NOTE - Log files can become so large that they consume excessive resources, such as disk and CPU, which can hinder the performance of the system. ",,"PHASE - Architecture and Design DESCRIPTION - Suppress large numbers of duplicate log messages and replace them with periodic summaries. For example, syslog may include an entry that states last message repeated X times when recording repeated events.  PH",REFERENCE - CVE-2007-0421 DESCRIPTION - server records a large amount of data to the server log when it receives malformed headers LINK - https://www.cve.org/CVERecord?id=CVE-2007-0421  REFERENCE - CVE-2002-1154 DESCRIPTION - chain: application does not r,,,TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 3-3:ENTRY NAME:Req SR 7.2 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-1:ENTRY NAME:Req SD-1 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-1:ENTRY NAME:Req SVV-3 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-2:,,"Software Development,Research Concept"
405,Asymmetric Resource Consumption (Amplification),Class,Incomplete,"The product does not properly control situations in which an adversary can cause the product to consume or produce excessive resources without requiring the adversary to invest equivalent work or otherwise prove authorization, i.e., the adversary's influe","This can lead to poor performance due to amplification of resource consumption, typically in a non-linear fashion. This situation is worsened if the product allows malicious users or attackers to consume more resources than their access level permits.",NATURE:ChildOf:CWE ID:400 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design PHASE - Implementation PHASE - Operation,"SCOPE - Availability IMPACT - DoS -  Amplification IMPACT - DoS -  Resource Consumption (CPU) IMPACT - DoS -  Resource Consumption (Memory) IMPACT - DoS -  Resource Consumption (Other) LIKELIHOOD - High NOTE - Sometimes this is a factor in flood attacks, ",,"PHASE - Architecture and Design DESCRIPTION - An application must make resources available to a client commensurate with the client's access level.  PHASE - Architecture and Design DESCRIPTION - An application must, at all times, keep track of allocated r","REFERENCE - CVE-1999-0513 DESCRIPTION - Classic Smurf attack, using spoofed ICMP packets to broadcast addresses. LINK - https://www.cve.org/CVERecord?id=CVE-1999-0513  REFERENCE - CVE-2003-1564 DESCRIPTION - Parsing library allows XML bomb LINK - https://",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Asymmetric resource consumption (amplification) TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific TAXONOMY NAME - WASC:ENTRY ID:41:ENTRY NAME:XML Attribute Blowup TA,,Research Concept
708,Incorrect Ownership Assignment,Base,Incomplete,"The product assigns an owner to a resource, but the owner is outside of the intended control sphere.",This may allow the resource to be manipulated by actors outside of the intended control sphere.,NATURE:ChildOf:CWE ID:282 VIEW ID:1000 ORDINAL:Primary NATURE:CanAlsoBe:CWE ID:345 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. PHASE - Operation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Application Data IMPACT - Modify Application Data NOTE - An attacker could read and modify data for which they do not have permissions to access directly.,,PHASE - Policy DESCRIPTION - Periodically review the privileges and their owners.  PHASE - Testing DESCRIPTION - Use automated tools to check for privilege settings.,"REFERENCE - CVE-2007-5101 DESCRIPTION - File system sets wrong ownership and group when creating a new file. LINK - https://www.cve.org/CVERecord?id=CVE-2007-5101  REFERENCE - CVE-2007-4238 DESCRIPTION - OS installs program with bin owner/group, allowing",,,,"TYPE - Maintenance NOTE - This overlaps verification errors, permissions, and privileges. A closely related weakness is the incorrect assignment of groups to a resource. It is not clear whether it would fall under this entry or require a different entry.:","Software Development,Research Concept"
215,Insertion of Sensitive Information Into Debugging Code,Base,Draft,"The product inserts sensitive information into debugging code, which could expose this information if the debugging code is not disabled in production.","When debugging, it may be necessary to report detailed information to the programmer. However, if the debugging code is not disabled when the product is operating in a production environment, then this sensitive information may be exposed to attackers.",NATURE:ChildOf:CWE ID:200 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Application Data,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - Do not leave debug statements that could be executed in the source code. Ensure that all debug information is eradicated before releasing the software.  PHASE - Architecture and Design STRATEGY - Separation of Privileg,REFERENCE - CVE-2004-2268 DESCRIPTION - Password exposed in debug information. LINK - https://www.cve.org/CVERecord?id=CVE-2004-2268  REFERENCE - CVE-2002-0918 DESCRIPTION - CGI script includes sensitive information in debug messages when an error is trig,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Infoleak Using Debug Information TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A6:ENTRY NAME:Information Leakage and Improper Error Handling:MAPPING FIT:CWE More Specific TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A10:ENTR,TYPE - Relationship NOTE - This overlaps other categories.::,"Software Development,Research Concept"
781,Improper Address Validation in IOCTL with METHOD_NEITHER I/O Control Code,Variant,Draft,"The product defines an IOCTL that uses METHOD_NEITHER for I/O, but it does not validate or incorrectly validates the addresses that are provided.","When an IOCTL uses the METHOD_NEITHER option for I/O control, it is the responsibility of the IOCTL to validate the addresses that have been supplied to it. If validation is missing or incorrect, attackers can supply arbitrary memory addresses, leading to",NATURE:ChildOf:CWE ID:1285 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:822 VIEW ID:1000,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Often LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Often OPERATING SYSTEM NAME:Windows NT OPERATING SYSTEM PREVALENCE:Sometimes,,,PHASE - Implementation,"SCOPE - Integrity SCOPE - Availability SCOPE - Confidentiality IMPACT - Modify Memory IMPACT - Read Memory IMPACT - Execute Unauthorized Code or Commands IMPACT - DoS -  Crash, Exit, or Restart NOTE - An attacker may be able to access memory that belongs ",,"PHASE - Implementation DESCRIPTION - If METHOD_NEITHER is required for the IOCTL, then ensure that all user-space addresses are properly validated before they are first accessed. The ProbeForRead and ProbeForWrite routines are available for this task. Als",REFERENCE - CVE-2006-2373 DESCRIPTION - Driver for file-sharing and messaging protocol allows attackers to execute arbitrary code. LINK - https://www.cve.org/CVERecord?id=CVE-2006-2373  REFERENCE - CVE-2009-0686 DESCRIPTION - Anti-virus product does not v,,,,"TYPE - Applicable Platform NOTE - Because IOCTL functionality is typically performing low-level actions and closely interacts with the operating system, this weakness may only appear in code that is written in low-level languages.  TYPE - Research Gap NOT",Research Concept
440,Expected Behavior Violation,Base,Draft,"A feature, API, or function does not perform according to its specification.",,NATURE:ChildOf:CWE ID:684 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation PHASE - Operation,SCOPE - Other IMPACT - Quality Degradation IMPACT - Varies by Context,,,REFERENCE - CVE-2003-0187 DESCRIPTION - Program uses large timeouts on unconfirmed connections resulting from inconsistency in linked lists implementations. LINK - https://www.cve.org/CVERecord?id=CVE-2003-0187  REFERENCE - CVE-2003-0465 DESCRIPTION - str,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Expected behavior violation::,TYPE - Theoretical NOTE - The behavior of an application that is not consistent with the expectations of the developer may lead to incorrect use of the software.::,"Hardware Development,Software Development,Research Concept"
1082,Class Instance Self Destruction Control Element,Base,Incomplete,The code contains a class instance that calls the method or function to delete or destroy itself.,"For example, in C++, delete this will cause the object to delete itself. This issue can prevent the product from running reliably. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.",NATURE:ChildOf:CWE ID:1076 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Reliability,,,,,,TAXONOMY NAME - OMG ASCRM:ENTRY ID:ASCRM-RLB-7::,,"Software Development,Research Concept"
194,Unexpected Sign Extension,Variant,Incomplete,"The product performs an operation on a number that causes it to be sign extended when it is transformed into a larger data type. When the original number is negative, this can produce unexpected values that lead to resultant weaknesses.",,NATURE:ChildOf:CWE ID:681 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:681 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:681 VIEW ID:1340 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability SCOPE - Other IMPACT - Read Memory IMPACT - Modify Memory IMPACT - Other NOTE - When an unexpected sign extension occurs in code that operates directly on memory buffers, such as a size value ",,"PHASE - Implementation DESCRIPTION - Avoid using signed variables if you don't need to represent negative values. When negative values are needed, perform validation after you save those values to larger data types, or before passing them to functions tha","REFERENCE - CVE-2018-10887 DESCRIPTION - Chain: unexpected sign extension (CWE-194) leads to integer overflow (CWE-190), causing an out-of-bounds read (CWE-125) LINK - https://www.cve.org/CVERecord?id=CVE-2018-10887  REFERENCE - CVE-1999-0234 DESCRIPTION",,,TAXONOMY NAME - CLASP:ENTRY NAME:Sign extension error TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP1:ENTRY NAME:Glitch in computation TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:INT31-C:ENTRY NAME:Ensure that integer conversions do not result in,"TYPE - Relationship NOTE - Sign extension errors can lead to buffer overflows and other memory-based problems. They are also likely to be factors in other weaknesses that are not based on memory operations, but rely on numeric calculation.  TYPE - Mainten",Research Concept
1335,Incorrect Bitwise Shift of Integer,Base,Draft,An integer value is specified to be shifted by a negative amount or an amount greater than or equal to the number of bits contained in the value causing an unexpected or indeterminate result.,Specifying a value to be shifted by a negative amount is undefined in various languages. Various computer architectures implement this action in different ways. The compilers and interpreters when generating code to accomplish a shift generally do not do ,NATURE:ChildOf:CWE ID:682 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C# LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:JavaScript LANGUAGE PREVALENCE:Undeterm,,,PHASE - Implementation: NOTE - Adding shifts without properly verifying the size and sign of the shift amount.,"SCOPE - Integrity IMPACT - DoS -  Crash, Exit, or Restart",,PHASE - Implementation DESCRIPTION - Implicitly or explicitly add checks and mitigation for negative or over-shift values.,REFERENCE - CVE-2009-4307 DESCRIPTION - An unexpected large value in the ext4 filesystem causes an overshift condition resulting in a divide by zero. LINK - https://www.cve.org/CVERecord?id=CVE-2009-4307  REFERENCE - CVE-2012-2100 DESCRIPTION - An unexpec,,,,,"Software Development,Research Concept"
520,.NET Misconfiguration: Use of Impersonation,Variant,Incomplete,Allowing a .NET application to run at potentially escalated levels of access to the underlying operating and file systems can be dangerous and result in various forms of attacks.,.NET server applications can optionally execute using the identity of the user authenticated to the client. The intention of this functionality is to bypass authentication and access control checks within the .NET application code. Authentication is done ,NATURE:ChildOf:CWE ID:266 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Architecture and Design PHASE - Implementation PHASE - Operation,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity,,PHASE - Operation DESCRIPTION - Run the application with limited privilege to the underlying operating and file system.,,,,,,Research Concept
650,Trusting HTTP Permission Methods on the Server Side,Variant,Incomplete,The server contains a protection mechanism that assumes that any URI that is accessed using HTTP GET will not cause a state change to the associated resource. This might allow attackers to bypass intended access restrictions and conduct resource modificat,"The HTTP GET method and some other methods are designed to retrieve resources and not to alter the state of the application or resources on the server side. Furthermore, the HTTP specification requires that GET requests (and other requests) should not hav",NATURE:ChildOf:CWE ID:436 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation PHASE - Operation,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - An attacker could escalate privileges.  SCOPE - Integrity IMPACT - Modify Application Data NOTE - An attacker could modify resources.  SCOPE - Confidentiality IMPACT - Read Applicat,,PHASE - System Configuration DESCRIPTION - Configure ACLs on the server side to ensure that proper level of access control is defined for each accessible resource representation.,,,,,,Research Concept
241,Improper Handling of Unexpected Data Type,Base,Draft,"The product does not handle or incorrectly handles when a particular element is not the expected type, e.g. it expects a digit (0-9) but is provided with a letter (A-Z).",,NATURE:ChildOf:CWE ID:228 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity SCOPE - Other IMPACT - Varies by Context IMPACT - Unexpected State,,"PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n",REFERENCE - CVE-1999-1156 DESCRIPTION - FTP server crash via PORT command with non-numeric character. LINK - https://www.cve.org/CVERecord?id=CVE-1999-1156  REFERENCE - CVE-2004-0270 DESCRIPTION - Anti-virus product has assert error when line length is no,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Wrong Data Type TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FIO37-C:ENTRY NAME:Do not assume that fgets() or fgetws() returns a nonempty string when successful:MAPPING FIT:CWE More Abstract::,TYPE - Research Gap NOTE - Probably under-studied.::,"Software Development,Research Concept"
197,Numeric Truncation Error,Base,Incomplete,Truncation errors occur when a primitive is cast to a primitive of a smaller size and data is lost in the conversion.,"When a primitive is cast to a smaller primitive, the high order bits of the large value are lost in the conversion, potentially resulting in an unexpected value that is not equal to the original value. This value may be required as an index into a buffer,",NATURE:ChildOf:CWE ID:681 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:681 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:681 VIEW ID:1340 ORDINAL:Primary NATURE:CanAlsoBe:CWE ID:195 VIEW ID:1000 NATURE:CanAlsoBe:CWE ID:196 VIEW ID:1000 NATURE:C,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C# LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Modify Memory NOTE - The true value of the data is lost and corrupted data is used.,"METHOD - Fuzzing DESCRIPTION - Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often c","PHASE - Implementation DESCRIPTION - Ensure that no casts, implicit or explicit, take place that move from a larger size primitive or a smaller size primitive.","REFERENCE - CVE-2020-17087 DESCRIPTION - Chain: integer truncation (CWE-197) causes small buffer allocation (CWE-131) leading to out-of-bounds write (CWE-787) in kernel pool, as exploited in the wild per CISA KEV. LINK - https://www.cve.org/CVERecord?id=C",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Numeric truncation error TAXONOMY NAME - CLASP:ENTRY NAME:Truncation error TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FIO34-C:ENTRY NAME:Distinguish between characters read from a file and EOF or WEOF:MAPPING FIT:CWE M,"TYPE - Research Gap NOTE - This weakness has traditionally been under-studied and under-reported, although vulnerabilities in popular software have been published in 2008 and 2009.::",Research Concept
1121,Excessive McCabe Cyclomatic Complexity,Base,Incomplete,The code contains McCabe cyclomatic complexity that exceeds a desirable maximum.,"This issue makes it more difficult to understand and/or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",NATURE:ChildOf:CWE ID:1120 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,#VALUE!,,,,,,TAXONOMY NAME - OMG ASCMM:ENTRY ID:ASCMM-MNT-11::,,"Software Development,Research Concept"
346,Origin Validation Error,Class,Draft,The product does not properly verify that the source of data or communication is valid.,,NATURE:ChildOf:CWE ID:345 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:345 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:284 VIEW ID:1000,: ORDINALITY:Primary: ORDINALITY:Resultant::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Access Control SCOPE - Other IMPACT - Gain Privileges or Assume Identity IMPACT - Varies by Context NOTE - An attacker can access any functionality that is inadvertently accessible to the source.,,,"REFERENCE - CVE-2000-1218 DESCRIPTION - DNS server can accept DNS updates from hosts that it did not query, leading to cache poisoning LINK - https://www.cve.org/CVERecord?id=CVE-2000-1218  REFERENCE - CVE-2005-0877 DESCRIPTION - DNS server can accept DNS",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Origin Validation Error TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 3-3:ENTRY NAME:Req SR 2.12 RE(1) TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-1:ENTRY NAME:Req SD-1 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-1:ENTR,TYPE - Maintenance NOTE - This entry has some significant overlap with other CWE entries and may need some clarification. See terminology notes.  TYPE - Terminology NOTE - The Origin Validation Error term was originally used in a 1995 thesis [REF-324]. Al,"Software Development,Research Concept"
474,Use of Function with Inconsistent Implementations,Base,Draft,The code uses a function that has inconsistent implementations across operating systems and versions.,"The use of inconsistent implementations can cause changes in behavior when the code is ported or built under a different environment than the programmer expects, which can lead to security problems in some cases. The implementation of many functions varie",NATURE:ChildOf:CWE ID:758 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary: ORDINALITY:Indirect::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Often LANGUAGE NAME:PHP LANGUAGE PREVALENCE:Often LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Quality Degradation IMPACT - Varies by Context,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design Requirements DESCRIPTION - Do not accept inconsistent behavior from the API specifications when the deviant behavior increase the risk level.,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Inconsistent Implementations TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP3:ENTRY NAME:Use of an improper API::,,"Software Development,Research Concept"
20,Improper Input Validation,Class,Stable,"The product receives input or data, but it does not validate or incorrectly validates that the input has the properties that are required to process the data safely and correctly.","Input validation is a frequently-used technique for checking potentially dangerous inputs in order to ensure that the inputs are safe for processing within the code, or when communicating with other components. When software does not validate input proper",NATURE:ChildOf:CWE ID:707 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:345 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:22 VIEW ID:1000 NATURE:CanPrecede:CWE ID:41 VIEW ID:1000 NATURE:CanPrecede:CWE ID:74 VIEW ID:1000 NATURE:CanPrecede:CWE I,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Often,,,"PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. If a programmer believes that an attacker cannot modify certain inputs, then the programmer migh","SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart IMPACT - DoS -  Resource Consumption (CPU) IMPACT - DoS -  Resource Consumption (Memory) NOTE - An attacker could provide unexpected values and cause a program crash or excessive consumption of ",METHOD - Automated Static Analysis DESCRIPTION - Some instances of improper input validation can be detected using automated static analysis. A static analysis tool might allow the user to specify which application-specific  METHODs or functions perform i,PHASE - Architecture and Design STRATEGY - Attack Surface Reduction DESCRIPTION - Consider using language-theoretic security (LangSec) techniques that characterize inputs using a formal language and build recognizers for that language. This effectively re,"REFERENCE - CVE-2022-45918 DESCRIPTION - Chain: a learning management tool debugger uses external input to locate previous session logs (CWE-73) and does not properly validate the given path (CWE-20), allowing for filesystem path traversal using ../ seque",,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Input validation and representation TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A1:ENTRY NAME:Unvalidated Input:MAPPING FIT:CWE More Specific TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:ERR07-C:ENTRY NAME,"TYPE - Relationship NOTE - CWE-116 and CWE-20 have a close association because, depending on the nature of the structured message, proper input validation can indirectly prevent special characters from changing the meaning of a structured message. For exa",Research Concept
1083,Data Access from Outside Expected Data Manager Component,Base,Incomplete,"The product is intended to manage data access through a particular data manager component such as a relational or non-SQL database, but it contains code that performs data access operations without using that component.","When the product has a data access component, the design may be intended to handle all data access operations through that component. If a data access operation is performed outside of that component, then this may indicate a violation of the intended des",NATURE:ChildOf:CWE ID:1061 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Reliability,,,,,,TAXONOMY NAME - OMG ASCRM:ENTRY ID:ASCRM-RLB-10::,,"Software Development,Research Concept"
324,Use of a Key Past its Expiration Date,Base,Draft,"The product uses a cryptographic key or password past its expiration date, which diminishes its safety significantly by increasing the timing window for cracking attacks against that key.","While the expiration of keys does not necessarily ensure that they are compromised, it is a significant concern that keys which remain in use for prolonged periods of time have a decreasing probability of integrity. For this reason, it is important to rep",NATURE:ChildOf:CWE ID:672 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:298 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,"SCOPE - Access Control IMPACT - Bypass Protection Mechanism IMPACT - Gain Privileges or Assume Identity NOTE - The cryptographic key in question may be compromised, providing a malicious user with a method for authenticating as the victim.",,"PHASE - Architecture and Design DESCRIPTION - Adequate consideration should be put in to the user interface in order to notify users previous to the key's expiration, to explain the importance of new key generation and to walk users through the process as",REFERENCE - CVE-2021-33020 DESCRIPTION - Picture Archiving and Communication System (PACS) system for hospitals uses a cryptographic key or password past its expiration date LINK - https://www.cve.org/CVERecord?id=CVE-2021-33020,,,TAXONOMY NAME - CLASP:ENTRY NAME:Using a key past its expiration date::,,"Software Development,Research Concept"
1281,Sequence of Processor Instructions Leads to Unexpected Behavior,Base,Incomplete,Specific combinations of processor instructions lead to undesirable behavior such as locking the processor until a hard reset performed.,"If the instruction set architecture (ISA) and processor logic are not designed carefully and tested thoroughly, certain combinations of instructions may lead to locking the processor or other unexpected and undesirable behavior. Upon encountering unimplem",NATURE:ChildOf:CWE ID:691 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design: NOTE - Unexpected behavior from certain instruction combinations can arise from bugs in the ISA PHASE - Implementation: NOTE - Unexpected behavior from certain instruction combinations can arise because of implementation d,SCOPE - Integrity SCOPE - Availability IMPACT - Varies by Context,,PHASE - Testing DESCRIPTION - Implement a rigorous testing strategy that incorporates randomization to explore instruction sequences that are unlikely to appear in normal workloads in order to identify halt and catch fire instruction sequences.  PHASE - P,REFERENCE - CVE-2021-26339 DESCRIPTION - A bug in AMD CPU's core logic allows a potential DoS by using a specific x86 instruction sequence to hang the processor LINK - https://www.cve.org/CVERecord?id=CVE-2021-26339  REFERENCE - CVE-1999-1476 DESCRIPTION,,,,,"Hardware Development,Research Concept"
1259,Improper Restriction of Security Token Assignment,Base,Incomplete,"The System-On-A-Chip (SoC) implements a Security Token mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Tokens are improperly protected.","Systems-On-A-Chip (Integrated circuits and hardware engines) implement Security Tokens to differentiate and identify which actions originated from which agent. These actions may be one of the directives: 'read', 'write', 'program', 'reset', 'fetch', 'comp",NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:1294 VIEW ID:1194 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY NAME:Process,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Access Control IMPACT - Modify Files or Directories IMPACT - Execute Unauthorized Code or Commands IMPACT - Bypass Protection Mechanism IMPACT - Gain Privileges or Assume Identity IMPA,,PHASE - Architecture and Design Implementation DESCRIPTION - Security Token assignment review checks for design inconsistency and common weaknesses. Security-Token definition and programming flow is tested in both pre-silicon and post-silicon testing.,,,,,"TYPE - Maintenance NOTE - This entry is still under development and will continue to see updates and content improvements. Currently it is expressed as a general absence of a protection mechanism as opposed to a specific mistake, and the entry's name and ","Hardware Development,Research Concept"
1037,Processor Optimization Removal or Modification of Security-critical Code,Base,Incomplete,"The developer builds a security-critical protection mechanism into the software, but the processor optimizes the execution of the program such that the mechanism is removed or modified.",,NATURE:ChildOf:CWE ID:1038 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary:DESCRIPTION:This weakness does not depend on other weaknesses and is the result of choices made by the processor in executing the specified application.::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Rarely TECHNOLOGY NAME:Processor Hardware TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - Optimizations built into the design of the processor can have unintended consequences during the execution of an application.,SCOPE - Integrity IMPACT - Bypass Protection Mechanism LIKELIHOOD - High NOTE - A successful exploitation of this weakness will change the order of an application's execution and will likely be used to bypass specific protection mechanisms. This bypass ca,METHOD - White Box DESCRIPTION - In theory this weakness can be detected through the use of white box testing techniques where specifically crafted test cases are used in conjunction with debuggers to verify the order of statements being executed. EFFECTI,,"REFERENCE - CVE-2017-5715 DESCRIPTION - Intel, ARM, and AMD processor optimizations related to speculative execution and branch prediction cause access control checks to be bypassed when placing data into the cache. Often known as Spectre. LINK - https://",,,,"TYPE - Maintenance NOTE - As of CWE 4.9, members of the CWE Hardware SIG are closely analyzing this entry and others to improve CWE's coverage of transient execution weaknesses, which include issues related to Spectre, Meltdown, and other attacks. Additio","Software Development,Research Concept"
288,Authentication Bypass Using an Alternate Path or Channel,Base,Incomplete,"A product requires authentication, but the product has an alternate path or channel that does not require authentication.",,NATURE:ChildOf:CWE ID:306 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:284 VIEW ID:1340 ORDINAL:Primary NATURE:PeerOf:CWE ID:420 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic. PHASE - Architecture and Design: NOTE - This is often seen in web applications that assume that access to a partic,SCOPE - Access Control IMPACT - Bypass Protection Mechanism,,"PHASE - Architecture and Design DESCRIPTION - Funnel all access through a single choke point to simplify how users can access a resource. For every access, perform a check to determine if the user has permissions to access the resource.",REFERENCE - CVE-2000-1179 DESCRIPTION - Router allows remote attackers to read system logs without authentication by directly connecting to the login screen and typing certain control characters. LINK - https://www.cve.org/CVERecord?id=CVE-2000-1179  REFE,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Authentication Bypass by Alternate Path/Channel TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A10:ENTRY NAME:Failure to Restrict URL Access:MAPPING FIT:CWE More Specific::,TYPE - Relationship NOTE - overlaps Unprotected Alternate Channel::,Research Concept
1069,Empty Exception Block,Variant,Incomplete,"An invokable code block contains an exception handling block that does not contain any code, i.e. is empty.","When an exception handling block (such as a Catch and Finally block) is used, but that block is empty, this can prevent the product from running reliably. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vu",NATURE:ChildOf:CWE ID:1071 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,#VALUE!,SCOPE - Other IMPACT - Reduce Reliability,,PHASE - Implementation DESCRIPTION - For every exception block add code that handles the specific exception in the way intended by the application.,,,,TAXONOMY NAME - OMG ASCRM:ENTRY ID:ASCRM-RLB-1::,,Research Concept
28,Path Traversal: '..filedir',Variant,Incomplete,"The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize .. sequences that can resolve to a location that is outside of that directory.","This allows attackers to traverse the file system to access files or directories that are outside of the restricted directory. The '..' manipulation is the canonical manipulation for operating systems that use as directory separators, such as Windows. How",NATURE:ChildOf:CWE ID:23 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Windows OPERATING SYSTEM PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,"PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n","REFERENCE - CVE-2002-0661 DESCRIPTION - not in denylist for web server, allowing path traversal attacks when the server is run in Windows and other OSes. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0661  REFERENCE - CVE-2002-0946 DESCRIPTION - Arbitr",,,TAXONOMY NAME - PLOVER:ENTRY NAME:'..filename' ('dot dot backslash') TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,,Research Concept
234,Failure to Handle Missing Parameter,Variant,Incomplete,"If too few arguments are sent to a function, the function will still pop the expected number of arguments from the stack. Potentially, a variable number of arguments could be exhausted in a function as well.",,NATURE:ChildOf:CWE ID:233 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability SCOPE - Access Control IMPACT - Execute Unauthorized Code or Commands IMPACT - Gain Privileges or Assume Identity NOTE - There is the potential for arbitrary code execution with privileges of ,,PHASE - Build and Compilation DESCRIPTION - This issue can be simply combated with the use of proper build process.  PHASE - Implementation DESCRIPTION - Forward declare all functions. This is the recommended solution. Properly forward declaration of all ,REFERENCE - CVE-2004-0276 DESCRIPTION - Server earlier allows remote attackers to cause a denial of service (crash) via an HTTP request with a sequence of % characters and a missing Host field. LINK - https://www.cve.org/CVERecord?id=CVE-2004-0276  REFERE,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Missing Parameter Error TAXONOMY NAME - CLASP:ENTRY NAME:Missing parameter::,"TYPE - Maintenance NOTE - This entry will be deprecated in a future version of CWE. The term missing parameter was used in both PLOVER and CLASP, with completely different meanings. However, data from both taxonomies was merged into this entry. In PLOVER,",Research Concept
1326,Missing Immutable Root of Trust in Hardware,Base,Draft,A missing immutable root of trust in the hardware results in the ability to bypass secure boot or execute untrusted or adversarial boot code.,"A System-on-Chip (SoC) implements secure boot by verifying or authenticating signed boot code. The signing of the code is achieved by an entity that the SoC trusts. Before executing the boot code, the SoC verifies that the code or the public key with whic",NATURE:ChildOf:CWE ID:693 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY NAME:Securit,,,"PHASE - Architecture and Design PHASE - Implementation: NOTE - Such issues could be introduced during policy definition, hardware architecture, design, manufacturing, and/or provisioning. They can be identified later during testing or system configuration",SCOPE - Authentication SCOPE - Authorization IMPACT - Gain Privileges or Assume Identity IMPACT - Execute Unauthorized Code or Commands IMPACT - Modify Memory LIKELIHOOD - High,METHOD - Automated Dynamic Analysis DESCRIPTION - Automated testing can verify that RoT components are immutable. EFFECTIVENESS - High  METHOD - Architecture or Design Review DESCRIPTION - Root of trust elements and memory should be part of architecture a,"PHASE - Architecture and Design DESCRIPTION - When architecting the system, the RoT should be designated for storage in a memory that does not allow further programming/writes.  PHASE - Implementation DESCRIPTION - During implementation and test, the RoT ",,,,,,"Hardware Development,Research Concept"
1048,Invokable Control Element with Large Number of Outward Calls,Base,Incomplete,"The code contains callable control elements that contain an excessively large number of references to other application objects external to the context of the callable, i.e. a Fan-Out value that is excessively large.","While the interpretation of excessively large Fan-Out value may vary for each product or developer, CISQ recommends a default of 5 referenced objects. This issue makes it more difficult to maintain the product, which indirectly affects security by making ",NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,TAXONOMY NAME - OMG ASCMM:ENTRY ID:ASCMM-MNT-4::,,"Software Development,Research Concept"
296,Improper Following of a Certificate's Chain of Trust,Base,Draft,"The product does not follow, or incorrectly follows, the chain of trust for a certificate back to a trusted root certificate, resulting in incorrect trust of any resource that is associated with that certificate.","If a system does not follow the chain of trust of a certificate to a root server, the certificate loses all usefulness as a metric of trust. Essentially, the trust gained from a certificate is derived from a chain of trust -- with a reputable trusted enti",NATURE:ChildOf:CWE ID:295 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:573 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,"PHASE - Implementation: NOTE - When the product uses certificate pinning, the developer might not properly validate all relevant components of the certificate before pinning the certificate. This can make it difficult or expensive to test after the pinnin",SCOPE - Non-Repudiation IMPACT - Hide Activities NOTE - Exploitation of this flaw can lead to the trust of data that may have originated with a spoofed source.  SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability SCOPE - Access Control IMPACT -,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Architecture and Design DESCRIPTION - Ensure that proper certificate checking is included in the system design.  PHASE - Implementation DESCRIPTION - Understand, and properly implement all checks necessary to ensure the integrity of certificate tr",REFERENCE - CVE-2016-2402 DESCRIPTION - Server allows bypass of certificate pinning by sending a chain of trust that includes a trusted CA that is not pinned. LINK - https://www.cve.org/CVERecord?id=CVE-2016-2402  REFERENCE - CVE-2008-4989 DESCRIPTION - V,,,TAXONOMY NAME - CLASP:ENTRY NAME:Failure to follow chain of trust in certificate validation::,,Research Concept
653,Improper Isolation or Compartmentalization,Class,Draft,"The product does not properly compartmentalize or isolate functionality, processes, or resources that require different privilege levels, rights, or permissions.","When a weakness occurs in functionality that is accessible by lower-privileged users, then without strong boundaries, an attack might extend the scope of the damage to higher-privileged users.",NATURE:ChildOf:CWE ID:657 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:693 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,"TERM - Separation of Privilege DESCRIPTION - Some people and publications use the term Separation of Privilege to describe this weakness, but this term has dual meanings in current usage. This node conflicts with the original definition of Separation of P",PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic. PHASE - Implementation,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity IMPACT - Bypass Protection Mechanism NOTE - The exploitation of a weakness in low-privileged areas of the software can be leveraged to reach higher-privileged areas without having to overc,"METHOD - Automated Static Analysis - Binary or Bytecode DESCRIPTION - According to SOAR, the following detection techniques may be useful  Cost effective for partial coverage  Compare binary / bytecode to application permission manifest EFFECTIVENESS - SO","PHASE - Architecture and Design DESCRIPTION - Break up privileges between different modules, objects, or entities. Minimize the interfaces between modules and require strong access control between them.",REFERENCE - CVE-2021-33096 DESCRIPTION - Improper isolation of shared resource in a network-on-chip leads to denial of service LINK - https://www.cve.org/CVERecord?id=CVE-2021-33096  REFERENCE - CVE-2019-6260 DESCRIPTION - Baseboard Management Controller,,,,TYPE - Relationship NOTE - There is a close association with CWE-250 (Execution with Unnecessary Privileges). CWE-653 is about providing separate components for each privilege; CWE-250 is about ensuring that each component has the least amount of privileg,"Software Development,Research Concept"
286,Incorrect User Management,Class,Incomplete,The product does not properly manage a user within its environment.,Users can be assigned to the wrong group (class) of permissions resulting in unintended access rights to sensitive objects.,NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. PHASE - Operation,SCOPE - Other IMPACT - Varies by Context,,,"REFERENCE - CVE-2022-36109 DESCRIPTION - Containerization product does not record a user's supplementary group ID, allowing bypass of group restrictions. LINK - https://www.cve.org/CVERecord?id=CVE-2022-36109  REFERENCE - CVE-1999-1193 DESCRIPTION - Opera",,,TAXONOMY NAME - PLOVER:ENTRY NAME:User management errors::,"TYPE - Maintenance NOTE - The relationships between privileges, permissions, and actors (e.g. users and groups) need further refinement within the Research view. One complication is that these concepts apply to two different pillars, related to control of",Research Concept
303,Incorrect Implementation of Authentication Algorithm,Base,Draft,"The requirements for the product dictate the use of an established authentication algorithm, but the implementation of the algorithm is incorrect.",This incorrect implementation may allow authentication to be bypassed.,NATURE:ChildOf:CWE ID:1390 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Access Control IMPACT - Bypass Protection Mechanism,,,REFERENCE - CVE-2003-0750 DESCRIPTION - Conditional should have been an 'or' not an 'and'. LINK - https://www.cve.org/CVERecord?id=CVE-2003-0750,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Authentication Logic Error::,,"Software Development,Research Concept"
1257,Improper Access Control Applied to Mirrored or Aliased Memory Regions,Base,Incomplete,Aliased or mirrored memory regions in hardware designs may have inconsistent read/write permissions enforced by the hardware. A possible result is that an untrusted agent is blocked from accessing a memory region but is not blocked from accessing the corr,Hardware product designs often need to implement memory protection features that enable privileged software to define isolated memory regions and access control (read/write) policies. Isolated memory regions can be defined on different memory spaces in a ,NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:119 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY NAME:Memory,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Memory LIKELIHOOD - High  SCOPE - Integrity IMPACT - Modify Memory LIKELIHOOD - High  SCOPE - Availability IMPACT - DoS -  Instability LIKELIHOOD - High,,PHASE - Architecture and Design Implementation DESCRIPTION - The checks should be applied for consistency access rights between primary memory regions and any mirrored or aliased memory regions. If different memory protection units (MPU) are protecting th,,,,,,"Hardware Development,Research Concept"
39,Path Traversal: 'C:dirname',Variant,Draft,The product accepts input that contains a drive letter or Windows volume letter ('C:dirname') that potentially redirects access to an unintended location or arbitrary file.,,NATURE:ChildOf:CWE ID:36 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands NOTE - The attacker may be able to create or overwrite critical files that are used to execute code, such as programs or libraries.  SCOPE - Inte",,"PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n",REFERENCE - CVE-2001-0038 DESCRIPTION - Remote attackers can read arbitrary files by specifying the drive letter in the requested URL. LINK - https://www.cve.org/CVERecord?id=CVE-2001-0038  REFERENCE - CVE-2001-0255 DESCRIPTION - FTP server allows remote,,,TAXONOMY NAME - PLOVER:ENTRY NAME:'C:dirname' or C: (Windows volume or 'drive letter') TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FIO05-C:ENTRY NAME:Identify files using multiple file attributes TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:EN,,Research Concept
345,Insufficient Verification of Data Authenticity,Class,Draft,"The product does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.",,NATURE:ChildOf:CWE ID:693 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Integrity SCOPE - Other IMPACT - Varies by Context IMPACT - Unexpected State,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,REFERENCE - CVE-2022-30260 DESCRIPTION - Distributed Control System (DCS) does not sign firmware images and only relies on insecure checksums for integrity checks LINK - https://www.cve.org/CVERecord?id=CVE-2022-30260  REFERENCE - CVE-2022-30267 DESCRIPTI,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Insufficient Verification of Data TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific TAXONOMY NAME - WASC:ENTRY ID:12:ENTRY NAME:Content Sp,"TYPE - Relationship NOTE - origin validation could fall under this.  TYPE - Maintenance NOTE - The specific ways in which the origin is not properly identified should be laid out as separate weaknesses. In some sense, this is more like a category.::",Research Concept
1039,Automated Recognition Mechanism with Inadequate Detection or Handling of Adversarial Input Perturbations,Class,Incomplete,"The product uses an automated mechanism such as machine learning to recognize complex data inputs (e.g. image or audio) as a particular concept or category, but it does not properly detect or handle inputs that have been modified or constructed in a way t","When techniques such as machine learning are used to automatically classify input streams, and those classifications are used for security-critical decisions, then any mistake in classification can introduce a vulnerability that allows attackers to cause ",NATURE:ChildOf:CWE ID:693 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:697 VIEW ID:1000,: ORDINALITY:Primary:DESCRIPTION:This weakness does not depend on other weaknesses and is the result of choices made during optimization.::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - This issue can be introduced into the automated algorithm itself.,"SCOPE - Integrity IMPACT - Bypass Protection Mechanism NOTE - When the automated recognition is used in a protection mechanism, an attacker may be able to craft inputs that are misinterpreted in a way that grants excess privileges.",,,,,,,"TYPE - Relationship NOTE - Further investigation is needed to determine if better relationships exist or if additional organizational entries need to be created. For example, this issue might be better related to recognition of input as an incorrect  TYPE",Research Concept
172,Encoding Error,Class,Draft,"The product does not properly encode or decode the data, resulting in unexpected values.",,NATURE:ChildOf:CWE ID:707 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:22 VIEW ID:1000 NATURE:CanPrecede:CWE ID:41 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,"PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n","REFERENCE - CVE-2004-1315 DESCRIPTION - Forum software improperly URL decodes the highlight parameter when extracting text to highlight, which allows remote attackers to execute arbitrary PHP code by double-encoding the highlight value so that special cha",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Encoding Error::,TYPE - Relationship NOTE - Partially overlaps path traversal and equivalence weaknesses.  TYPE - Maintenance NOTE - This is more like a category than a weakness.  TYPE - Maintenance NOTE - Many other  TYPEs of encodings should be listed in this category.:,Research Concept
1266,Improper Scrubbing of Sensitive Data from Decommissioned Device,Base,Incomplete,"The product does not properly provide a capability for the product administrator to remove sensitive data at the time the product is decommissioned. A scrubbing capability could be missing, insufficient, or incorrect.","When a product is decommissioned - i.e., taken out of service - best practices or regulatory requirements may require the administrator to remove or overwrite sensitive data first, i.e. scrubbing. Improper scrubbing of sensitive data from a decommissioned",NATURE:ChildOf:CWE ID:404 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design PHASE - Policy PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Memory,,PHASE - Architecture and Design DESCRIPTION - Functionality to completely scrub data from a product at the conclusion of its lifecycle should be part of the design  PHASE. Trying to add this function on top of an existing architecture could lead to incomp,,,,,TYPE - Maintenance NOTE - This entry is still under development and will continue to see updates and content improvements.::,"Hardware Development,Research Concept"
544,Missing Standardized Error Handling Mechanism,Base,Draft,"The product does not use a standardized method for handling errors throughout the code, which might introduce inconsistent error handling and resultant weaknesses.","If the product handles error messages individually, on a one-by-one basis, this is likely to result in inconsistent error handling. The causes of errors may be lost. Also, detailed information about the causes of an error may be unintentionally returned t",NATURE:ChildOf:CWE ID:755 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.,SCOPE - Integrity SCOPE - Other IMPACT - Quality Degradation IMPACT - Unexpected State IMPACT - Varies by Context,,"PHASE - Architecture and Design DESCRIPTION - define a strategy for handling errors of different severities, such as fatal errors versus basic log events. Use or create built-in language features, or an external package, that provides an easy-to-use API a",,,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:ERR00-C:ENTRY NAME:Adopt and implement a consistent and comprehensive error-handling policy::,,"Software Development,Research Concept"
825,Expired Pointer Dereference,Base,Incomplete,"The product dereferences a pointer that contains a location for memory that was previously valid, but is no longer valid.","When a product releases memory, but it maintains a pointer to that memory, then the memory might be re-allocated at a later time. If the original pointer is accessed to read or write data, then this could cause the product to read or modify data that is i",NATURE:ChildOf:CWE ID:119 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:119 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:119 VIEW ID:1340 ORDINAL:Primary NATURE:ChildOf:CWE ID:672 VIEW ID:1000 NATURE:CanPrecede:CWE ID:125 VIEW ID:1000 NATURE:Ca,,,,TERM - Dangling pointer::,#VALUE!,"SCOPE - Confidentiality IMPACT - Read Memory NOTE - If the expired pointer is used in a read operation, an attacker might be able to control data read in by the application.  SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart NOTE - If the expir",,"PHASE - Architecture and Design DESCRIPTION - Choose a language that provides automatic memory management.  PHASE - Implementation DESCRIPTION - When freeing pointers, be sure to set them to NULL once they are freed. However, the utilization of multiple o",REFERENCE - CVE-2008-5013 DESCRIPTION - access of expired memory address leads to arbitrary code execution LINK - https://www.cve.org/CVERecord?id=CVE-2008-5013  REFERENCE - CVE-2010-3257 DESCRIPTION - stale pointer issue leads to denial of service and po,,,,TYPE - Maintenance NOTE - There are close relationships between incorrect pointer dereferences and other weaknesses related to buffer operations. There may not be sufficient community agreement regarding these relationships. Further study is needed to det,"Software Development,Research Concept"
1252,CPU Hardware Not Configured to Support Exclusivity of Write and Execute Operations,Base,Incomplete,The CPU is not configured to provide hardware support for exclusivity of write and execute operations on memory. This allows an attacker to execute data from all of memory.,"CPUs provide a special bit that supports exclusivity of write and execute operations. This bit is used to segregate areas of memory to either mark them as code (instructions, which can be executed) or data (which should not be executed). In this way, if a",NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY NAME:Microco,,,PHASE - Architecture and Design,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Execute Unauthorized Code or Commands,,"PHASE - Architecture and Design DESCRIPTION - Implement a dedicated bit that can be leveraged by the Operating System to mark data areas as non-executable. If such a bit is not available in the CPU, implement MMU/MPU (memory management unit / memory prote",,,,,,"Hardware Development,Research Concept"
32,Path Traversal: '...' (Triple Dot),Variant,Incomplete,"The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '...' (triple dot) sequences that can resolve to a location that is outside of that directory.","This allows attackers to traverse the file system to access files or directories that are outside of the restricted directory. The '...' manipulation is useful for bypassing some path traversal protection schemes. On some Windows systems, it is equivalent",NATURE:ChildOf:CWE ID:23 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,"PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n",REFERENCE - CVE-2001-0467 DESCRIPTION - ... in web server LINK - https://www.cve.org/CVERecord?id=CVE-2001-0467  REFERENCE - CVE-2001-0615 DESCRIPTION - ... or .... in chat server LINK - https://www.cve.org/CVERecord?id=CVE-2001-0615  REFERENCE - CVE-2001,,,TAXONOMY NAME - PLOVER:ENTRY NAME:'...' (triple dot) TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,"TYPE - Maintenance NOTE - This manipulation-focused entry is currently hiding two distinct weaknesses, so it might need to be split. The manipulation is effective in two different contexts: it is equivalent to .... on Windows, or it can take advantage of ",Research Concept
297,Improper Validation of Certificate with Host Mismatch,Variant,Incomplete,"The product communicates with a host that provides a certificate, but the product does not properly ensure that the certificate is actually associated with that host.","Even if a certificate is well-formed, signed, and follows the chain of trust, it may simply be a valid certificate for a different site than the site that the product is interacting with. If the certificate's host-specific data is not properly checked - s",NATURE:ChildOf:CWE ID:923 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:295 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Mobile TECHNOLOGY PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined,,,"PHASE - Implementation: NOTE - When the product uses certificate pinning, the developer might not properly validate all relevant components of the certificate before pinning the certificate. This can make it difficult or expensive to test after the pinnin",SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - The data read from the system vouched for by the certificate may not be from the expected system.  SCOPE - Authentication SCOPE - Other IMPACT - Other NOTE - Trust afforded to the s,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design DESCRIPTION - Fully check the hostname of the certificate and provide the user with adequate information about the nature of the problem and how to proceed.  PHASE - Implementation DESCRIPTION - If certificate pinning is be,"REFERENCE - CVE-2012-5810 DESCRIPTION - Mobile banking application does not verify hostname, leading to financial loss. LINK - https://www.cve.org/CVERecord?id=CVE-2012-5810  REFERENCE - CVE-2012-5811 DESCRIPTION - Mobile application for printing document",,,TAXONOMY NAME - CLASP:ENTRY NAME:Failure to validate host-specific certificate data::,,Research Concept
1220,Insufficient Granularity of Access Control,Base,Incomplete,"The product implements access controls via a policy or other feature with the intention to disable or restrict accesses (reads and/or writes) to assets in a system from untrusted agents. However, implemented access controls lack required granularity, whic","Integrated circuits and hardware engines can expose accesses to assets (device configuration, keys, etc.) to trusted firmware or a software module (commonly set by BIOS/bootloader). This access is typically access-controlled. Upon a power reset, the hardw",NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design: NOTE - Such issues could be introduced during hardware architecture and design and identified later during Testing or System Configuration phases. PHASE - Implementation: NOTE - Such issues could be introduced during hardw,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Access Control IMPACT - Modify Memory IMPACT - Read Memory IMPACT - Execute Unauthorized Code or Commands IMPACT - Gain Privileges or Assume Identity IMPACT - Bypass Protection Mechani,,"PHASE - Architecture and Design Implementation Testing DESCRIPTION - Access-control-policy protections must be reviewed for design inconsistency and common weaknesses. Access-control-policy definition and programming flow must be tested in pre-silicon, po","REFERENCE - CVE-2022-24985 DESCRIPTION - A form hosting website only checks the session authentication status for a single form, making it possible to bypass authentication when there are multiple forms LINK - https://www.cve.org/CVERecord?id=CVE-2022-249",,,,,"Hardware Development,Software Development,Research Concept"
917,Improper Neutralization of Special Elements used in an Expression Language Statement ('Expression Language Injection'),Base,Incomplete,"The product constructs all or part of an expression language (EL) statement in a framework such as a Java Server Page (JSP) using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special element","Frameworks such as Java Server Page (JSP) allow a developer to insert executable expressions within otherwise-static content. When the developer is not aware of the executable nature of these expressions and/or does not disable them, then if an attacker c",NATURE:ChildOf:CWE ID:77 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:1336 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:74 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:77 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:77 VIEW ID:1340,: ORDINALITY:Primary::,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,TERM - EL Injection::,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Application Data  SCOPE - Integrity IMPACT - Execute Unauthorized Code or Commands,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Architecture and Design DESCRIPTION - Avoid adding user-controlled data into an expression interpreter when possible.  PHASE - Implementation DESCRIPTION - If user-controlled data must be added to an expression interpreter, one or more of the foll","REFERENCE - CVE-2021-44228 DESCRIPTION - Product does not neutralize ${xyz} style expressions, allowing remote code execution. (log4shell vulnerability in log4j) LINK - https://www.cve.org/CVERecord?id=CVE-2021-44228",,,,"TYPE - Maintenance NOTE - The interrelationships and differences between CWE-917 and CWE-1336 need to be further clarified.  TYPE - Relationship NOTE - In certain versions of Spring 3.0.5 and earlier, there was a vulnerability (CVE-2011-2730) in which Exp","Software Development,Research Concept"
479,Signal Handler Use of a Non-reentrant Function,Variant,Draft,The product defines a signal handler that calls a non-reentrant function.,"Non-reentrant functions are functions that cannot safely be called, interrupted, and then recalled before the first call has finished without resulting in memory corruption. This can lead to an unexpected system state and unpredictable results with a vari",NATURE:ChildOf:CWE ID:828 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:663 VIEW ID:1000 NATURE:CanPrecede:CWE ID:123 VIEW ID:1000,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands NOTE - It may be possible to execute arbitrary code through the use of a write-what-where condition.  SCOPE - Integrity IMPACT - Modify Memory IM,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Requirements DESCRIPTION - Require languages or libraries that provide reentrant functionality, or otherwise make it easier to avoid this weakness.  PHASE - Architecture and Design DESCRIPTION - Design signal handlers to only set flags rather than",REFERENCE - CVE-2005-0893 DESCRIPTION - signal handler calls function that ultimately uses malloc() LINK - https://www.cve.org/CVERecord?id=CVE-2005-0893  REFERENCE - CVE-2004-2259 DESCRIPTION - SIGCHLD signal to FTP server can cause crash under heavy loa,,System Process,TAXONOMY NAME - CLASP:ENTRY NAME:Unsafe function call from a signal handler TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:SIG30-C:ENTRY NAME:Call only asynchronous-safe functions within signal handlers:MAPPING FIT:Exact TAXONOMY NAME - CERT C Secure Codin,,Research Concept
481,Assigning instead of Comparing,Variant,Draft,The code uses an operator for assignment when the intention was to perform a comparison.,In many languages the compare statement is very close in appearance to the assignment statement and are often confused. This bug is generally the result of a typo and usually causes obvious problems with program execution. If the comparison is in an if st,NATURE:ChildOf:CWE ID:480 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:697 VIEW ID:1000,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C# LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Alter Execution Logic,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Testing DESCRIPTION - Many IDEs and static analysis products will detect this problem.  PHASE - Implementation DESCRIPTION - Place constants on the left. If one attempts to assign a constant with a variable, the compiler will produce an error.",,,,TAXONOMY NAME - CLASP:ENTRY NAME:Assigning instead of comparing TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP1:ENTRY NAME:Glitch in computation TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:EXP45-C:ENTRY NAME:Do not perform assignments in selection,,Research Concept
943,Improper Neutralization of Special Elements in Data Query Logic,Class,Incomplete,"The product generates a query intended to access or manipulate data in a data store such as a database, but it does not neutralize or incorrectly neutralizes special elements that can modify the intended logic of the query.","Depending on the capabilities of the query language, an attacker could inject additional logic into the query to: Modify the intended selection criteria, thus changing which data entities (e.g., records) are returned, modified, or otherwise manipulated Ap",NATURE:ChildOf:CWE ID:74 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Access Control IMPACT - Bypass Protection Mechanism IMPACT - Read Application Data IMPACT - Modify Application Data IMPACT - Varies by Context,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,REFERENCE - CVE-2014-2503 DESCRIPTION - Injection using Documentum Query Language (DQL) LINK - https://www.cve.org/CVERecord?id=CVE-2014-2503  REFERENCE - CVE-2014-2508 DESCRIPTION - Injection using Documentum Query Language (DQL) LINK - https://www.cve.o,,,,"TYPE - Relationship NOTE - It could be argued that data query languages are effectively a command language - albeit with a limited set of commands - and thus any query-language injection issue could be treated as a child of CWE-74. However, CWE-943 is int",Research Concept
655,Insufficient Psychological Acceptability,Class,Draft,"The product has a protection mechanism that is too difficult or inconvenient to use, encouraging non-malicious users to disable or bypass the mechanism, whether by accident or on purpose.",,NATURE:ChildOf:CWE ID:657 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:693 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design,"SCOPE - Access Control IMPACT - Bypass Protection Mechanism NOTE - By bypassing the security mechanism, a user might leave the system in a less secure state than intended by the administrator, making it more susceptible to compromise.",,"PHASE - Testing DESCRIPTION - Where possible, perform human factors and usability studies to identify where your product's security mechanisms are difficult to use, and why.  PHASE - Architecture and Design DESCRIPTION - Make the security mechanism as sea",,,,TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 2-1:ENTRY NAME:Req 4.3.3.6 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-1:ENTRY NAME:Req SD-4::,"TYPE - Other NOTE - This weakness covers many security measures causing user inconvenience, requiring effort or causing frustration, that are disproportionate to the risks or value of the protected assets, or that are perceived to be ineffective.  TYPE - ",Research Concept
193,Off-by-one Error,Base,Draft,"A product calculates or uses an incorrect maximum or minimum value that is 1 more, or 1 less, than the correct value.",,NATURE:ChildOf:CWE ID:682 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:682 VIEW ID:1003 ORDINAL:Primary NATURE:CanPrecede:CWE ID:617 VIEW ID:1000 NATURE:CanPrecede:CWE ID:170 VIEW ID:1000 NATURE:CanPrecede:CWE ID:119 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,"TERM - off-by-five DESCRIPTION - An off-by-five error was reported for sudo in 2002 (CVE-2002-0184), but that is more like a length calculation error.::",PHASE - Implementation,"SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart IMPACT - DoS -  Resource Consumption (CPU) IMPACT - DoS -  Resource Consumption (Memory) IMPACT - DoS -  Instability NOTE - This weakness will generally lead to undefined behavior and therefore ","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation DESCRIPTION - When copying character arrays or using character manipulation methods, the correct size parameter must be used to account for the null terminator that needs to be added at the end of the array. Some examples of functio",REFERENCE - CVE-2003-0252 DESCRIPTION - Off-by-one error allows remote attackers to cause a denial of service and possibly execute arbitrary code via requests that do not contain newlines. LINK - https://www.cve.org/CVERecord?id=CVE-2003-0252  REFERENCE -,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Off-by-one Error TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:STR31-C:ENTRY NAME:Guarantee that storage for strings has sufficient space for character data and the null terminator::,"TYPE - Relationship NOTE - This is not always a buffer overflow. For example, an off-by-one error could be a factor in a partial comparison, a read from the wrong memory location, an incorrect conditional, etc.::","Software Development,Research Concept"
642,External Control of Critical State Data,Class,Draft,"The product stores security-critical state information about its users, or the product itself, in a location that is accessible to unauthorized actors.","If an attacker can modify the state information without detection, then it could be used to perform unauthorized actions or access unexpected resources, since the application programmer does not expect that the state can be changed. State information can ",NATURE:ChildOf:CWE ID:668 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY NAME:Web Server TECHNOLOGY PREVALENCE:Often,,,PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase. PHASE - Implementation,SCOPE - Access Control IMPACT - Bypass Protection Mechanism IMPACT - Gain Privileges or Assume Identity NOTE - An attacker could potentially modify the state in malicious ways. If the state is related to the privileges or level of authentication that the ,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Architecture and Design DESCRIPTION - Understand all the potential locations that are accessible to attackers. For example, some programmers assume that cookies and hidden form fields cannot be modified by an attacker, or they may not consider tha",REFERENCE - CVE-2005-2428 DESCRIPTION - Mail client stores password hashes for unrelated accounts in a hidden form field. LINK - https://www.cve.org/CVERecord?id=CVE-2005-2428  REFERENCE - CVE-2008-0306 DESCRIPTION - Privileged program trusts user-specifi,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::,,Research Concept
127,Buffer Under-read,Variant,Draft,The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations prior to the targeted buffer.,"This typically occurs when the pointer or its index is decremented to a position before the buffer, when pointer arithmetic results in a position before the beginning of the valid memory location, or when a negative index is used. This may result in expos",NATURE:ChildOf:CWE ID:125 VIEW ID:1000 NATURE:ChildOf:CWE ID:786 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Confidentiality IMPACT - Read Memory  SCOPE - Confidentiality IMPACT - Bypass Protection Mechanism NOTE - By reading out-of-bounds memory, an attacker might be able to get secret values, such as memory addresses, which can be bypass protection mec",,,"REFERENCE - CVE-2021-40985 DESCRIPTION - HTML conversion package has a buffer under-read, allowing a crash LINK - https://www.cve.org/CVERecord?id=CVE-2021-40985",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Buffer under-read TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP8:ENTRY NAME:Faulty Buffer Access::,TYPE - Research Gap NOTE - Under-studied.::,Research Concept
1041,Use of Redundant Code,Base,Incomplete,"The product has multiple functions, methods, procedures, macros, etc. that contain the same code.","This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. For example, if there are two copies of the same code, the programmer might fix",NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,PHASE - Implementation DESCRIPTION - Merge common functionality into a single function and then call that function from across the entire code base.,,,,TAXONOMY NAME - OMG ASCMM:ENTRY ID:ASCMM-MNT-19::,,"Software Development,Research Concept"
11,ASP.NET Misconfiguration: Creating Debug Binary,Variant,Draft,Debugging messages help attackers learn about the system and plan a form of attack.,ASP .NET applications can be configured to produce debug binaries. These binaries give detailed debugging messages and should not be used in production environments. Debug binaries are meant to be used in a development or testing environment and can pose ,NATURE:ChildOf:CWE ID:489 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:ASP.NET LANGUAGE PREVALENCE:Undetermined,The debug attribute of the<compilation>  tag defines whether compiled binaries should include debugging information. The use of debug binaries causes an application to provide as much information about itself as possible to the user.,,PHASE - Implementation PHASE - Build and Compilation,"SCOPE - Confidentiality IMPACT - Read Application Data NOTE - Attackers can leverage the additional information they gain from debugging output to mount attacks targeted on the framework, database, or other resources used by the application.","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - System Configuration DESCRIPTION - Avoid releasing debug binaries into the production environment. Change the debug mode to false when the application is deployed into production.,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:ASP.NET Misconfiguration: Creating Debug Binary::,,Research Concept
1328,Security Version Number Mutable to Older Versions,Base,Draft,"Security-version number in hardware is mutable, resulting in the ability to downgrade (roll-back) the boot firmware to vulnerable code versions.","A System-on-Chip (SoC) implements secure boot or verified boot. It might support a security version number, which prevents downgrading the current firmware to a vulnerable version. Once downgraded to a previous version, an adversary can launch exploits on",NATURE:ChildOf:CWE ID:285 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:757 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY NAME:Securit,,,"PHASE - Architecture and Design PHASE - Implementation: NOTE - Such issues could be introduced during hardware architecture and design, and can be identified later during testing or system configuration phases.",SCOPE - Confidentiality SCOPE - Integrity SCOPE - Authentication SCOPE - Authorization IMPACT - Other LIKELIHOOD - High NOTE - Impact includes roll-back or downgrade to a vulnerable version of the firmware or DoS (prevent upgrades).,METHOD - Automated Dynamic Analysis DESCRIPTION - Mutability of stored security version numbers and programming with older firmware images should be part of automated testing. EFFECTIVENESS - High  METHOD - Architecture or Design Review DESCRIPTION - Anti,"PHASE - Architecture and Design DESCRIPTION - When architecting the system, security version data should be designated for storage in registers that are either read-only or have access controls that prevent modification by an untrusted agent.  PHASE - Imp",,,,,,"Hardware Development,Research Concept"
212,Improper Removal of Sensitive Information Before Storage or Transfer,Base,Incomplete,"The product stores, transfers, or shares a resource that contains sensitive information, but it does not properly remove that information before the product makes the resource available to unauthorized actors.","Resources that may contain sensitive data include documents, packets, messages, databases, etc. While this data may be useful to an individual user or small set of users who share the resource, it may need to be removed before the resource can be shared o",NATURE:ChildOf:CWE ID:669 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:669 VIEW ID:1003 ORDINAL:Primary NATURE:CanPrecede:CWE ID:201 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary: ORDINALITY:Resultant::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. PHASE - Operation,SCOPE - Confidentiality IMPACT - Read Files or Directories IMPACT - Read Application Data NOTE - Sensitive data may be exposed to an unauthorized actor in another control sphere. This may have a wide range of secondary consequences which will depend on wh,,"PHASE - Requirements DESCRIPTION - Clearly specify which information should be regarded as private or sensitive, and require that the product offers functionality that allows the user to cleanse the sensitive information from the resource before it is pub","REFERENCE - CVE-2019-3733 DESCRIPTION - Cryptography library does not clear heap memory before release LINK - https://www.cve.org/CVERecord?id=CVE-2019-3733  REFERENCE - CVE-2005-0406 DESCRIPTION - Some image editors modify a JPEG image, but the original",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Cross-Boundary Cleansing Infoleak::,"TYPE - Relationship NOTE - This entry is intended to be different from resultant information leaks, including those that occur from improper buffer initialization and reuse, improper encryption, interaction errors, and multiple interpretation errors. This","Software Development,Research Concept"
692,Incomplete Denylist to Cross-Site Scripting,Compound,Draft,"The product uses a denylist-based protection mechanism to defend against XSS attacks, but the denylist is incomplete, allowing XSS variants to succeed.","While XSS might seem simple to prevent, web browsers vary so widely in how they parse web pages, that a denylist cannot keep track of all the variations. The XSS Cheat Sheet [REF-714] contains a large number of attacks that are intended to bypass incomple",NATURE:StartsWith:CWE ID:184 VIEW ID:709:CHAIN ID:692 NATURE:ChildOf:CWE ID:184 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,#VALUE!,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands,,,REFERENCE - CVE-2007-5727 DESCRIPTION - Denylist only removes,,,,,Research Concept
1316,Fabric-Address Map Allows Programming of Unwarranted Overlaps of Protected and Unprotected Ranges,Base,Draft,"The address map of the on-chip fabric has protected and unprotected regions overlapping, allowing an attacker to bypass access control to the overlapping portion of the protected region.","Various ranges can be defined in the system-address map, either in the memory or in Memory-Mapped-IO (MMIO) space. These ranges are usually defined using special range registers that contain information, such as base address and size. Address decoding is ",NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY NAME:Bus/Int,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Access Control SCOPE - Authorization IMPACT - Bypass Protection Mechanism IMPACT - Read Memory IMPACT - Modify Memory LIKELIHOOD - Medium,METHOD - Automated Dynamic Analysis DESCRIPTION - Review address map in specification to see if there are any overlapping ranges. EFFECTIVENESS - High  METHOD - Manual Static Analysis DESCRIPTION - Negative testing of access control on overlapped ranges. ,"PHASE - Architecture and Design DESCRIPTION - When architecting the address map of the chip, ensure that protected and unprotected ranges are isolated and do not overlap. When designing, ensure that ranges hardcoded in Register-Transfer Level (RTL) do not","REFERENCE - CVE-2009-4419 DESCRIPTION - Attacker can modify MCHBAR register to overlap with an attacker-controlled region, which modification prevents the SENTER instruction from properly applying VT-d protection while a Measured Launch Environment is bei",,,,"TYPE - Maintenance NOTE - As of CWE 4.6, CWE-1260 and CWE-1316 are siblings under view 1000, but CWE-1260 might be a parent of CWE-1316. More analysis is warranted.::","Hardware Development,Research Concept"
170,Improper Null Termination,Base,Incomplete,The product does not terminate or incorrectly terminates a string or array with a null character or equivalent terminator.,"Null termination errors frequently occur in two different ways. An off-by-one error could cause a null to be written out of bounds, leading to an overflow. Or, a program could use a strncpy() function call incorrectly, which prevents a null terminator fro",NATURE:ChildOf:CWE ID:707 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:120 VIEW ID:1000 NATURE:CanPrecede:CWE ID:126 VIEW ID:1000 NATURE:CanAlsoBe:CWE ID:147 VIEW ID:1000 NATURE:PeerOf:CWE ID:464 VIEW ID:1000 NATURE:PeerOf:CWE ID:463 VIEW ID:1000,: ORDINALITY:Resultant::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Read Memory IMPACT - Execute Unauthorized Code or Commands NOTE - The case of an omitted null character is the most dangerous of the possible issues. This will almost certainly result,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Requirements DESCRIPTION - Use a language that is not susceptible to these issues. However, be careful of null byte interaction errors (CWE-626) with lower-level constructs that may be written in a language that is susceptible.  PHASE - Implementa",REFERENCE - CVE-2000-0312 DESCRIPTION - Attacker does not null-terminate argv[] when invoking another program. LINK - https://www.cve.org/CVERecord?id=CVE-2000-0312  REFERENCE - CVE-2003-0777 DESCRIPTION - Interrupted step causes resultant lack of null te,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Improper Null Termination TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:String Termination Error TAXONOMY NAME - CLASP:ENTRY NAME:Miscalculated null termination TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME,"TYPE - Relationship NOTE - Factors: this is usually resultant from other weaknesses such as off-by-one errors, but it can be primary to boundary condition violations such as buffer overflows. In buffer overflows, it can act as an expander for assumed-immu","Software Development,Research Concept"
24,Path Traversal: '../filedir',Variant,Incomplete,"The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize ../ sequences that can resolve to a location that is outside of that directory.","This allows attackers to traverse the file system to access files or directories that are outside of the restricted directory. The ../ manipulation is the canonical manipulation for operating systems that use / as directory separators, such as UNIX- and L",NATURE:ChildOf:CWE ID:23 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,"PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n","REFERENCE - CVE-2022-45918 DESCRIPTION - Chain: a learning management tool debugger uses external input to locate previous session logs (CWE-73) and does not properly validate the given path (CWE-20), allowing for filesystem path traversal using ../ seque",,,TAXONOMY NAME - PLOVER:ENTRY NAME:'../filedir TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,,Research Concept
179,Incorrect Behavior Order: Early Validation,Base,Incomplete,"The product validates input before applying protection mechanisms that modify the input, which could allow an attacker to bypass the validation via dangerous inputs that only arise after the modification.","Product needs to validate data at the proper time, after data has been canonicalized and cleansed. Early validation is susceptible to various manipulations that result in dangerous inputs that are produced by canonicalization and cleansing.",NATURE:ChildOf:CWE ID:20 VIEW ID:1000 NATURE:ChildOf:CWE ID:696 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,"PHASE - Implementation: NOTE - Since early validation errors usually arise from improperly implemented defensive mechanisms, it is likely that these will be introduced more frequently as secure programming becomes implemented more widely.",SCOPE - Access Control SCOPE - Integrity IMPACT - Bypass Protection Mechanism IMPACT - Execute Unauthorized Code or Commands NOTE - An attacker could include dangerous input that bypasses validation protection mechanisms which can be used to launch variou,,PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same inpu,REFERENCE - CVE-2002-0433 DESCRIPTION - Product allows remote attackers to view restricted files via an HTTP request containing a * (wildcard or asterisk) character. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0433  REFERENCE - CVE-2003-0332 DESCRIPT,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Early Validation Errors::,"TYPE - Research Gap NOTE - These errors are mostly reported in path traversal vulnerabilities, but the concept applies whenever validation occurs.::","Software Development,Research Concept"
149,Improper Neutralization of Quoting Syntax,Variant,Draft,"Quotes injected into a product can be used to compromise a system. As data are parsed, an injected/absent/duplicate/malformed use of quotes may cause the process to take unexpected actions.",,NATURE:ChildOf:CWE ID:138 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,"PHASE - DESCRIPTION - Developers should anticipate that quotes will be injected/removed/manipulated in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appropriate input is p",REFERENCE - CVE-2004-0956 DESCRIPTION - Database allows remote attackers to cause a denial of service (application crash) via a MATCH AGAINST query with an opening double quote but no closing double quote. LINK - https://www.cve.org/CVERecord?id=CVE-2004-,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Quoting Element TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,Research Concept
770,Allocation of Resources Without Limits or Throttling,Base,Incomplete,"The product allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on the size or number of resources that can be allocated, in violation of the intended security policy for that actor.","Code frequently has to work with limited resources, so programmers must be careful to ensure that resources are not consumed too quickly, or too easily. Without use of quotas, resource limits, or other protection mechanisms, it can be easy for an attacker",NATURE:ChildOf:CWE ID:400 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:665 VIEW ID:1000 NATURE:ChildOf:CWE ID:400 VIEW ID:1003 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Often,,,PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase. PHASE - Implementation PHASE - Operation PHASE - System Configuration,"SCOPE - Availability IMPACT - DoS -  Resource Consumption (CPU) IMPACT - DoS -  Resource Consumption (Memory) IMPACT - DoS -  Resource Consumption (Other) NOTE - When allocating resources without limits, an attacker could prevent other systems, applicatio","METHOD - Manual Static Analysis DESCRIPTION - Manual static analysis can be useful for finding this weakness, but it might not achieve desired code coverage within limited time constraints. If denial-of-service is not considered a significant risk, or if ","PHASE - Requirements DESCRIPTION - Clearly specify the minimum and maximum expectations for capabilities, and dictate which behaviors are acceptable when resource allocation reaches limits.  PHASE - Architecture and Design DESCRIPTION - Limit the amount o","REFERENCE - CVE-2022-21668 DESCRIPTION - Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190). LI",,,TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO04-J:ENTRY NAME:Close resources when they are no longer needed TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SER12-J:ENTRY NAME:Avoid memo,"TYPE - Relationship NOTE - This entry is different from uncontrolled resource consumption (CWE-400) in that there are other weaknesses that are related to inability to control resource consumption, such as holding on to a resource too long after use, or n","Software Development,Research Concept"
291,Reliance on IP Address for Authentication,Variant,Incomplete,The product uses an IP address for authentication.,"IP addresses can be easily spoofed. Attackers can forge the source IP address of the packets they send, but response packets will return to the forged IP address. To see the response packets, the attacker has to sniff the traffic between the victim machin",NATURE:ChildOf:CWE ID:290 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:923 VIEW ID:1000 NATURE:ChildOf:CWE ID:471 VIEW ID:1000,: ORDINALITY:Resultant::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.,"SCOPE - Access Control SCOPE - Non-Repudiation IMPACT - Hide Activities IMPACT - Gain Privileges or Assume Identity NOTE - Malicious users can fake authentication information, impersonating any IP address.",,PHASE - Architecture and Design DESCRIPTION - Use other means of identity verification that cannot be simply spoofed. Possibilities include a username/password or certificate.,"REFERENCE - CVE-2022-30319 DESCRIPTION - S-bus functionality in a home automation product performs access control using an IP allowlist, which can be bypassed by a forged IP address. LINK - https://www.cve.org/CVERecord?id=CVE-2022-30319",,,TAXONOMY NAME - CLASP:ENTRY NAME:Trusting self-reported IP address::,,Research Concept
1190,DMA Device Enabled Too Early in Boot Phase,Base,Draft,"The product enables a Direct Memory Access (DMA) capable device before the security configuration settings are established, which allows an attacker to extract data from or gain privileges on the product.","DMA is included in a number of devices because it allows data transfer between the computer and the connected device, using direct hardware access to read or write directly to main memory without any OS interaction. An attacker could exploit this to acces",NATURE:ChildOf:CWE ID:696 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:System on Chip TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design,SCOPE - Access Control IMPACT - Bypass Protection Mechanism IMPACT - Modify Memory LIKELIHOOD - High NOTE - DMA devices have direct write access to main memory and due to time of attack will be able to bypass OS or Bootloader access control.,,PHASE - Architecture and Design DESCRIPTION - Utilize an IOMMU to orchestrate IO access from the start of the boot process.,,,,,,"Hardware Development,Research Concept"
1338,Improper Protections Against Hardware Overheating,Base,Draft,A hardware device is missing or has inadequate protection features to prevent overheating.,"Hardware, electrical circuits, and semiconductor silicon have thermal side effects, such that some of the energy consumed by the device gets dissipated as heat and increases the temperature of the device. For example, in semiconductors, higher-operating f",NATURE:ChildOf:CWE ID:693 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,"PHASE - Architecture and Design PHASE - Implementation: NOTE - Such issues could be introduced during hardware architecture, design or implementation.",SCOPE - Availability IMPACT - DoS -  Resource Consumption (Other) LIKELIHOOD - High,METHOD - Dynamic Analysis with Manual Results Interpretation DESCRIPTION - Dynamic tests should be performed to stress-test temperature controls. EFFECTIVENESS - High  METHOD - Architecture or Design Review DESCRIPTION - Power management controls should b,PHASE - Architecture and Design DESCRIPTION - Temperature maximum and minimum limits should be enforced using thermal sensors both in silicon and at the platform level.  PHASE - Implementation DESCRIPTION - The platform should support cooling solutions su,,,,,,"Hardware Development,Research Concept"
1007,Insufficient Visual Distinction of Homoglyphs Presented to User,Base,Incomplete,"The product displays information or identifiers to a user, but the display mechanism does not make it easy for the user to distinguish between visually similar or identical glyphs (homoglyphs), which may cause the user to misinterpret a glyph and perform ","Some glyphs, pictures, or icons can be semantically distinct to a program, while appearing very similar or identical to a human user. These are referred to as homoglyphs. For example, the lowercase l (ell) and uppercase I (eye) have different character co",NATURE:ChildOf:CWE ID:451 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Resultant::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Web Based TECHNOLOGY PREVALENCE:Sometimes,,"TERM - Homograph Attack DESCRIPTION - Homograph is often used as a synonym of homoglyph by researchers, but according to Wikipedia, a homograph is a word that has multiple, distinct meanings.::","PHASE - Architecture and Design: NOTE - This weakness may occur when characters from various character sets are allowed to be interchanged within a URL, username, email address, etc. without any notification to the user or underlying system being used. PH","SCOPE - Integrity SCOPE - Confidentiality IMPACT - Other NOTE - An attacker may ultimately redirect a user to a malicious website, by deceiving the user into believing the URL they are accessing is a trusted domain. However, the attack can also be used to","METHOD - Manual Dynamic Analysis DESCRIPTION - If utilizing user accounts, attempt to submit a username that contains homoglyphs. Similarly, check to see if links containing homoglyphs can be sent via email, web browsers, or other mechanisms. EFFECTIVENES","PHASE - Implementation DESCRIPTION - Use a browser that displays Punycode for IDNs in the URL and status bars, or which color code various scripts in URLs. Due to the prominence of homoglyph attacks, several browsers now help safeguard against this attack",REFERENCE - CVE-2013-7236 DESCRIPTION - web forum allows impersonation of users with homoglyphs in account names LINK - https://www.cve.org/CVERecord?id=CVE-2013-7236  REFERENCE - CVE-2012-0584 DESCRIPTION - Improper character restriction in URLs in web b,,,,,"Software Development,Research Concept"
1293,Missing Source Correlation of Multiple Independent Data,Base,Draft,"The product relies on one source of data, preventing the ability to detect if an adversary has compromised a data source.","To operate successfully, a product sometimes has to implicitly trust the integrity of an information source. When information is implicitly signed, one can ensure that the data was not tampered in transit. This does not ensure that the information source ",NATURE:ChildOf:CWE ID:345 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:654 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design: NOTE - This flaw could be introduced during the design of the application or misconfiguration at run time by only specifying a single point of validation. PHASE - Implementation: NOTE - Such issues could be introduced duri,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Application Data IMPACT - Modify Application Data IMPACT - Gain Privileges or Assume Identity NOTE - An attacker that may be able to execute a single Person-in-the-Middle attack can subvert a check o,,"PHASE - Requirements DESCRIPTION - Design system to use a Practical Byzantine fault method, to request information from multiple sources to verify the data and report on potentially compromised information sources.  PHASE - Implementation DESCRIPTION - Fa",,,,,,Research Concept
832,Unlock of a Resource that is not Locked,Base,Incomplete,The product attempts to unlock a resource that is not locked.,"Depending on the locking functionality, an unlock of a non-locked resource might cause memory corruption or other modification to the resource (or its associated metadata that is used for tracking locks).",NATURE:ChildOf:CWE ID:667 VIEW ID:1000 ORDINAL:Primary,,,,,#VALUE!,"SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability SCOPE - Other IMPACT - DoS -  Crash, Exit, or Restart IMPACT - Execute Unauthorized Code or Commands IMPACT - Modify Memory IMPACT - Other NOTE - Depending on the locking being used, an unlock",,,"REFERENCE - CVE-2010-4210 DESCRIPTION - function in OS kernel unlocks a mutex that was not previously locked, causing a panic or overwrite of arbitrary memory. LINK - https://www.cve.org/CVERecord?id=CVE-2010-4210  REFERENCE - CVE-2008-4302 DESCRIPTION -",,,,,"Software Development,Research Concept"
37,Path Traversal: '/absolute/pathname/here',Variant,Draft,"The product accepts input in the form of a slash absolute path ('/absolute/pathname/here') without appropriate validation, which can allow an attacker to traverse the file system to unintended locations or access arbitrary files.",,NATURE:ChildOf:CWE ID:36 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:160 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,"PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n",REFERENCE - CVE-2002-1345 DESCRIPTION - Multiple FTP clients write arbitrary files via absolute paths in server responses LINK - https://www.cve.org/CVERecord?id=CVE-2002-1345  REFERENCE - CVE-2001-1269 DESCRIPTION - ZIP file extractor allows full path LI,,,TAXONOMY NAME - PLOVER:ENTRY NAME:/absolute/pathname/here TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FIO05-C:ENTRY NAME:Identify files using multiple file attributes TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,,Research Concept
267,Privilege Defined With Unsafe Actions,Base,Incomplete,"A particular privilege, role, capability, or right can be used to perform unsafe actions that were not intended, even when it is assigned to the correct entity.",,NATURE:ChildOf:CWE ID:269 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. PHASE - Operation,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - A user can access restricted functionality and/or sensitive information that may include administrative functionality and user accounts.,,"PHASE - Architecture and Design Operation DESCRIPTION - Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software.  PHASE - Architecture and Design Operation STRATEGY - Environment Hardening D",REFERENCE - CVE-2002-1981 DESCRIPTION - Roles have access to dangerous procedures (Accessible entities). LINK - https://www.cve.org/CVERecord?id=CVE-2002-1981  REFERENCE - CVE-2002-1671 DESCRIPTION - Untrusted object/method gets access to clipboard (Acces,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Unsafe Privilege::,TYPE - Maintenance NOTE - Note: there are 2 separate sub-categories here: - privilege incorrectly allows entities to perform certain actions - object is incorrectly accessible to entities with a given privilege::,"Software Development,Research Concept"
121,Stack-based Buffer Overflow,Variant,Draft,"A stack-based buffer overflow condition is a condition where the buffer being overwritten is allocated on the stack (i.e., is a local variable or, rarely, a parameter to a function).",,NATURE:ChildOf:CWE ID:788 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:787 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,"There are generally several security-critical data on an execution stack that can lead to arbitrary code execution. The most prominent is the stored return address, the memory address at which execution should continue once the current function is finishe","TERM - Stack Overflow DESCRIPTION - Stack Overflow is often used to mean the same thing as stack-based buffer overflow, however it is also used on occasion to mean stack exhaustion, usually a result from an excessively recursive function call. Due to the",PHASE - Implementation,"SCOPE - Availability IMPACT - Modify Memory IMPACT - DoS -  Crash, Exit, or Restart IMPACT - DoS -  Resource Consumption (CPU) IMPACT - DoS -  Resource Consumption (Memory) NOTE - Buffer overflows generally lead to crashes. Other attacks leading to lack o","METHOD - Fuzzing DESCRIPTION - Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often c","PHASE - Operation Build and Compilation STRATEGY - Environment Hardening DESCRIPTION - Use automatic buffer overflow detection mechanisms that are offered by certain compilers or compiler extensions. Examples include  the Microsoft Visual Studio /GS flag,","REFERENCE - CVE-2021-35395 DESCRIPTION - Stack-based buffer overflows in SFK for wifi chipset used for IoT/embedded devices, as exploited in the wild per CISA KEV. LINK - https://www.cve.org/CVERecord?id=CVE-2021-35395",,,TAXONOMY NAME - CLASP:ENTRY NAME:Stack overflow TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP8:ENTRY NAME:Faulty Buffer Access TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:ARR38-C:ENTRY NAME:Guarantee that library functions do not form invalid poi,"TYPE - Other NOTE - Stack-based buffer overflows can instantiate in return address overwrites, stack pointer overwrites or frame pointer overwrites. They can also be considered function pointer overwrites, array indexer overwrites or write-what-where cond",Research Concept
73,External Control of File Name or Path,Base,Draft,The product allows user input to control or influence paths or file names that are used in filesystem operations.,This could allow an attacker to access or modify system files or other files that are critical to the application. Path manipulation errors occur when the following two conditions are met: 1. An attacker can specify a path used in an operation on the file,NATURE:ChildOf:CWE ID:642 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:610 VIEW ID:1000 NATURE:ChildOf:CWE ID:20 VIEW ID:700 ORDINAL:Primary NATURE:CanPrecede:CWE ID:22 VIEW ID:1000 NATURE:CanPrecede:CWE ID:41 VIEW ID:1000 NATURE:CanPrecede:CWE ID:9,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Unix OPERATING SYSTEM PREVALENCE:Often OPERATING SYSTEM CLASS:Windows OPERATING SYSTEM PREVALENCE:Often OPERATING SYSTEM CLASS:macOS OPERATING SYSTEM PREVALENCE:O,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Integrity SCOPE - Confidentiality IMPACT - Read Files or Directories IMPACT - Modify Files or Directories NOTE - The application can operate on unexpected files. Confidentiality is violated when the targeted filename is not directly readable by th,METHOD - Automated Static Analysis DESCRIPTION - The external control or influence of filenames can often be detected using automated static analysis that models data flow within the product. Automated static analysis might not be able to recognize when p,"PHASE - Architecture and Design DESCRIPTION - When the set of filenames is limited or known, create a mapping from a set of fixed input values (such as numeric IDs) to the actual filenames, and reject all other inputs. For example, ID 1 could map to inbox","REFERENCE - CVE-2022-45918 DESCRIPTION - Chain: a learning management tool debugger uses external input to locate previous session logs (CWE-73) and does not properly validate the given path (CWE-20), allowing for filesystem path traversal using ../ seque",,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Path Manipulation TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,"TYPE - Maintenance NOTE - CWE-114 is a Class, but it is listed a child of CWE-73 in view 1000. This suggests some abstraction problems that should be resolved in future versions.  TYPE - Relationship NOTE - The external control of filenames can be the pri","Software Development,Research Concept"
614,Sensitive Cookie in HTTPS Session Without 'Secure' Attribute,Variant,Draft,"The Secure attribute for sensitive cookies in HTTPS sessions is not set, which could cause the user agent to send those cookies in plaintext over an HTTP session.",,NATURE:ChildOf:CWE ID:319 VIEW ID:1000 ORDINAL:Primary,,TECHNOLOGY CLASS:Web Based TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Application Data,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - Always set the secure attribute when the cookie should sent via HTTPS only.,"REFERENCE - CVE-2004-0462 DESCRIPTION - A product does not set the Secure attribute for sensitive cookies in HTTPS sessions, which could cause the user agent to send those cookies in plaintext over an HTTP session with the product. LINK - https://www.cve.",,,,,Research Concept
589,Call to Non-ubiquitous API,Variant,Incomplete,The product uses an API function that does not exist on all versions of the target platform. This could cause portability problems or inconsistencies that allow denial of service or other consequences.,"Some functions that offer security features supported by the OS are not available on all versions of the OS in common use. Likewise, functions are often deprecated or made obsolete for security reasons and should not be used.",NATURE:ChildOf:CWE ID:474 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Other IMPACT - Quality Degradation,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - Always test your code on any platform on which it is targeted to run on.  PHASE - Testing DESCRIPTION - Test your code on the newest and oldest platform on which it is targeted to run on.  PHASE - Testing DESCRIPTION -,,,,TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MET02-J:ENTRY NAME:Do not use deprecated or obsolete classes or methods TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SER00-J:ENTRY NAME:Main,,Research Concept
308,Use of Single-factor Authentication,Base,Draft,The use of single-factor authentication can lead to unnecessary risk of compromise when compared with the benefits of a dual-factor authentication scheme.,"While the use of multiple authentication schemes is simply piling on more complexity on top of authentication, it is inestimably valuable to have such measures of redundancy. The use of weak, reused, and common passwords is rampant on the internet. Withou",NATURE:ChildOf:CWE ID:1390 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:654 VIEW ID:1000 NATURE:PeerOf:CWE ID:309 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.,"SCOPE - Access Control IMPACT - Bypass Protection Mechanism NOTE - If the secret in a single-factor authentication scheme gets compromised, full authentication is possible.",,"PHASE - Architecture and Design DESCRIPTION - Use multiple independent authentication schemes, which ensures that -- if one of the methods is compromised -- the system itself is still likely safe from compromise.","REFERENCE - CVE-2022-35248 DESCRIPTION - Chat application skips validation when Central Authentication Service (CAS) is enabled, effectively removing the second factor from two-factor authentication LINK - https://www.cve.org/CVERecord?id=CVE-2022-35248",,,TAXONOMY NAME - CLASP:ENTRY NAME:Using single-factor authentication::,,"Software Development,Research Concept"
466,Return of Pointer Value Outside of Expected Range,Base,Draft,A function can return a pointer to memory that is outside of the buffer that the pointer is expected to reference.,,NATURE:ChildOf:CWE ID:119 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:20 VIEW ID:700 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Memory IMPACT - Modify Memory,,,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Illegal Pointer Value TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP1:ENTRY NAME:Glitch in computation::,"TYPE - Maintenance NOTE - This entry should have a chaining relationship with CWE-119 instead of a parent / child relationship, however the focus of this weakness does not map cleanly to any existing entries in CWE. A new parent is being considered which ","Software Development,Research Concept"
487,Reliance on Package-level Scope,Base,Incomplete,"Java packages are not inherently closed; therefore, relying on them for code security is not a good practice.",The purpose of package scope is to prevent accidental access by other parts of a program. This is an ease-of-software-development feature but not a security feature.,NATURE:ChildOf:CWE ID:664 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Application Data NOTE - Any data in a Java package can be accessed outside of the Java framework if the package is distributed.  SCOPE - Integrity IMPACT - Modify Application Data NOTE - The data in a Java class can b,,"PHASE - Architecture and Design Implementation DESCRIPTION - Data should be private static and final whenever possible. This will assure that your code is protected by instantiating early, preventing access and tampering.",,,,TAXONOMY NAME - CLASP:ENTRY NAME:Relying on package-level scope TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MET04-J:ENTRY NAME:Do not increase the accessibility of overridden or hidden methods::,,"Software Development,Research Concept"
1303,Non-Transparent Sharing of Microarchitectural Resources,Base,Draft,"Hardware structures shared across execution contexts (e.g., caches and branch predictors) can violate the expected architecture isolation between contexts.","Modern processors use techniques such as out-of-order execution, speculation, prefetching, data forwarding, and caching to increase performance. Details about the implementation of these techniques are hidden from the programmer's view. This is problemati",NATURE:ChildOf:CWE ID:1189 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:203 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design: NOTE - Such issues could be introduced during hardware architecture and design and identified later during Testing or System Configuration phases. PHASE - Implementation: NOTE - Such issues could be introduced during imple,"SCOPE - Confidentiality IMPACT - Read Application Data IMPACT - Read Memory NOTE - Microarchitectural side-channels have been used to leak specific information such as cryptographic keys, and Address Space Layout Randomization (ALSR) offsets as well as ar",,"PHASE - Architecture and Design DESCRIPTION - Microarchitectural covert channels can be addressed using a mixture of hardware and software mitigation techniques. These include partitioned caches, new barrier and flush instructions, and disabling high reso",,,,,"TYPE - Maintenance NOTE - As of CWE 4.9, members of the CWE Hardware SIG are closely analyzing this entry and others to improve CWE's coverage of transient execution weaknesses, which include issues related to Spectre, Meltdown, and other attacks. Additio","Hardware Development,Research Concept"
760,Use of a One-Way Hash with a Predictable Salt,Variant,Incomplete,"The product uses a one-way cryptographic hash against an input that should not be reversible, such as a password, but the product uses a predictable salt as part of the input.","This makes it easier for attackers to pre-compute the hash value using dictionary attack techniques such as rainbow tables, effectively disabling the protection that an unpredictable salt would provide. It should be noted that, despite common perceptions,",NATURE:ChildOf:CWE ID:916 VIEW ID:1000 ORDINAL:Primary,,,"In cryptography, salt refers to some random addition of data to an input before hashing to make dictionary attacks more difficult.",,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Access Control IMPACT - Bypass Protection Mechanism,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Architecture and Design DESCRIPTION - Use an adaptive hash function that can be configured to change the amount of computational effort needed to compute the hash, such as the number of iterations (stretching) or the amount of memory required. Som",REFERENCE - CVE-2008-4905 DESCRIPTION - Blogging software uses a hard-coded salt when calculating a password hash. LINK - https://www.cve.org/CVERecord?id=CVE-2008-4905  REFERENCE - CVE-2002-1657 DESCRIPTION - Database server uses the username for a salt,,,,"TYPE - Maintenance NOTE - As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, randomness is used heavily. However, within cryptography, entropy is distinct, typically i",Research Concept
1054,Invocation of a Control Element at an Unnecessarily Deep Horizontal Layer,Base,Incomplete,"The code at one architectural layer invokes code that resides at a deeper layer than the adjacent layer, i.e., the invocation skips at least one layer, and the invoked code is not part of a vertical utility layer that can be referenced from any horizontal","This issue makes it more difficult to understand and maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",NATURE:ChildOf:CWE ID:1061 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,TAXONOMY NAME - OMG ASCMM:ENTRY ID:ASCMM-MNT-12::,,"Software Development,Research Concept"
624,Executable Regular Expression Error,Base,Incomplete,"The product uses a regular expression that either (1) contains an executable component with user-controlled inputs, or (2) allows a user to enable execution by inserting pattern modifiers.","Case (2) is possible in the PHP preg_replace() function, and possibly in other languages when a user-controlled input is inserted into a string that is later parsed as a regular expression.",NATURE:ChildOf:CWE ID:77 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:77 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:77 VIEW ID:1340 ORDINAL:Primary,,LANGUAGE NAME:PHP LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Perl LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands,,"PHASE - Implementation DESCRIPTION - The regular expression feature in some languages allows inputs to be quoted or escaped before insertion, such as Q and E in Perl.",REFERENCE - CVE-2006-2059 DESCRIPTION - Executable regexp in PHP by inserting e modifier into first argument to preg_replace LINK - https://www.cve.org/CVERecord?id=CVE-2006-2059  REFERENCE - CVE-2005-3420 DESCRIPTION - Executable regexp in PHP by inserti,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,"TYPE - Research Gap NOTE - Under-studied. The existing PHP reports are limited to highly skilled researchers, but there are few examples for other languages. It is suspected that this is under-reported for all languages. Usability factors might make it mo","Software Development,Research Concept"
698,Execution After Redirect (EAR),Base,Incomplete,"The web application sends a redirect to another location, but instead of exiting, it executes additional code.",,NATURE:ChildOf:CWE ID:705 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:670 VIEW ID:1000,: ORDINALITY:Primary::,,,TERM - Redirect Without Exit::,PHASE - Implementation,SCOPE - Other -  SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Alter Execution Logic IMPACT - Execute Unauthorized Code or Commands NOTE - This weakness could affect the control flow of the application and allow execution of untr,"METHOD - Black Box DESCRIPTION - This issue might not be detected if testing is performed using a web browser, because the browser might obey the redirect and move the user to a different page before the application has produced outputs that indicate some",,REFERENCE - CVE-2013-1402 DESCRIPTION - Execution-after-redirect allows access to application configuration details. LINK - https://www.cve.org/CVERecord?id=CVE-2013-1402  REFERENCE - CVE-2009-1936 DESCRIPTION - chain: library file sends a redirect if it,,,,,"Software Development,Research Concept"
1098,Data Element containing Pointer Item without Proper Copy Control Element,Base,Incomplete,The code contains a data element with a pointer that does not have an associated copy or constructor method.,"This issue can prevent the product from running reliably. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.",NATURE:ChildOf:CWE ID:1076 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Reliability,,,,,,TAXONOMY NAME - OMG ASCRM:ENTRY ID:ASCRM-RLB-6::,,"Software Development,Research Concept"
42,Path Equivalence: 'filename.' (Trailing Dot),Variant,Incomplete,"The product accepts path input in the form of trailing dot ('filedir.') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",,NATURE:ChildOf:CWE ID:41 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:162 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Access Control IMPACT - Bypass Protection Mechanism,,,REFERENCE - CVE-2000-1114 DESCRIPTION - Source code disclosure using trailing dot LINK - https://www.cve.org/CVERecord?id=CVE-2000-1114  REFERENCE - CVE-2002-1986 DESCRIPTION - Source code disclosure using trailing dot LINK - https://www.cve.org/CVERecord,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Trailing Dot - 'filedir.' TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,,Research Concept
1267,Policy Uses Obsolete Encoding,Base,Draft,The product uses an obsolete encoding mechanism to implement access controls.,"Within a System-On-a-Chip (SoC), various circuits and hardware engines generate transactions for the purpose of accessing (read/write) assets or performing various actions (e.g., reset, fetch, compute, etc.). Among various types of message information, a ",NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Access Control IMPACT - Modify Memory IMPACT - Read Memory IMPACT - Modify Files or Directories IMPACT - Read Files or Directories IMPACT - DoS -  Resource Consumption (Other) IMPACT -,,PHASE - Architecture and Design Implementation DESCRIPTION - Security Token Decoders should be reviewed for design inconsistency and common weaknesses. Access and programming flows should be tested in both pre-silicon and post-silicon testing. EFFECTIVENE,,,,,,"Hardware Development,Research Concept"
386,Symbolic Name not Mapping to Correct Object,Base,Draft,"A constant symbolic reference to an object is used, even though the reference can resolve to a different object over time.",,NATURE:ChildOf:CWE ID:706 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:367 VIEW ID:1000 NATURE:PeerOf:CWE ID:610 VIEW ID:1000 NATURE:PeerOf:CWE ID:486 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - The attacker can gain access to otherwise unauthorized resources.  SCOPE - Integrity SCOPE - Confidentiality SCOPE - Other IMPACT - Modify Application Data IMPACT - Modify Files or ,,,,,,TAXONOMY NAME - CLASP:ENTRY NAME:Symbolic name not mapping to correct object::,,"Software Development,Research Concept"
1253,Incorrect Selection of Fuse Values,Base,Draft,The logic level used to set a system to a secure state relies on a fuse being unblown. An attacker can set the system to an insecure state merely by blowing the fuse.,"Fuses are often used to store secret data, including security configuration data. When not blown, a fuse is considered to store a logic 0, and, when blown, it indicates a logic 1. Fuses are generally considered to be one-directional, i.e., once blown to l",NATURE:ChildOf:CWE ID:693 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design PHASE - Implementation,"SCOPE - Access Control SCOPE - Authorization IMPACT - Bypass Protection Mechanism IMPACT - Gain Privileges or Assume Identity  SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart  SCOPE - Confidentiality IMPACT - Read Memory  SCOPE - Integrity IM",,PHASE - Architecture and Design DESCRIPTION - Logic should be designed in a way that blown fuses do not put the product into an insecure state that can be leveraged by an attacker.,,,,,TYPE - Maintenance NOTE - This entry is still under development and will continue to see updates and content improvements.::,"Hardware Development,Research Concept"
685,Function Call With Incorrect Number of Arguments,Variant,Draft,"The product calls a function, procedure, or routine, but the caller specifies too many arguments, or too few arguments, which may lead to undefined behavior and resultant weaknesses.",,NATURE:ChildOf:CWE ID:628 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Perl LANGUAGE PREVALENCE:Undetermined,,,"PHASE - Implementation: NOTE - This problem typically occurs when the programmer makes a typo, or copy and paste errors.",SCOPE - Other IMPACT - Quality Degradation,"METHOD - Other DESCRIPTION - While this weakness might be caught by the compiler in some languages, it can occur more frequently in cases in which the called function accepts variable numbers of arguments, such as format strings in C. It also can occur in",PHASE - Testing DESCRIPTION - Because this function call often produces incorrect behavior it will usually be detected during testing or normal operation of the product. During testing exercise all possible control paths will typically expose this weaknes,,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP1:ENTRY NAME:Glitch in computation TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:EXP37-C:ENTRY NAME:Call functions with the correct number and type of arguments:MAPPING FIT:CWE More Specific TAXONOMY NAM,,Research Concept
406,Insufficient Control of Network Message Volume (Network Amplification),Class,Incomplete,"The product does not sufficiently monitor or control transmitted network traffic volume, so that an actor can cause the product to transmit more traffic than should be allowed for that actor.","In the absence of a policy to restrict asymmetric resource consumption, the application or system cannot distinguish between legitimate transmissions and traffic intended to serve as an amplifying attack on target systems. Systems can often be configured ",NATURE:ChildOf:CWE ID:405 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,"PHASE - Operation PHASE - Architecture and Design: NOTE - If the application uses UDP, then it could potentially be subject to spoofing attacks that use the inherent weaknesses of UDP to perform traffic amplification, although this problem can exist in ot","SCOPE - Availability IMPACT - DoS -  Amplification IMPACT - DoS -  Crash, Exit, or Restart IMPACT - DoS -  Resource Consumption (CPU) IMPACT - DoS -  Resource Consumption (Memory) IMPACT - DoS -  Resource Consumption (Other) NOTE - System resources can be",,PHASE - Architecture and Design STRATEGY - Separation of Privilege DESCRIPTION - An application must make network resources available to a client commensurate with the client's access level.  PHASE - Policy DESCRIPTION - Define a clear policy for network ,"REFERENCE - CVE-1999-0513 DESCRIPTION - Classic Smurf attack, using spoofed ICMP packets to broadcast addresses. LINK - https://www.cve.org/CVERecord?id=CVE-1999-0513  REFERENCE - CVE-1999-1379 DESCRIPTION - DNS query with spoofed source address causes mo",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Network Amplification::,"TYPE - Relationship NOTE - This can be resultant from weaknesses that simplify spoofing attacks.  TYPE - Theoretical NOTE - Network amplification, when performed with spoofing, is normally a multi-channel attack from attacker (acting as user) to amplifier",Research Concept
563,Assignment to Variable without Use,Base,Draft,"The variable's value is assigned but never used, making it a dead store.","After the assignment, the variable is either assigned another value or goes out of scope. It is likely that the variable is simply vestigial, but it is also possible that the unused variable points out a bug.",NATURE:ChildOf:CWE ID:1164 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,TERM - Unused Variable::,PHASE - Implementation,SCOPE - Other IMPACT - Quality Degradation IMPACT - Varies by Context NOTE - This weakness could be an indication of a bug in the program or a deprecated variable that was not removed and is an indication of poor quality. This could lead to further bugs a,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - Remove unused variables from the code.,,,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:MSC00-C:ENTRY NAME:Compile cleanly at high warning levels TAXONOMY NAME - SEI CERT Perl Coding Standard:ENTRY ID:MSC01-PL:ENTRY NAME:Detect and remove unused variables:MAPPING FIT:Imprecise TAXONOMY NAME - Sof,,"Software Development,Research Concept"
1112,Incomplete Documentation of Program Execution,Base,Incomplete,The document does not fully define all mechanisms that are used to control or influence how product-specific programs are executed.,"This includes environmental variables, configuration files, registry keys, command-line switches or options, or system settings.",NATURE:ChildOf:CWE ID:1059 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,#VALUE!,,,,,,,,"Software Development,Research Concept"
273,Improper Check for Dropped Privileges,Base,Incomplete,The product attempts to drop privileges but does not check or incorrectly checks to see if the drop succeeded.,"If the drop fails, the product will continue to run with the raised privileges, which might provide additional access to unprivileged users.",NATURE:ChildOf:CWE ID:754 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:754 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:271 VIEW ID:1000 NATURE:PeerOf:CWE ID:252 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,"In Windows based environments that have access control, impersonation is used so that access checks can be performed on a client identity by a server with higher privileges. By impersonating the client, the server is restricted to client-level security --",,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. This issue is likely to occur in restrictive environments in which the operating system or application provides fine-grained con,"SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - If privileges are not dropped, neither are access rights of the user. Often these rights can be prevented from being dropped.  SCOPE - Access Control SCOPE - Non-Repudiation IMPACT ","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design STRATEGY - Separation of Privilege DESCRIPTION - Compartmentalize the system to have safe areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always b,"REFERENCE - CVE-2006-4447 DESCRIPTION - Program does not check return value when invoking functions to drop privileges, which could leave users with higher privileges than expected by forcing those functions to fail. LINK - https://www.cve.org/CVERecord?i",,System Process,TAXONOMY NAME - CLASP:ENTRY NAME:Failure to check whether privileges were dropped successfully TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:POS37-C:ENTRY NAME:Ensure that privilege relinquishment is successful:MAPPING FIT:Exact TAXONOMY NAME - Software F,,"Software Development,Research Concept"
792,Incomplete Filtering of One or More Instances of Special Elements,Variant,Incomplete,"The product receives data from an upstream component, but does not completely filter one or more instances of special elements before sending it to a downstream component.","Incomplete filtering of this nature involves either: only filtering a single instance of a special element when more exist, or not filtering all instances or all elements where multiple special elements exist.",NATURE:ChildOf:CWE ID:791 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Integrity IMPACT - Unexpected State,,,,,,,,Research Concept
667,Improper Locking,Class,Draft,"The product does not properly acquire or release a lock on a resource, leading to unexpected resource state changes and behaviors.",Locking is a type of synchronization behavior that ensures that multiple independently-operating processes or threads do not interfere with each other when accessing the same resource. All processes/threads are expected to follow the same steps for lockin,NATURE:ChildOf:CWE ID:662 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:662 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:662 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:662 VIEW ID:1340 ORDINAL:Primary,,,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Availability IMPACT - DoS -  Resource Consumption (CPU) NOTE - Inconsistent locking discipline can lead to deadlock.,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation STRATEGY - Libraries or Frameworks DESCRIPTION - Use industry standard APIs to implement locking mechanism.,"REFERENCE - CVE-2021-1782 DESCRIPTION - Chain: improper locking (CWE-667) leads to race condition (CWE-362), as exploited in the wild per CISA KEV. LINK - https://www.cve.org/CVERecord?id=CVE-2021-1782  REFERENCE - CVE-2009-0935 DESCRIPTION - Attacker pro",,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:CON31-C:ENTRY NAME:Do not destroy a mutex while it is locked:MAPPING FIT:CWE More Abstract TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:POS48-C:ENTRY NAME:Do not unlock or destroy another POSIX thread's mutex,"TYPE - Maintenance NOTE - Deeper research is necessary for synchronization and related mechanisms, including locks, mutexes, semaphores, and other mechanisms. Multiple entries are dependent on this research, which includes relationships to concurrency, ra",Research Concept
65,Windows Hard Link,Variant,Incomplete,"The product, when opening a file or directory, does not sufficiently handle when the name is associated with a hard link to a target that is outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthoriz","Failure for a system to check for hard links can result in vulnerability to different types of attacks. For example, an attacker can escalate their privileges if a file used by a privileged program is replaced with a hard link to a sensitive file (e.g. AU",NATURE:ChildOf:CWE ID:59 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Windows OPERATING SYSTEM PREVALENCE:Undetermined,,,PHASE - Implementation PHASE - Operation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,PHASE - Architecture and Design STRATEGY - Separation of Privilege DESCRIPTION - Follow the principle of least privilege when assigning access rights to entities in a software system. Denying access to a file can prevent an attacker from replacing that fi,"REFERENCE - CVE-2002-0725 DESCRIPTION - File system allows local attackers to hide file usage activities via a hard link to the target file, which causes the link to be recorded in the audit trail instead of the target file. LINK - https://www.cve.org/CVE",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Windows hard link TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FIO05-C:ENTRY NAME:Identify files using multiple file attributes TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP18:ENTRY NAME:Link in resource name reso,,Research Concept
378,Creation of Temporary File With Insecure Permissions,Base,Draft,"Opening temporary files without appropriate measures or controls can leave the file, its contents and any function that it impacts vulnerable to attack.",,NATURE:ChildOf:CWE ID:377 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Confidentiality IMPACT - Read Application Data NOTE - If the temporary file can be read by the attacker, sensitive information may be in that file which could be revealed.  SCOPE - Authorization SCOPE - Other IMPACT - Other NOTE - If that file can",,PHASE - Requirements DESCRIPTION - Many contemporary languages have functions which properly handle this condition. Older C temp file functions are especially susceptible.  PHASE - Implementation DESCRIPTION - Ensure that you use proper file permissions. ,"REFERENCE - CVE-2022-24823 DESCRIPTION - A network application framework uses the Java function createTempFile(), which will create a file that is readable by other local users of the system LINK - https://www.cve.org/CVERecord?id=CVE-2022-24823",,,TAXONOMY NAME - CLASP:ENTRY NAME:Improper temp file opening::,,"Software Development,Research Concept"
200,Exposure of Sensitive Information to an Unauthorized Actor,Class,Draft,The product exposes sensitive information to an actor that is not explicitly authorized to have access to that information.,"There are many different kinds of mistakes that introduce information exposures. The severity of the error can range widely, depending on the context in which the product operates, the type of sensitive information that is revealed, and the benefits it ma",NATURE:ChildOf:CWE ID:668 VIEW ID:1000 ORDINAL:Primary,": ORDINALITY:Primary:DESCRIPTION:Developers may insert sensitive information that they do not believe, or they might forget to remove the sensitive information after it has been processed: ORDINALITY:Resultant:DESCRIPTION:Separate mistakes or weaknesses c",LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Mobile TECHNOLOGY PREVALENCE:Undetermined,,"TERM - Information Disclosure DESCRIPTION - This term is frequently used in vulnerability advisories to describe a consequence or technical impact, for any vulnerability that has a loss of confidentiality. Often, CWE-200 can be misused to represent the lo",PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Application Data,"METHOD - Automated Static Analysis - Binary or Bytecode DESCRIPTION - According to SOAR, the following detection techniques may be useful  Cost effective for partial coverage  Bytecode Weakness Analysis - including disassembler + source code weakness anal",PHASE - Architecture and Design STRATEGY - Separation of Privilege DESCRIPTION - Compartmentalize the system to have safe areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always b,REFERENCE - CVE-2022-31162 DESCRIPTION - Rust library leaks Oauth client details in application debug logs LINK - https://www.cve.org/CVERecord?id=CVE-2022-31162  REFERENCE - CVE-2021-25476 DESCRIPTION - Digital Rights Management (DRM) capability for mobi,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Information Leak (information disclosure) TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A6:ENTRY NAME:Information Leakage and Improper Error Handling:MAPPING FIT:CWE More Specific TAXONOMY NAME - WASC:ENTRY ID:13:ENTRY NAME,"TYPE - Maintenance NOTE - As a result of mapping analysis in the 2020 Top 25 and more recent versions, this weakness is under review, since it is frequently misused in mapping to cover many problems that lead to loss of confidentiality. See Mapping Notes,",Research Concept
298,Improper Validation of Certificate Expiration,Variant,Draft,"A certificate expiration is not validated or is incorrectly validated, so trust may be assigned to certificates that have been abandoned due to age.","When the expiration of a certificate is not taken into account, no trust has necessarily been conveyed through it. Therefore, the validity of the certificate cannot be verified and all benefit of the certificate is lost.",NATURE:ChildOf:CWE ID:295 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:672 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,"PHASE - Implementation: NOTE - When the software uses certificate pinning, the developer might not properly validate all relevant components of the certificate before pinning the certificate. This can make it difficult or expensive to test after the pinni",SCOPE - Integrity SCOPE - Other IMPACT - Other NOTE - The data read from the system vouched for by the expired certificate may be flawed due to malicious spoofing.  SCOPE - Authentication SCOPE - Other IMPACT - Other NOTE - Trust afforded to the system in,,"PHASE - Architecture and Design DESCRIPTION - Check for expired certificates and provide the user with adequate information about the nature of the problem and how to proceed.  PHASE - Implementation DESCRIPTION - If certificate pinning is being used, ens",,,,TAXONOMY NAME - CLASP:ENTRY NAME:Failure to validate certificate expiration::,,Research Concept
733,Compiler Optimization Removal or Modification of Security-critical Code,Base,Incomplete,"The developer builds a security-critical protection mechanism into the software, but the compiler optimizes the program such that the mechanism is removed or modified.",,NATURE:ChildOf:CWE ID:1038 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Often LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Often LANGUAGE CLASS:Compiled LANGUAGE PREVALENCE:Undetermined,,,#VALUE!,SCOPE - Access Control SCOPE - Other IMPACT - Bypass Protection Mechanism IMPACT - Other,"METHOD - Black Box DESCRIPTION - This specific weakness is impossible to detect using black box  METHODs. While an analyst could examine memory to see that it has not been scrubbed, an analysis of the executable would not be successful. This is because th",,"REFERENCE - CVE-2008-1685 DESCRIPTION - C compiler optimization, as allowed by specifications, removes code that is used to perform checks to detect integer overflows. LINK - https://www.cve.org/CVERecord?id=CVE-2008-1685  REFERENCE - CVE-2019-1010006 DES",,,,,"Software Development,Research Concept"
754,Improper Check for Unusual or Exceptional Conditions,Class,Incomplete,The product does not check or incorrectly checks for unusual or exceptional conditions that are not expected to occur frequently during day to day operation of the product.,"The programmer may assume that certain events or conditions will never occur or do not need to be worried about, such as low memory conditions, lack of access to resources due to restrictive permissions, or misbehaving clients or components. However, atta",NATURE:ChildOf:CWE ID:703 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,Many functions will return some value about the success of their actions. This will alert the program whether or not to handle any errors caused by that function.,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,"SCOPE - Integrity SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart IMPACT - Unexpected State NOTE - The data which were produced as a result of a function call could be in a bad state upon return. If the return value is not checked, then this ","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis may be useful for detecting unusual conditions involving system resources or common programming idioms, but not for violations of business rules. EFFECTIVENESS - Moderate  METHOD -",PHASE - Requirements STRATEGY - Language Selection DESCRIPTION - Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. Choose languages with features such as exception handling that force,REFERENCE - CVE-2023-49286 DESCRIPTION - Chain: function in web caching proxy does not correctly check a return value (CWE-253) leading to a reachable assertion (CWE-617) LINK - https://www.cve.org/CVERecord?id=CVE-2023-49286  REFERENCE - CVE-2007-3798 DE,,,TAXONOMY NAME - SEI CERT Perl Coding Standard:ENTRY ID:EXP31-PL:ENTRY NAME:Do not suppress or ignore exceptions:MAPPING FIT:CWE More Abstract TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-2:ENTRY NAME:Req CR 3.5 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part,"TYPE - Relationship NOTE - Sometimes, when a return value can be used to indicate an error, an unchecked return value is a code-layer instance of a missing application-layer check for exceptional conditions. However, return values are not always needed to",Research Concept
925,Improper Verification of Intent by Broadcast Receiver,Variant,Incomplete,The Android application uses a Broadcast Receiver that receives an Intent but does not properly verify that the Intent came from an authorized source.,"Certain types of Intents, identified by action string, can only be broadcast by the operating system itself, not by third-party applications. However, when an application registers to receive these implicit system intents, it is also registered to receive",NATURE:ChildOf:CWE ID:940 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Mobile TECHNOLOGY PREVALENCE:Undetermined,,TERM - Intent Spoofing::,PHASE - Architecture and Design,SCOPE - Integrity IMPACT - Gain Privileges or Assume Identity NOTE - Another application can impersonate the operating system and cause the software to perform an unintended action.,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Architecture and Design DESCRIPTION - Before acting on the Intent, check the Intent Action to make sure it matches the expected System action.",,,,,TYPE - Maintenance NOTE - This entry will be made more comprehensive in later CWE versions.::,Research Concept
93,Improper Neutralization of CRLF Sequences ('CRLF Injection'),Base,Draft,"The product uses CRLF (carriage return line feeds) as a special element, e.g. to separate lines or records, but it does not neutralize or incorrectly neutralizes CRLF sequences from inputs.",,NATURE:ChildOf:CWE ID:74 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:117 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Integrity IMPACT - Modify Application Data,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - Avoid using CRLF as a special sequence.  PHASE - Implementation DESCRIPTION - Appropriately filter or quote CRLF sequences in user-controlled input.,REFERENCE - CVE-2002-1771 DESCRIPTION - CRLF injection enables spam proxy (add mail headers) using email address or name. LINK - https://www.cve.org/CVERecord?id=CVE-2002-1771  REFERENCE - CVE-2002-1783 DESCRIPTION - CRLF injection in API function argumen,,,TAXONOMY NAME - PLOVER:ENTRY NAME:CRLF Injection TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A2:ENTRY NAME:Injection Flaws:MAPPING FIT:CWE More Specific TAXONOMY NAME - WASC:ENTRY ID:24:ENTRY NAME:HTTP Request Splitting TAXONOMY NAME - Software Fault Patt,,"Software Development,Research Concept"
1284,Improper Validation of Specified Quantity in Input,Base,Incomplete,"The product receives input that is expected to specify a quantity (such as size or length), but it does not validate or incorrectly validates that the quantity has the required properties.","Specified quantities include size, length, frequency, price, rate, number of operations, time, and others. Code may rely on specified quantities to allocate resources, perform calculations, control iteration, etc. When the quantity is not properly validat",NATURE:ChildOf:CWE ID:20 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:20 VIEW ID:1003 ORDINAL:Primary NATURE:CanPrecede:CWE ID:789 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Often,,,PHASE - Implementation,"SCOPE - Other IMPACT - Varies by Context NOTE - Since quantities are used so often to affect resource allocation or process financial data, they are often present in many places in the code.",,"PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n","REFERENCE - CVE-2022-21668 DESCRIPTION - Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190). LI",,,,TYPE - Maintenance NOTE - This entry is still under development and will continue to see updates and content improvements.::,"Software Development,Research Concept"
1106,Insufficient Use of Symbolic Constants,Base,Incomplete,"The source code uses literal constants that may need to change or evolve over time, instead of using symbolic constants.","This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",NATURE:ChildOf:CWE ID:1078 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,,,"Software Development,Research Concept"
142,Improper Neutralization of Value Delimiters,Variant,Draft,"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as value delimiters when they are sent to a downstream component.","As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.",NATURE:ChildOf:CWE ID:140 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,"PHASE - DESCRIPTION - Developers should anticipate that value delimiters will be injected/removed/manipulated in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appropriate ","REFERENCE - CVE-2000-0293 DESCRIPTION - Multiple internal space, insufficient quoting - program does not use proper delimiter between values. LINK - https://www.cve.org/CVERecord?id=CVE-2000-0293",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Value Delimiter TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,Research Concept
1049,Excessive Data Query Operations in a Large Data Table,Base,Incomplete,The product performs a data query with a large number of joins and sub-queries on a large data table.,"This issue can make the product perform more slowly. If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability. While the interpretation of large data table and large number of joins or sub-queries may",NATURE:ChildOf:CWE ID:1176 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Performance,,,,,,TAXONOMY NAME - OMG ASCPEM:ENTRY ID:ASCPEM-PRF-4::,,"Software Development,Research Concept"
1317,Improper Access Control in Fabric Bridge,Base,Draft,"The product uses a fabric bridge for transactions between two Intellectual Property (IP) blocks, but the bridge does not properly perform the expected privilege, identity, or other access control checks between those IP blocks.","In hardware designs, different IP blocks are connected through interconnect-bus fabrics (e.g. AHB and OCP). Within a System on Chip (SoC), the IP block subsystems could be using different bus protocols. In such a case, the IP blocks are then linked to the",NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY NAME:Process,,,PHASE - Architecture and Design PHASE - Implementation,"SCOPE - Confidentiality SCOPE - Integrity SCOPE - Access Control SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart IMPACT - Bypass Protection Mechanism IMPACT - Read Memory IMPACT - Modify Memory LIKELIHOOD - Medium",METHOD - Simulation / Emulation DESCRIPTION - RTL simulation to ensure that bridge-access controls are implemented properly. EFFECTIVENESS - High  METHOD - Formal Verification DESCRIPTION - Formal verification of bridge RTL to ensure that access control c,PHASE - Architecture and Design DESCRIPTION - Ensure that the design includes provisions for access-control checks in the bridge for both upstream and downstream transactions.  PHASE - Implementation DESCRIPTION - Implement access-control checks in the br,REFERENCE - CVE-2019-6260 DESCRIPTION - Baseboard Management Controller (BMC) device implements Advanced High-performance Bus (AHB) bridges that do not require authentication for arbitrary read and write access to the BMC's physical address space from the,,,,,"Hardware Development,Research Concept"
1390,Weak Authentication,Class,Incomplete,"The product uses an authentication mechanism to restrict access to specific users or identities, but the mechanism does not sufficiently prove that the claimed identity is correct.",Attackers may be able to bypass weak authentication faster and/or with less effort than expected.,NATURE:ChildOf:CWE ID:287 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability SCOPE - Access Control IMPACT - Read Application Data IMPACT - Gain Privileges or Assume Identity IMPACT - Execute Unauthorized Code or Commands NOTE - This weakness can lead to the exposure o,,,"REFERENCE - CVE-2022-30034 DESCRIPTION - Chain: Web UI for a Python RPC framework does not use regex anchors to validate user login emails (CWE-777), potentially allowing bypass of OAuth (CWE-1390). LINK - https://www.cve.org/CVERecord?id=CVE-2022-30034",,,,,Research Concept
256,Plaintext Storage of a Password,Base,Incomplete,Storing a password in plaintext may result in a system compromise.,"Password management issues occur when a password is stored in plaintext in an application's properties, configuration file, or memory. Storing a plaintext password in a configuration file allows anyone who can read the file access to the password-protecte",NATURE:ChildOf:CWE ID:522 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase. PHASE - Architecture and Design: NOTE - Developers sometimes believe that they cannot defend the application f,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design DESCRIPTION - Avoid storing passwords in easily accessible locations.  PHASE - Architecture and Design DESCRIPTION - Consider storing cryptographic hashes of passwords as an alternative to storing in plaintext.  PHASE - DES,REFERENCE - CVE-2022-30275 DESCRIPTION - Remote Terminal Unit (RTU) uses a driver that relies on a password stored in plaintext. LINK - https://www.cve.org/CVERecord?id=CVE-2022-30275,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Password Management TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-2:ENTRY NAME:Req CR 1.5 TAXONOMY NAME - ISA/IEC 62443:ENTRY I,,"Software Development,Research Concept"
782,Exposed IOCTL with Insufficient Access Control,Variant,Draft,"The product implements an IOCTL with functionality that should be restricted, but it does not properly enforce access control for the IOCTL.","When an IOCTL contains privileged functionality and is exposed unnecessarily, attackers may be able to access this functionality by invoking the IOCTL. Even if the functionality is benign, if the programmer has assumed that the IOCTL would only be accesse",NATURE:ChildOf:CWE ID:749 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:781 VIEW ID:1000,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Often LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Often OPERATING SYSTEM CLASS:Unix OPERATING SYSTEM PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Windows OPERATING SYSTEM PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,"SCOPE - Integrity SCOPE - Availability SCOPE - Confidentiality IMPACT - Varies by Context NOTE - Attackers can invoke any functionality that the IOCTL offers. Depending on the functionality, the consequences may include code execution, denial-of-service, ",,"PHASE - Architecture and Design DESCRIPTION - In Windows environments, use proper access control for the associated device or device namespace. See References.",REFERENCE - CVE-2009-2208 DESCRIPTION - Operating system does not enforce permissions on an IOCTL that can be used to modify network settings. LINK - https://www.cve.org/CVERecord?id=CVE-2009-2208  REFERENCE - CVE-2008-3831 DESCRIPTION - Device driver doe,,,,"TYPE - Relationship NOTE - This can be primary to many other weaknesses when the programmer assumes that the IOCTL can only be accessed by trusted parties. For example, a program or driver might not validate incoming addresses in METHOD_NEITHER IOCTLs in ",Research Concept
161,Improper Neutralization of Multiple Leading Special Elements,Variant,Incomplete,"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes multiple leading special elements that could be interpreted in unexpected ways when they are sent to a downstream component.","As data is parsed, improperly handled multiple leading special elements may cause the process to take unexpected actions that result in an attack.",NATURE:ChildOf:CWE ID:160 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,"PHASE - DESCRIPTION - Developers should anticipate that multiple leading special elements will be injected/removed/manipulated in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensure only valid, expected",REFERENCE - CVE-2002-1238 DESCRIPTION - Server allows remote attackers to bypass access restrictions for files via an HTTP request with a sequence of multiple / (slash) characters such as http://www.example.com///file/. LINK - https://www.cve.org/CVERecor,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Multiple Leading Special Elements TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,Research Concept
1285,"Improper Validation of Specified Index, Position, or Offset in Input",Base,Incomplete,"The product receives input that is expected to specify an index, position, or offset into an indexable resource such as a buffer or file, but it does not validate or incorrectly validates that the specified index/position/offset has the required propertie","Often, indexable resources such as memory buffers or files can be accessed using a specific position, index, or offset, such as an index for an array or a position for a file. When untrusted input is not properly validated before it is used as an index, a",NATURE:ChildOf:CWE ID:20 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Often,,,PHASE - Implementation,SCOPE - Other IMPACT - Varies by Context,,"PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n",REFERENCE - CVE-2005-0369 DESCRIPTION - large ID in packet used as array index LINK - https://www.cve.org/CVERecord?id=CVE-2005-0369  REFERENCE - CVE-2001-1009 DESCRIPTION - negative array index as argument to POP LIST command LINK - https://www.cve.org/C,,,,TYPE - Maintenance NOTE - This entry is still under development and will continue to see updates and content improvements.::,"Software Development,Research Concept"
652,Improper Neutralization of Data within XQuery Expressions ('XQuery Injection'),Base,Incomplete,"The product uses external input to dynamically construct an XQuery expression used to retrieve data from an XML database, but it does not neutralize or incorrectly neutralizes that input. This allows an attacker to control the structure of the query.","The net effect is that the attacker will have control over the information selected from the XML database and may use that ability to control application flow, modify logic, retrieve unauthorized data, or bypass important checks (e.g. authentication).",NATURE:ChildOf:CWE ID:943 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:91 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Confidentiality IMPACT - Read Application Data NOTE - An attacker might be able to read sensitive information from the XML database.,,"PHASE - Implementation DESCRIPTION - Use parameterized queries. This will help ensure separation between data plane and control plane.  PHASE - Implementation DESCRIPTION - Properly validate user input. Reject data where appropriate, filter where appropri",,,,TAXONOMY NAME - WASC:ENTRY ID:46:ENTRY NAME:XQuery Injection TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,"TYPE - Relationship NOTE - This weakness is similar to other weaknesses that enable injection style attacks, such as SQL injection, command injection and LDAP injection. The main difference is that the target of attack here is the XML database.::",Research Concept
138,Improper Neutralization of Special Elements,Class,Draft,"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as control elements or syntactic markers when they are sent to a downstream component.",Most languages and protocols have their own special elements such as characters and reserved words. These special elements can carry control implications. If product does not prevent external control or influence over the inclusion of such special element,NATURE:ChildOf:CWE ID:707 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,"SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Other IMPACT - Execute Unauthorized Code or Commands IMPACT - Alter Execution Logic IMPACT - DoS -  Crash, Exit, or Restart",,"PHASE - Implementation DESCRIPTION - Developers should anticipate that special elements (e.g. delimiters, symbols) will be injected into input vectors of their product. One defense is to create an allowlist (e.g. a regular expression) that defines valid i",REFERENCE - CVE-2001-0677 DESCRIPTION - Read arbitrary files from mail client by providing a special MIME header that is internally used to store pathnames for attachments. LINK - https://www.cve.org/CVERecord?id=CVE-2001-0677  REFERENCE - CVE-2000-0703 D,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Special Elements (Characters or Reserved Words) TAXONOMY NAME - PLOVER:ENTRY NAME:Custom Special Character Injection TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,TYPE - Relationship NOTE - This weakness can be related to interpretation conflicts or interaction errors in intermediaries (such as proxies or application firewalls) when the intermediary's model of an endpoint does not account for protocol-specific spec,Research Concept
682,Incorrect Calculation,Pillar,Draft,The product performs a calculation that generates incorrect or unintended results that are later used in security-critical decisions or resource management.,"When product performs a security-critical calculation incorrectly, it might lead to incorrect resource allocations, incorrect privilege assignments, or failed comparisons among other things. Many of the direct results of an incorrect calculation can lead ",NATURE:CanPrecede:CWE ID:170 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart NOTE - If the incorrect calculation causes the program to move into an unexpected state, it may lead to a crash or impairment of service.  SCOPE - Integrity SCOPE - Confidentiality SCOPE - Avail","METHOD - Manual Analysis DESCRIPTION - This weakness can be detected using tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active ","PHASE - Implementation DESCRIPTION - Understand your programming language's underlying representation and how it interacts with numeric calculation. Pay close attention to byte size discrepancies, precision, signed/unsigned distinctions, truncation, conve","REFERENCE - CVE-2020-0022 DESCRIPTION - chain: mobile phone Bluetooth implementation does not include offset when calculating packet length (CWE-682), leading to out-of-bounds write (CWE-787) LINK - https://www.cve.org/CVERecord?id=CVE-2020-0022  REFERENC",,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FLP32-C:ENTRY NAME:Prevent or detect domain and range errors in math functions:MAPPING FIT:CWE More Abstract TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:INT07-C:ENTRY NAME:Use only explicitly signed or unsig,"TYPE - Research Gap NOTE - Weaknesses related to this Pillar appear to be under-studied, especially with respect to classification schemes. Input from academic and other communities could help identify and resolve gaps or organizational difficulties withi",Research Concept
43,Path Equivalence: 'filename....' (Multiple Trailing Dot),Variant,Incomplete,"The product accepts path input in the form of multiple trailing dot ('filedir....') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary f",,NATURE:ChildOf:CWE ID:42 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:163 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,,REFERENCE - CVE-2004-0281 DESCRIPTION - Multiple trailing dot allows directory listing LINK - https://www.cve.org/CVERecord?id=CVE-2004-0281,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Multiple Trailing Dot - 'filedir....' TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,,Research Concept
535,Exposure of Information Through Shell Error Message,Variant,Incomplete,"A command shell error message indicates that there exists an unhandled exception in the web application code. In many cases, an attacker can leverage the conditions that cause these errors in order to gain unauthorized access to the system.",,NATURE:ChildOf:CWE ID:211 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Application Data,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,,,,,,Research Concept
597,Use of Wrong Operator in String Comparison,Variant,Draft,"The product uses the wrong operator when comparing a string, such as using == when the .equals() method should be used instead.","In Java, using == or != to compare two strings for equality actually compares two objects for equality rather than their string values for equality. Chances are good that the two references will never be equal. While this weakness often only affects progr",NATURE:ChildOf:CWE ID:595 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:595 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:480 VIEW ID:1000,,,,,PHASE - Implementation,SCOPE - Other IMPACT - Other,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation DESCRIPTION - Within Java, use .equals() to compare string values. Within JavaScript, use == to compare string values. Within PHP, use == to compare a numeric value to a string value. (PHP converts the string to a number.) EFFECTIVE",,,,TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:EXP03-J:ENTRY NAME:Do not use the equality operators when comparing values of boxed primitives TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:,,Research Concept
483,Incorrect Block Delimitation,Base,Draft,"The code does not explicitly delimit a block that is intended to contain 2 or more statements, creating a logic error.","In some languages, braces (or other delimiters) are optional for blocks. When the delimiter is omitted, it is possible to insert a logic error in which a statement is thought to be in a block but is not. In some cases, the logic error can have security im",NATURE:ChildOf:CWE ID:670 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary: ORDINALITY:Indirect::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Sometimes LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Sometimes,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Alter Execution Logic NOTE - This is a general logic error which will often lead to obviously-incorrect behaviors that are quickly noticed and fixed. In lightly tested or untested cod,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - Always use explicit block delimitation and use static-analysis technologies to enforce this practice.,REFERENCE - CVE-2014-1266 DESCRIPTION - incorrect indentation of goto statement makes it more difficult to detect an incorrect goto (Apple's goto fail) LINK - https://www.cve.org/CVERecord?id=CVE-2014-1266,,,TAXONOMY NAME - CLASP:ENTRY NAME:Incorrect block delimitation::,,"Software Development,Research Concept"
1339,Insufficient Precision or Accuracy of a Real Number,Base,Draft,"The product processes a real number with an implementation in which the number's representation does not preserve required accuracy and precision in its fractional part, causing an incorrect result.","When a security decision or calculation requires highly precise, accurate numbers such as financial calculations or prices, then small variations in the number could be exploited by an attacker. There are multiple ways to store the fractional part of a re",NATURE:ChildOf:CWE ID:682 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:190 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:834 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:119 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,There are three major ways to store real numbers in computers. Each method is described along with the limitations of how they store their numbers. Fixed: Some implementations use a fixed number of binary bits to represent both the integer and the fractio,,PHASE - Implementation: NOTE - This weakness is introduced when the developer picks a method to represent a real number. The weakness may only be visible with very specific numeric inputs.,"SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart NOTE - This weakness will generally lead to undefined results and therefore crashes. In some implementations the program will halt if the weakness causes an overflow during a calculation.  SCOPE",,"PHASE - Implementation Patching and Maintenance DESCRIPTION - The developer or maintainer can move to a more accurate representation of real numbers. In extreme cases, the programmer can move to representations such as ratios of BigInts which can represen","REFERENCE - CVE-2018-16069 DESCRIPTION - Chain: series of floating-point precision errors (CWE-1339) in a web browser rendering engine causes out-of-bounds read (CWE-125), giving access to cross-origin data LINK - https://www.cve.org/CVERecord?id=CVE-2018",,,,,"Software Development,Research Concept"
76,Improper Neutralization of Equivalent Special Elements,Base,Draft,"The product correctly neutralizes certain special elements, but it improperly neutralizes equivalent special elements.","The product may have a fixed list of special characters it believes is complete. However, there may be alternate encodings, or representations that also have the same meaning. For example, the product may filter out a leading slash (/) to prevent absolute",NATURE:ChildOf:CWE ID:75 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Other IMPACT - Other,,PHASE - Requirements DESCRIPTION - Programming languages and supporting technologies might be chosen which are not subject to these issues.  PHASE - Implementation DESCRIPTION - Utilize an appropriate mix of allowlist and denylist parsing to filter equiva,,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Equivalent Special Element Injection::,,"Software Development,Research Concept"
1126,Declaration of Variable with Unnecessarily Wide Scope,Base,Incomplete,"The source code declares a variable in one scope, but the variable is only used within a narrower scope.","This issue makes it more difficult to understand and/or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,,,"Software Development,Research Concept"
772,Missing Release of Resource after Effective Lifetime,Base,Draft,"The product does not release a resource after its effective lifetime has ended, i.e., after the resource is no longer needed.","When a resource is not released after use, it can allow attackers to cause a denial of service by causing the allocation of resources without triggering their release. Frequently-affected resources include memory, CPU, disk space, power or battery, etc.",NATURE:ChildOf:CWE ID:404 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:404 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:404 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:404 VIEW ID:1340 ORDINAL:Primary,,TECHNOLOGY CLASS:Mobile TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Availability IMPACT - DoS -  Resource Consumption (Other) NOTE - An attacker that can influence the allocation of resources that are not properly released could deplete the available resource pool and prevent all other processes from accessing the,,"PHASE - Requirements STRATEGY - Language Selection DESCRIPTION - Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, languages such as Java, Ruby, and Lisp perform automati",REFERENCE - CVE-2007-0897 DESCRIPTION - Chain: anti-virus product encounters a malformed file but returns from a function without closing a file descriptor (CWE-775) leading to file descriptor consumption (CWE-400) and failed scans. LINK - https://www.cve,,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FIO42-C:ENTRY NAME:Close files when they are no longer needed:MAPPING FIT:CWE More Abstract TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:MEM31-C:ENTRY NAME:Free dynamically allocated memory when no longer nee,"TYPE - Maintenance NOTE - Resource exhaustion (CWE-400) is currently treated as a weakness, although it is more like a category of weaknesses that all have the same  TYPE of consequence. While this entry treats CWE-400 as a parent in view 1000, the relati","Software Development,Research Concept"
502,Deserialization of Untrusted Data,Base,Draft,The product deserializes untrusted data without sufficiently verifying that the resulting data will be valid.,"It is often convenient to serialize objects for communication or to save them for later use. However, deserialized data or code can often be modified without using the provided accessor functions if it does not use cryptography to protect itself. Furtherm",NATURE:ChildOf:CWE ID:913 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:913 VIEW ID:1003 ORDINAL:Primary NATURE:PeerOf:CWE ID:915 VIEW ID:1000,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Ruby LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:PHP LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Python LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:JavaScript LANGUAGE PREVALENCE:U,"Serialization and deserialization refer to the process of taking program-internal object-related data, packaging it in a way that allows the data to be externally stored or transferred (serialization), then extracting the serialized data to reconstruct th","TERM - Marshaling, Unmarshaling DESCRIPTION - Marshaling and unmarshaling are effectively synonyms for serialization and deserialization, respectively. TERM - Pickling, Unpickling DESCRIPTION - In Python, the pickle functionality is used to perform serial",PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase. PHASE - Implementation,SCOPE - Integrity IMPACT - Modify Application Data IMPACT - Unexpected State NOTE - Attackers can modify unexpected objects or data that was assumed to be safe from modification.  SCOPE - Availability IMPACT - DoS -  Resource Consumption (CPU) NOTE - If a,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Architecture and Design Implementation DESCRIPTION - If available, use the signing/sealing features of the programming language to assure that deserialized data has not been tainted. For example, a hash-based message authentication code (HMAC) cou",REFERENCE - CVE-2019-12799 DESCRIPTION - chain: bypass of untrusted deserialization issue (CWE-502) by using an assumed-trusted class (CWE-183) LINK - https://www.cve.org/CVERecord?id=CVE-2019-12799  REFERENCE - CVE-2015-8103 DESCRIPTION - Deserialization,,,TAXONOMY NAME - CLASP:ENTRY NAME:Deserialization of untrusted data TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SER01-J:ENTRY NAME:Do not deviate from the proper signatures of serialization methods TAXONOMY NAME - The CE,"TYPE - Maintenance NOTE - The relationships between CWE-502 and CWE-915 need further exploration. CWE-915 is more narrowly scoped to object modification, and is not necessarily used for deserialization.::","Software Development,Research Concept"
1312,Missing Protection for Mirrored Regions in On-Chip Fabric Firewall,Base,Draft,"The firewall in an on-chip fabric protects the main addressed region, but it does not protect any mirrored memory or memory-mapped-IO (MMIO) regions.","Few fabrics mirror memory and address ranges, where mirrored regions contain copies of the original data. This redundancy is used to achieve fault tolerance. Whatever protections the fabric firewall implements for the original region should also apply to ",NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:1251 VIEW ID:1194,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Access Control IMPACT - Modify Memory IMPACT - Read Memory IMPACT - Bypass Protection Mechanism,"METHOD - Manual Dynamic Analysis DESCRIPTION - Using an external debugger, send write transactions to mirrored regions to test if original, write-protected regions are modified. Similarly, send read transactions to mirrored regions to test if the original",PHASE - Architecture and Design DESCRIPTION - The fabric firewall should apply the same protections as the original region to the mirrored regions.  PHASE - Implementation DESCRIPTION - The fabric firewall should apply the same protections as the original,,,,,,"Hardware Development,Research Concept"
202,Exposure of Sensitive Information Through Data Queries,Base,Draft,"When trying to keep information confidential, an attacker can often infer some of the information by using statistics.","In situations where data should not be tied to individual users, but a large number of users should be able to make queries that scrub the identity of users, it may be possible to get information about a user -- e.g., by specifying search terms that are k",NATURE:ChildOf:CWE ID:1230 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Files or Directories IMPACT - Read Application Data NOTE - Sensitive information may possibly be leaked through data queries accidentally.,,PHASE - Architecture and Design DESCRIPTION - This is a complex topic. See the book Translucent Databases for a good discussion of best practices.,REFERENCE - CVE-2022-41935 DESCRIPTION - Wiki product allows an adversary to discover filenames via a series of queries starting with one letter and then iteratively extending the match. LINK - https://www.cve.org/CVERecord?id=CVE-2022-41935,,,TAXONOMY NAME - CLASP:ENTRY NAME:Accidental leaking of sensitive information through data queries::,"TYPE - Maintenance NOTE - The relationship between CWE-202 and CWE-612 needs to be investigated more closely, as they may be different descriptions of the same kind of problem. CWE-202 is also being considered for deprecation, as it is not clearly describ",Research Concept
1094,Excessive Index Range Scan for a Data Resource,Base,Incomplete,"The product contains an index range scan for a large data table, but the scan can cover a large number of rows.","This issue can make the product perform more slowly. If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability. While the interpretation of large data table and excessive index range may vary for each ",NATURE:ChildOf:CWE ID:405 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Performance,,,,,,TAXONOMY NAME - OMG ASCPEM:ENTRY ID:ASCPEM-PRF-7::,,"Software Development,Research Concept"
184,Incomplete List of Disallowed Inputs,Base,Draft,"The product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are not allowed by policy or otherwise require other action to neutralize before additional processing takes place, but the list is incomplete, le","Developers often try to protect their products against malicious input by performing tests against inputs that are known to be bad, such as special characters that can invoke new commands. However, such lists often only account for the most well-known bad",NATURE:ChildOf:CWE ID:693 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:1023 VIEW ID:1000 NATURE:CanPrecede:CWE ID:79 VIEW ID:1000:CHAIN ID:692 NATURE:CanPrecede:CWE ID:78 VIEW ID:1000 NATURE:CanPrecede:CWE ID:434 VIEW ID:1000 NATURE:CanPrecede:CWE I,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,"TERM - Denylist / Deny List DESCRIPTION - This is used by CWE and CAPEC instead of other commonly-used terms. Its counterpart is allowlist. TERM - Blocklist / Block List DESCRIPTION - This is often used by security tools such as firewalls, email or web ga","PHASE - Implementation: NOTE - Developers might begin to develop a list of bad inputs as a fast way to fix a particular weakness, instead of fixing the root cause. See [REF-141]. PHASE - Architecture and Design: NOTE - The design might rely solely on dete",SCOPE - Access Control IMPACT - Bypass Protection Mechanism,"METHOD - Black Box DESCRIPTION - Exploitation of a vulnerability with commonly-used manipulations might fail, but minor variations might succeed.","PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Do not rely exclusively on detecting disallowed inputs. There are too many variants to encode a character, especially when different environments are used, so there is a high likelihood of m","REFERENCE - CVE-2008-2309 DESCRIPTION - product uses a denylist to identify potentially dangerous content, allowing attacker to bypass a warning LINK - https://www.cve.org/CVERecord?id=CVE-2008-2309  REFERENCE - CVE-2005-2782 DESCRIPTION - PHP remote file",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Incomplete Blacklist::,"TYPE - Relationship NOTE - Multiple interpretation errors can indirectly introduce inputs that should be disallowed. For example, a list of dangerous shell metacharacters might not include a metacharacter that only has meaning in one particular shell, not","Software Development,Research Concept"
314,Cleartext Storage in the Registry,Variant,Draft,The product stores sensitive information in cleartext in the registry.,"Attackers can read the information by accessing the registry key. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the information.",NATURE:ChildOf:CWE ID:312 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.,SCOPE - Confidentiality IMPACT - Read Application Data,,,REFERENCE - CVE-2005-2227 DESCRIPTION - Cleartext passwords in registry key. LINK - https://www.cve.org/CVERecord?id=CVE-2005-2227,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Plaintext Storage in Registry TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::,"TYPE - Terminology NOTE - Different people use cleartext and plaintext to mean the same thing: the lack of encryption. However, within cryptography, these have more precise meanings. Plaintext is the information just before it is fed into a cryptographic ",Research Concept
603,Use of Client-Side Authentication,Base,Draft,"A client/server product performs authentication within client code but not in server code, allowing server-side authentication to be bypassed via a modified client that omits the authentication check.",Client-side authentication is extremely weak and may be breached easily. Any attacker may read the source code and reverse-engineer the authentication mechanism to access parts of the application which would otherwise be protected.,NATURE:ChildOf:CWE ID:1390 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:602 VIEW ID:1000 NATURE:PeerOf:CWE ID:300 VIEW ID:1000 NATURE:PeerOf:CWE ID:656 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic. PHASE - Implementation,SCOPE - Access Control IMPACT - Bypass Protection Mechanism IMPACT - Gain Privileges or Assume Identity,,PHASE - Architecture and Design DESCRIPTION - Do not rely on client side data. Always perform server side authentication.,"REFERENCE - CVE-2022-33139 DESCRIPTION - SCADA system only uses client-side authentication, allowing adversaries to impersonate other users. LINK - https://www.cve.org/CVERecord?id=CVE-2022-33139  REFERENCE - CVE-2006-0230 DESCRIPTION - Client-side check",,,,,"Software Development,Research Concept"
926,Improper Export of Android Application Components,Variant,Incomplete,"The Android application exports a component for use by other applications, but does not properly restrict which applications can launch the component or access the data it contains.","The attacks and consequences of improperly exporting a component may depend on the exported component: If access to an exported Activity is not restricted, any application will be able to launch the activity. This may allow a malicious application to gain",NATURE:ChildOf:CWE ID:285 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Mobile TECHNOLOGY PREVALENCE:Undetermined,There are three types of components that can be exported in an Android application. An Activity is an application component that provides a UI for users to interact with. A typical application will have multiple Activity screens that perform different fun,,PHASE - Architecture and Design,"SCOPE - Availability SCOPE - Integrity IMPACT - Unexpected State IMPACT - DoS -  Crash, Exit, or Restart IMPACT - DoS -  Instability IMPACT - Varies by Context NOTE - Other applications, possibly untrusted, can launch the Activity.  SCOPE - Availability S","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Build and Compilation STRATEGY - Attack Surface Reduction DESCRIPTION - If they do not need to be shared by other applications, explicitly mark components with android exported=false in the application manifest.  PHASE - Build and Compilation STRA",,,,,,Research Concept
266,Incorrect Privilege Assignment,Base,Draft,"A product incorrectly assigns a privilege to a particular actor, creating an unintended sphere of control for that actor.",,NATURE:ChildOf:CWE ID:269 VIEW ID:1000 ORDINAL:Primary NATURE:CanAlsoBe:CWE ID:286 VIEW ID:1000,: ORDINALITY:Resultant::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - A user can access restricted functionality and/or sensitive information that may include administrative functionality and user accounts.,,"PHASE - Architecture and Design Operation DESCRIPTION - Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software.  PHASE - Architecture and Design Operation STRATEGY - Environment Hardening D",REFERENCE - CVE-1999-1193 DESCRIPTION - untrusted user placed in unix wheel group LINK - https://www.cve.org/CVERecord?id=CVE-1999-1193  REFERENCE - CVE-2005-2741 DESCRIPTION - Product allows users to grant themselves certain rights that can be used to es,,System Process,TAXONOMY NAME - PLOVER:ENTRY NAME:Incorrect Privilege Assignment TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SEC00-J:ENTRY NAME:Do not allow privileged blocks to leak sensitive information across a trust boundary TAXONO,,"Software Development,Research Concept"
1323,Improper Management of Sensitive Trace Data,Base,Draft,Trace data collected from several sources on the System-on-Chip (SoC) is stored in unprotected locations or transported to untrusted agents.,"To facilitate verification of complex System-on-Chip (SoC) designs, SoC integrators add specific IP blocks that trace the SoC's internal signals in real-time. This infrastructure enables observability of the SoC's internal behavior, validation of its func",NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:System,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Memory NOTE - An adversary can read secret values if they are captured in debug traces and stored unsafely.,,"PHASE - Implementation DESCRIPTION - Tag traces to indicate owner and debugging privilege level (designer, OEM, or end user) needed to access that trace.",,,,,,"Hardware Development,Research Concept"
1241,Use of Predictable Algorithm in Random Number Generator,Base,Draft,The device uses an algorithm that is predictable and generates a pseudo-random number.,"Pseudo-random number generator algorithms are predictable because their registers have a finite number of possible states, which eventually lead to repeating patterns. As a result, pseudo-random number generators (PRNGs) can compromise their randomness or",NATURE:ChildOf:CWE ID:330 VIEW ID:1000 ORDINAL:Primary,,TECHNOLOGY CLASS:System on Chip TECHNOLOGY PREVALENCE:Undetermined,,,"PHASE - Architecture and Design PHASE - Implementation: NOTE - In many cases, the design originally defines a cryptographically secure random number generator, but is then changed during implementation due to unforeseen constraints.",SCOPE - Confidentiality IMPACT - Read Application Data LIKELIHOOD - High,,PHASE - Architecture and Design DESCRIPTION - A true random number generator should be specified for cryptographic algorithms.  PHASE - Implementation DESCRIPTION - A true random number generator should be implemented for cryptographic algorithms.,REFERENCE - CVE-2021-3692 DESCRIPTION - PHP framework uses mt_rand() function (Marsenne Twister) when generating tokens LINK - https://www.cve.org/CVERecord?id=CVE-2021-3692,,,,"TYPE - Maintenance NOTE - As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, randomness is used heavily. However, within cryptography, entropy is distinct, typically i","Hardware Development,Software Development,Research Concept"
269,Improper Privilege Management,Class,Draft,"The product does not properly assign, modify, track, or check privileges for an actor, creating an unintended sphere of control for that actor.",,NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. PHASE - Operation,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Architecture and Design Operation DESCRIPTION - Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software.  PHASE - Architecture and Design STRATEGY - Separation of Privilege DESCRIPTI",REFERENCE - CVE-2001-1555 DESCRIPTION - Terminal privileges are not reset when a user logs out. LINK - https://www.cve.org/CVERecord?id=CVE-2001-1555  REFERENCE - CVE-2001-1514 DESCRIPTION - Does not properly pass security context to child processes in ce,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Privilege Management Error TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 2-4:ENTRY NAME:Req SP.03.08 BR TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 3-2:ENTRY NAME:Req CR 3.1 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 3-3:E,"TYPE - Maintenance NOTE - The relationships between privileges, permissions, and actors (e.g. users and groups) need further refinement within the Research view. One complication is that these concepts apply to two different pillars, related to control of",Research Concept
13,ASP.NET Misconfiguration: Password in Configuration File,Variant,Draft,Storing a plaintext password in a configuration file allows anyone who can read the file access to the password-protected resource making them an easy target for attackers.,,NATURE:ChildOf:CWE ID:260 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity,,"PHASE - Implementation DESCRIPTION - Credentials stored in configuration files should be encrypted, Use standard APIs and industry accepted algorithms to encrypt the credentials stored in configuration files.",,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:ASP.NET Misconfiguration: Password in Configuration File::,,Research Concept
243,Creation of chroot Jail Without Changing Working Directory,Variant,Draft,"The product uses the chroot() system call to create a jail, but does not change the working directory afterward. This does not prevent access to files outside of the jail.","Improper use of chroot() may allow attackers to escape from the chroot jail. The chroot() function call does not change the process's current working directory, so relative paths may still refer to file system resources outside of the chroot jail after ch",NATURE:ChildOf:CWE ID:573 VIEW ID:1000 NATURE:ChildOf:CWE ID:669 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Resultant::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Unix OPERATING SYSTEM PREVALENCE:Undetermined,"The chroot() system call allows a process to change its perception of the root directory of the file system. After properly invoking chroot(), a process cannot access any files outside the directory tree defined by the new root directory. Such an environm",,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Confidentiality IMPACT - Read Files or Directories,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,,,File or Directory,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Directory Restriction TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP17:ENTRY NAME:Failed chroot jail::,,"Software Development,Research Concept"
643,Improper Neutralization of Data within XPath Expressions ('XPath Injection'),Base,Incomplete,"The product uses external input to dynamically construct an XPath expression used to retrieve data from an XML database, but it does not neutralize or incorrectly neutralizes that input. This allows an attacker to control the structure of the query.","The net effect is that the attacker will have control over the information selected from the XML database and may use that ability to control application flow, modify logic, retrieve unauthorized data, or bypass important checks (e.g. authentication).",NATURE:ChildOf:CWE ID:943 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:91 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Access Control IMPACT - Bypass Protection Mechanism NOTE - Controlling application flow (e.g. bypassing authentication).  SCOPE - Confidentiality IMPACT - Read Application Data NOTE - The attacker could read restricted XML content.,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - Use parameterized XPath queries (e.g. using XQuery). This will help ensure separation between data plane and control plane.  PHASE - Implementation DESCRIPTION - Properly validate user input. Reject data where appropri,,,,TAXONOMY NAME - WASC:ENTRY ID:39:ENTRY NAME:XPath Injection TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,"TYPE - Relationship NOTE - This weakness is similar to other weaknesses that enable injection style attacks, such as SQL injection, command injection and LDAP injection. The main difference is that the target of attack here is the XML database.::",Research Concept
670,Always-Incorrect Control Flow Implementation,Class,Draft,"The code contains a control flow path that does not reflect the algorithm that the path is intended to implement, leading to incorrect behavior any time this path is navigated.","This weakness captures cases in which a particular code segment is always incorrect with respect to the algorithm that it is implementing. For example, if a C programmer intends to include multiple statements in a single block but does not include the enc",NATURE:ChildOf:CWE ID:691 VIEW ID:1000 ORDINAL:Primary,,,,,"PHASE - Implementation: NOTE - This issue typically appears in rarely-tested code, since the always-incorrect nature will be detected as a bug during normal usage.",SCOPE - Other IMPACT - Other IMPACT - Alter Execution Logic,,,"REFERENCE - CVE-2021-3011 DESCRIPTION - virtual interrupt controller in a virtualization product allows crash of host by writing a certain invalid value to a register, which triggers a fatal error instead of returning an error code LINK - https://www.cve.",,,,"TYPE - Maintenance NOTE - This node could possibly be split into lower-level nodes. Early Return is for returning control to the caller too soon (e.g., CWE-584). Excess Return is when control is returned too far up the call stack (CWE-600, CWE-395). Impro",Research Concept
1092,Use of Same Invokable Control Element in Multiple Architectural Layers,Base,Incomplete,The product uses the same control element across multiple architectural layers.,"This issue makes it more difficult to understand and maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,TAXONOMY NAME - OMG ASCMM:ENTRY ID:ASCMM-MNT-10::,,"Software Development,Research Concept"
221,Information Loss or Omission,Class,Incomplete,"The product does not record, or improperly records, security-relevant information that leads to an incorrect decision or hampers later analysis.","This can be resultant, e.g. a buffer overflow might trigger a crash before the product can log the event.",NATURE:ChildOf:CWE ID:664 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation PHASE - Operation,SCOPE - Non-Repudiation IMPACT - Hide Activities,,,"REFERENCE - CVE-2004-2227 DESCRIPTION - Web browser's filename selection dialog only shows the beginning portion of long filenames, which can trick users into launching executables with dangerous extensions. LINK - https://www.cve.org/CVERecord?id=CVE-200",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Information loss or omission::,,Research Concept
1233,Security-Sensitive Hardware Controls with Missing Lock Bit Protection,Base,Stable,"The product uses a register lock bit protection mechanism, but it does not ensure that the lock bit prevents modification of system registers or controls that perform changes to important hardware system configuration.","Integrated circuits and hardware intellectual properties (IPs) might provide device configuration controls that need to be programmed after device power reset by a trusted firmware or software module, commonly set by BIOS/bootloader. After reset, there ca",NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:667 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design: NOTE - Such issues could be introduced during hardware architecture and design and identified later during Testing or System Configuration phases. PHASE - Implementation: NOTE - Such issues could be introduced during imple,SCOPE - Access Control IMPACT - Modify Memory NOTE - System Configuration protected by the lock bit can be modified even when the lock is set.,"METHOD - Manual Analysis DESCRIPTION - Set the lock bit. Attempt to modify the information protected by the lock bit. If the information is changed, implement a design fix. Retest. Also, attempt to indirectly clear the lock bit or bypass it. EFFECTIVENESS",PHASE - Architecture and Design Implementation Testing DESCRIPTION - Security lock bit protections must be reviewed for design inconsistency and common weaknesses. Security lock programming flow and lock properties must be tested in pre-silicon and post-s,"REFERENCE - CVE-2018-9085 DESCRIPTION - Certain servers leave a write protection lock bit unset after boot, potentially allowing modification of parts of flash memory. LINK - https://www.cve.org/CVERecord?id=CVE-2018-9085  REFERENCE - CVE-2014-8273 DESCRI",,,,,"Hardware Development,Research Concept"
572,Call to Thread run() instead of start(),Variant,Draft,"The product calls a thread's run() method instead of calling start(), which causes the code to run in the thread of the caller instead of the callee.","In most cases a direct call to a Thread object's run() method is a bug. The programmer intended to begin a new thread of control, but accidentally called run() instead of start(), so the run() method will execute in the caller's thread of control.",NATURE:ChildOf:CWE ID:821 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Quality Degradation IMPACT - Varies by Context,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - Use the start() method instead of the run() method.,,,System Process,TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:THI00-J:ENTRY NAME:Do not invoke Thread.run() TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP3:ENTRY NAME:Use of an improper API::,,Research Concept
590,Free of Memory not on the Heap,Variant,Incomplete,"The product calls free() on a pointer to memory that was not allocated using associated heap allocation functions such as malloc(), calloc(), or realloc().","When free() is called on an invalid pointer, the program's memory management data structures may become corrupted. This corruption can cause the program to crash or, in some circumstances, an attacker may be able to cause free() to operate on controllable",NATURE:ChildOf:CWE ID:762 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:123 VIEW ID:1000,,,,,PHASE - Implementation,"SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands IMPACT - Modify Memory NOTE - There is the potential for arbitrary code execution with privileges of the vulnerable program via a write, what whe","METHOD - Fuzzing DESCRIPTION - Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often c",PHASE - Implementation DESCRIPTION - Only free pointers that you have called malloc on previously. This is the recommended solution. Keep track of which pointers point at the beginning of valid chunks and free them only once.  PHASE - Implementation DESCR,,,Memory,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:MEM34-C:ENTRY NAME:Only free memory allocated dynamically:MAPPING FIT:Exact TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:WIN30-C:ENTRY NAME:Properly pair allocation and deallocation functions:MAPPING FIT:Impr,"TYPE - Other NOTE - In C++, if the new operator was used to allocate the memory, it may be allocated with the malloc(), calloc() or realloc() family of functions in the implementation. Someone aware of this behavior might choose to map this problem to CWE",Research Concept
587,Assignment of a Fixed Address to a Pointer,Variant,Draft,The product sets a pointer to a specific address other than NULL or 0.,"Using a fixed address is not portable, because that address will probably not be valid in all environments or platforms.",NATURE:ChildOf:CWE ID:344 VIEW ID:1000 NATURE:ChildOf:CWE ID:758 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C# LANGUAGE PREVALENCE:Undetermined LANGUAGE CLASS:Assembly LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands NOTE - If one executes code at a known location, an attacker might be able to inject code there beforehand.  SCOPE - Availability IMPACT - DoS - ",,PHASE - Implementation DESCRIPTION - Never set a pointer to a fixed address.,,,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:INT36-C:ENTRY NAME:Converting a pointer to integer or integer to pointer:MAPPING FIT:Imprecise TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP1:ENTRY NAME:Glitch in computation::,,"Software Development,Research Concept"
636,Not Failing Securely ('Failing Open'),Class,Draft,"When the product encounters an error condition or failure, its design requires it to fall back to a state that is less secure than other options that are available, such as selecting the weakest encryption algorithm or using the most permissive access con","By entering a less secure state, the product inherits the weaknesses associated with that state, making it easier to compromise. At the least, it causes administrators to have a false sense of security. This weakness typically occurs as a result of wantin",NATURE:ChildOf:CWE ID:657 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:755 VIEW ID:1000 NATURE:PeerOf:CWE ID:280 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Undetermined,,TERM - Failing Open::,PHASE - Architecture and Design PHASE - Implementation,"SCOPE - Access Control IMPACT - Bypass Protection Mechanism NOTE - Intended access restrictions can be bypassed, which is often contradictory to what the product's administrator expects.",,PHASE - Architecture and Design DESCRIPTION - Subdivide and allocate resources and components so that a failure in one part does not affect the entire product.,REFERENCE - CVE-2007-5277 DESCRIPTION - The failure of connection attempts in a web browser resets DNS pin restrictions. An attacker can then bypass the same origin policy by rebinding a domain name to a different IP address. This was an attempt to fail f,,,TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A7:ENTRY NAME:Improper Error Handling:MAPPING FIT:CWE More Specific::,"TYPE - Research Gap NOTE - Since design issues are hard to fix, they are rarely publicly reported, so there are few CVE examples of this problem as of January 2008. Most publicly reported issues occur as the result of an implementation error instead of de",Research Concept
154,Improper Neutralization of Variable Name Delimiters,Variant,Incomplete,"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as variable name delimiters when they are sent to a downstream component.","As data is parsed, an injected delimiter may cause the process to take unexpected actions that result in an attack. Example: $ for an environment variable.",NATURE:ChildOf:CWE ID:138 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,"PHASE - DESCRIPTION - Developers should anticipate that variable name delimiters will be injected/removed/manipulated in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appr","REFERENCE - CVE-2005-0129 DESCRIPTION - % variable is expanded by wildcard function into disallowed commands. LINK - https://www.cve.org/CVERecord?id=CVE-2005-0129  REFERENCE - CVE-2002-0770 DESCRIPTION - Server trusts client to expand macros, allows macr",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Variable Name Delimiter TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,TYPE - Research Gap NOTE - Under-studied.::,Research Concept
1395,Dependency on Vulnerable Third-Party Component,Class,Incomplete,The product has a dependency on a third-party component that contains one or more known vulnerabilities.,"Many products are large enough or complex enough that part of their functionality uses libraries, modules, or other intellectual property developed by third parties who are not the product creator. For example, even an entire operating system might be fro",NATURE:ChildOf:CWE ID:657 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design: NOTE - The product architect or designer might choose a component that is already known to contain vulnerabilities or has a high likelihood of containing vulnerabilities in the future. PHASE - Implementation: NOTE - For re,"SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Varies by Context NOTE - The consequences vary widely, depending on the vulnerabilities that exist in the component; how those vulnerabilities can be reached by adversaries, as the ex","METHOD - Automated Analysis DESCRIPTION - For software, use Software Composition Analysis (SCA) tools, which automatically analyze products to identify third-party dependencies. Often, SCA tools can be used to link with known vulnerabilities in the depend","PHASE - Requirements Policy DESCRIPTION - In some industries such as healthcare [REF-1320] [REF-1322] or technologies such as the cloud [REF-1321], it might be unclear about who is responsible for applying patches for third-party vulnerabilities  the vend",,,,TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-2:ENTRY NAME:Req CR 2.4 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-2:ENTRY NAME:Req CR 6.2 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-2:ENTRY NAME:Req CR 7.2 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4,,Research Concept
506,Embedded Malicious Code,Class,Incomplete,The product contains code that appears to be malicious in nature.,"Malicious flaws have acquired colorful names, including Trojan horse, trapdoor, timebomb, and logic-bomb. A developer might insert malicious code with the intent to subvert the security of a product or its host system at some time in the future. It genera",NATURE:ChildOf:CWE ID:912 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation PHASE - Bundling PHASE - Distribution PHASE - Installation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands,"METHOD - Manual Static Analysis - Binary or Bytecode DESCRIPTION - According to SOAR, the following detection techniques may be useful  Cost effective for partial coverage  Binary / Bytecode disassembler - then use manual analysis for vulnerabilities & an","PHASE - Testing DESCRIPTION - Remove the malicious code and start an effort to ensure that no more malicious code exists. This may require a detailed review of all code, as it is possible to hide a serious attack in only one or two lines of code. These li",REFERENCE - CVE-2022-30877 DESCRIPTION - A command history tool was shipped with a code-execution backdoor inserted by a malicious party. LINK - https://www.cve.org/CVERecord?id=CVE-2022-30877,,,TAXONOMY NAME - Landwehr:ENTRY NAME:Malicious::,"TYPE - Terminology NOTE - The term Trojan horse was introduced by Dan Edwards and recorded by James Anderson [18] to characterize a particular computer security threat; it has been redefined many times [4,18-20].::",Research Concept
1096,Singleton Class Instance Creation without Proper Locking or Synchronization,Variant,Incomplete,The product implements a Singleton design pattern but does not use appropriate locking or other synchronization mechanism to ensure that the singleton class is only instantiated once.,"This issue can prevent the product from running reliably, e.g. by making the instantiation process non-thread-safe and introducing deadlock (CWE-833) or livelock conditions. If the relevant code is reachable by an attacker, then this reliability problem m",NATURE:ChildOf:CWE ID:820 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:662 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:662 VIEW ID:1340 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Reliability,,,,,,TAXONOMY NAME - OMG ASCRM:ENTRY ID:ASCRM-RLB-12::,,Research Concept
908,Use of Uninitialized Resource,Base,Incomplete,The product uses or accesses a resource that has not been initialized.,"When a resource has not been properly initialized, the product may behave unexpectedly. This may lead to a crash or invalid memory access, but the consequences vary depending on the type of resource and how it is used within the product.",NATURE:ChildOf:CWE ID:665 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:665 VIEW ID:1003 ORDINAL:Primary,: ORDINALITY:Primary: ORDINALITY:Resultant::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Confidentiality IMPACT - Read Memory IMPACT - Read Application Data NOTE - When reusing a resource such as memory or a program variable, the original contents of that resource may not be cleared before it is sent to an untrusted party.  SCOPE - Av",,"PHASE - Implementation DESCRIPTION - Explicitly initialize the resource before use. If this is performed through an API function or standard procedure, follow all required steps.  PHASE - Implementation DESCRIPTION - Pay close attention to complex conditi","REFERENCE - CVE-2019-9805 DESCRIPTION - Chain: Creation of the packet client occurs before initialization is complete (CWE-696) resulting in a read from uninitialized memory (CWE-908), causing memory corruption. LINK - https://www.cve.org/CVERecord?id=CVE",,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:EXP33-C:ENTRY NAME:Do not read uninitialized memory:MAPPING FIT:CWE More Abstract::,,"Software Development,Research Concept"
570,Expression is Always False,Base,Draft,The product contains an expression that will always evaluate to false.,,NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:561 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Quality Degradation IMPACT - Varies by Context,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Testing DESCRIPTION - Use Static Analysis tools to spot such conditions.,,,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:MSC00-C:ENTRY NAME:Compile cleanly at high warning levels TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP1:ENTRY NAME:Glitch in computation::,,"Software Development,Research Concept"
773,Missing Reference to Active File Descriptor or Handle,Variant,Incomplete,"The product does not properly maintain references to a file descriptor or handle, which prevents that file descriptor/handle from being reclaimed.","This can cause the product to consume all available file descriptors or handles, which can prevent other processes from performing critical file processing operations.",NATURE:ChildOf:CWE ID:771 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation,SCOPE - Availability IMPACT - DoS -  Resource Consumption (Other) NOTE - An attacker that can influence the allocation of resources that are not properly maintained could deplete the available resource pool and prevent all other processes from accessing t,,"PHASE - Operation Architecture and Design STRATEGY - Resource Limitation DESCRIPTION - Use resource-limiting settings provided by the operating system or environment. For example, when managing system resources in POSIX, setrlimit() can be used to set lim",,,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FIO42-C:ENTRY NAME:Close files when they are no longer needed:MAPPING FIT:CWE More Abstract TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP14:ENTRY NAME:Failure to Release Resource::,,Research Concept
252,Unchecked Return Value,Base,Draft,"The product does not check the return value from a method or function, which can prevent it from detecting unexpected states and conditions.","Two common programmer assumptions are this function call can never fail and it doesn't matter if this function call fails. If an attacker can force the function to fail or otherwise return a value that is not expected, then the subsequent program logic co",NATURE:ChildOf:CWE ID:754 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:754 VIEW ID:1003 ORDINAL:Primary NATURE:CanPrecede:CWE ID:476 VIEW ID:1000:CHAIN ID:690,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,Many functions will return some value about the success of their actions. This will alert the program whether or not to handle any errors caused by that function.,,PHASE - Implementation,"SCOPE - Availability SCOPE - Integrity IMPACT - Unexpected State IMPACT - DoS -  Crash, Exit, or Restart NOTE - An unexpected return value could place the system in a state that could lead to a crash or other unintended behaviors.","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - Check the results of all functions that return a value and verify that the value is expected. EFFECTIVENESS High  PHASE - Implementation DESCRIPTION - Ensure that you account for all possible return values from the fun,REFERENCE - CVE-2020-17533 DESCRIPTION - Chain: unchecked return value (CWE-252) of some functions for policy enforcement leads to authorization bypass (CWE-862) LINK - https://www.cve.org/CVERecord?id=CVE-2020-17533  REFERENCE - CVE-2020-6078 DESCRIPTION,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Unchecked Return Value TAXONOMY NAME - CLASP:ENTRY NAME:Ignored function return value TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A7:ENTRY NAME:Improper Error Handling:MAPPING FIT:CWE More Specific TAXONOMY,,"Software Development,Research Concept"
145,Improper Neutralization of Section Delimiters,Variant,Incomplete,"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as section delimiters when they are sent to a downstream component.","As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions. One example of a section delimiter is the boundary string in a multipart MIME message. In many cases, doubled line delimiters can serve as a sectio",NATURE:ChildOf:CWE ID:140 VIEW ID:1000 ORDINAL:Primary NATURE:CanAlsoBe:CWE ID:93 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,"PHASE - DESCRIPTION - Developers should anticipate that section delimiters will be injected/removed/manipulated in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appropriat",,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Section Delimiter TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,"TYPE - Relationship NOTE - Depending on the language and syntax being used, this could be the same as the record delimiter (CWE-143).::",Research Concept
920,Improper Restriction of Power Consumption,Base,Incomplete,"The product operates in an environment in which power is a limited resource that cannot be automatically replenished, but the product does not properly restrict the amount of power that its operation consumes.","In environments such as embedded or mobile devices, power can be a limited resource such as a battery, which cannot be automatically replenished by the product itself, and the device might not always be directly attached to a reliable power source. If the",NATURE:ChildOf:CWE ID:400 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:400 VIEW ID:1003 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Mobile TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design,"SCOPE - Availability IMPACT - DoS -  Resource Consumption (Other) IMPACT - DoS -  Crash, Exit, or Restart NOTE - The power source could be drained, causing the application - and the entire device - to cease functioning.",,,,,,TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 3-3:ENTRY NAME:Req SR 6.2 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-2:ENTRY NAME:Req CR 6.2 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-1:ENTRY NAME:Req SD-4::,,"Software Development,Research Concept"
1298,Hardware Logic Contains Race Conditions,Base,Draft,A race condition in the hardware logic results in undermining security guarantees of the system.,A race condition in logic circuits typically occurs when a logic gate gets inputs from signals that have traversed different paths while originating from the same source. Such inputs to the gate can change at slightly different times in response to a chan,NATURE:ChildOf:CWE ID:362 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Verilog LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:VHDL LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:System on Chip TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Access Control IMPACT - Bypass Protection Mechanism IMPACT - Gain Privileges or Assume Identity IMPACT - Alter Execution Logic,,"PHASE - Architecture and Design DESCRIPTION - Adopting design practices that encourage designers to recognize and eliminate race conditions, such as Karnaugh maps, could result in the decrease in occurrences of race conditions.  PHASE - Implementation DES",,,,,,"Hardware Development,Research Concept"
600,Uncaught Exception in Servlet ,Variant,Draft,"The Servlet does not catch all exceptions, which may reveal sensitive debugging information.","When a Servlet throws an exception, the default error response the Servlet container sends back to the user typically includes debugging information. This information is of great value to an attacker. For example, a stack trace might show the attacker a m",NATURE:ChildOf:CWE ID:248 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:209 VIEW ID:1000 NATURE:PeerOf:CWE ID:390 VIEW ID:1000,,,,TERM - Missing Catch Block::,PHASE - Implementation,"SCOPE - Confidentiality SCOPE - Availability IMPACT - Read Application Data IMPACT - DoS -  Crash, Exit, or Restart",,PHASE - Implementation DESCRIPTION - Implement Exception blocks to handle all types of Exceptions.,,,,TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:ERR01-J:ENTRY NAME:Do not allow exceptions to expose sensitive information TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP4:ENTRY NAME:Unchecked Status Condition::,"TYPE - Maintenance NOTE - The Missing Catch Block concept is probably broader than just Servlets, but the broader concept is not sufficiently covered in CWE.::",Research Concept
651,Exposure of WSDL File Containing Sensitive Information,Variant,Incomplete,The Web services architecture may require exposing a Web Service Definition Language (WSDL) file that contains information on the publicly accessible services and how callers of these services should interact with them (e.g. what parameters they expect an,An information exposure may occur if any of the following apply: The WSDL file is accessible to a wider audience than intended. The WSDL file contains information on the methods/services that should not be publicly accessible or information about deprecat,NATURE:ChildOf:CWE ID:538 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY NAME:Web Server TECHNOLOGY PREVALENCE:Often,,,PHASE - Implementation PHASE - Operation,SCOPE - Confidentiality IMPACT - Read Application Data NOTE - The attacker may find sensitive information located in the WSDL file.,,"PHASE - Architecture and Design DESCRIPTION - Limit access to the WSDL file as much as possible. If services are provided only to a limited number of entities, it may be better to provide WSDL privately to each of these entities than to publish WSDL publi",,,,,,Research Concept
628,Function Call with Incorrectly Specified Arguments,Base,Draft,"The product calls a function, procedure, or routine with arguments that are not correctly specified, leading to always-incorrect behavior and resultant weaknesses.","There are multiple ways in which this weakness can be introduced, including: the wrong variable or reference; an incorrect number of arguments; incorrect order of arguments; wrong type of arguments; or wrong value.",NATURE:ChildOf:CWE ID:573 VIEW ID:1000 ORDINAL:Primary,": ORDINALITY:Primary:DESCRIPTION:This is usually primary to other weaknesses, but it can be resultant if the function's API or function prototype changes.::",LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other -  SCOPE - Access Control IMPACT - Quality Degradation IMPACT - Gain Privileges or Assume Identity NOTE - This weakness can cause unintended behavior and can lead to additional weaknesses such as allowing an attacker to gain unintended acces,"METHOD - Other DESCRIPTION - Since these bugs typically introduce incorrect behavior that is obvious to users, they are found quickly, unless they occur in rarely-tested code paths. Managing the correct number of arguments can be made more difficult in ca","PHASE - Build and Compilation DESCRIPTION - Once found, these issues are easy to fix. Use code inspection tools and relevant compiler features to identify potential violations. Pay special attention to code that is not likely to be exercised heavily durin","REFERENCE - CVE-2006-7049 DESCRIPTION - The method calls the functions with the wrong argument order, which allows remote attackers to bypass intended access restrictions. LINK - https://www.cve.org/CVERecord?id=CVE-2006-7049",,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:DCL10-C:ENTRY NAME:Maintain the contract between the writer and caller of variadic functions TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:EXP37-C:ENTRY NAME:Call functions with the correct number and type of,,"Software Development,Research Concept"
1046,Creation of Immutable Text Using String Concatenation,Base,Incomplete,The product creates an immutable text string using string concatenation operations.,"When building a string via a looping feature (e.g., a FOR or WHILE loop), the use of += to append to the existing string will result in the creation of a new object with each iteration. This programming pattern can be inefficient in comparison with use of",NATURE:ChildOf:CWE ID:1176 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Performance,,,,,,TAXONOMY NAME - OMG ASCPEM:ENTRY ID:ASCPEM-PRF-2::,,"Software Development,Research Concept"
571,Expression is Always True,Base,Draft,The product contains an expression that will always evaluate to true.,,NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:561 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Quality Degradation IMPACT - Varies by Context,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Testing DESCRIPTION - Use Static Analysis tools to spot such conditions.,,,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:MSC00-C:ENTRY NAME:Compile cleanly at high warning levels TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP1:ENTRY NAME:Glitch in computation::,,"Software Development,Research Concept"
165,Improper Neutralization of Multiple Internal Special Elements,Variant,Incomplete,"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes multiple internal special elements that could be interpreted in unexpected ways when they are sent to a downstream component.","As data is parsed, improperly handled multiple internal special elements may cause the process to take unexpected actions that result in an attack.",NATURE:ChildOf:CWE ID:164 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,"PHASE - DESCRIPTION - Developers should anticipate that multiple internal special elements will be injected/removed/manipulated in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensure only valid, expecte",,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Multiple Internal Special Element TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,Research Concept
34,Path Traversal: '....//',Variant,Incomplete,"The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '....//' (doubled dot dot slash) sequences that can resolve to a location that is outside of that directory.",This allows attackers to traverse the file system to access files or directories that are outside of the restricted directory. The '....//' manipulation is useful for bypassing some path traversal protection schemes. If ../ is filtered in a sequential fas,NATURE:ChildOf:CWE ID:23 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,"METHOD - Automated Static Analysis - Source Code DESCRIPTION - According to SOAR, the following detection techniques may be useful  Cost effective for partial coverage  Source code Weakness Analyzer Context-configured Source Code Weakness Analyzer EFFECTI","PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n",REFERENCE - CVE-2004-1670 DESCRIPTION - Mail server allows remote attackers to create arbitrary directories via a .. or rename arbitrary files via a ....// in user supplied parameters. LINK - https://www.cve.org/CVERecord?id=CVE-2004-1670,,,TAXONOMY NAME - PLOVER:ENTRY NAME:'....//' (doubled dot dot slash) TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,TYPE - Relationship NOTE - This could occur due to a cleansing error that removes a single ../ from ....//::,Research Concept
1248,Semiconductor Defects in Hardware Logic with Security-Sensitive Implications,Base,Incomplete,The security-sensitive hardware module contains semiconductor defects.,"A semiconductor device can fail for various reasons. While some are manufacturing and packaging defects, the rest are due to prolonged use or usage under extreme conditions. Some mechanisms that lead to semiconductor defects include encapsulation failure,",NATURE:ChildOf:CWE ID:693 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,"PHASE - Manufacturing: NOTE - May be introduced due to issues in the manufacturing environment or improper handling of components, for example. PHASE - Operation: NOTE - May be introduced by improper handling or usage outside of rated operating environmen",SCOPE - Availability SCOPE - Access Control IMPACT - DoS -  Instability,,"PHASE - Testing DESCRIPTION - While semiconductor-manufacturing companies implement several mechanisms to continuously improve the semiconductor manufacturing process to ensure reduction of defects, some defects can only be fixed after manufacturing. Post",,,,,,"Hardware Development,Research Concept"
192,Integer Coercion Error,Variant,Incomplete,"Integer coercion refers to a set of flaws pertaining to the type casting, extension, or truncation of primitive data types.","Several flaws fall under the category of integer coercion errors. For the most part, these errors in and of themselves result only in availability and data integrity issues. However, in some circumstances, they may result in other, more complicated securi",NATURE:ChildOf:CWE ID:681 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C# LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Availability IMPACT - DoS -  Resource Consumption (CPU) IMPACT - DoS -  Resource Consumption (Memory) IMPACT - DoS -  Crash, Exit, or Restart NOTE - Integer coercion often leads to undefined states of execution resulting in infinite loops or crash","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Requirements DESCRIPTION - A language which throws exceptions on ambiguous data casts might be chosen.  PHASE - Architecture and Design DESCRIPTION - Design objects and program flow such that multiple or complex casts are unnecessary  PHASE - Impl,"REFERENCE - CVE-2022-2639 DESCRIPTION - Chain: integer coercion error (CWE-192) prevents a return value from indicating an error, leading to out-of-bounds write (CWE-787) LINK - https://www.cve.org/CVERecord?id=CVE-2022-2639",,,TAXONOMY NAME - CLASP:ENTRY NAME:Integer coercion error TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:INT02-C:ENTRY NAME:Understand integer conversion rules TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:INT05-C:ENTRY NAME:Do not use input functions to con,"TYPE - Maintenance NOTE - Within C, it might be that coercion is semantically different than casting, possibly depending on whether the programmer directly specifies the conversion, or if the compiler does it implicitly. This has implications for the pres",Research Concept
942,Permissive Cross-domain Policy with Untrusted Domains,Variant,Incomplete,The product uses a cross-domain policy file that includes domains that should not be trusted.,"A cross-domain policy file (crossdomain.xml in Flash and clientaccesspolicy.xml in Silverlight) defines a list of domains from which a server is allowed to make cross-domain requests. When making a cross-domain request, the Flash or Silverlight client wil",NATURE:ChildOf:CWE ID:863 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:923 VIEW ID:1000 NATURE:ChildOf:CWE ID:183 VIEW ID:1000 NATURE:CanPrecede:CWE ID:668 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Web Based TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Implementation PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Access Control IMPACT - Execute Unauthorized Code or Commands IMPACT - Bypass Protection Mechanism IMPACT - Read Application Data IMPACT - Varies by Context NOTE - An attacker may be a,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Architecture and Design STRATEGY - Attack Surface Reduction DESCRIPTION - Avoid using wildcards in the cross-domain policy file. Any domain matching the wildcard expression will be implicitly trusted, and can perform two-way interaction with the t","REFERENCE - CVE-2012-2292 DESCRIPTION - Product has a Silverlight cross-domain policy that does not restrict access to another application, which allows remote attackers to bypass the Same Origin Policy. LINK - https://www.cve.org/CVERecord?id=CVE-2012-22",,,,,Research Concept
280,Improper Handling of Insufficient Permissions or Privileges ,Base,Draft,The product does not handle or incorrectly handles when it has insufficient privileges to access resources or functionality as specified by their permissions. This may cause it to follow unexpected code paths that may leave the product in an invalid state,,NATURE:ChildOf:CWE ID:755 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Other IMPACT - Other IMPACT - Alter Execution Logic,,PHASE - Architecture and Design STRATEGY - Separation of Privilege DESCRIPTION - Compartmentalize the system to have safe areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always b,REFERENCE - CVE-2003-0501 DESCRIPTION - Special file system allows attackers to prevent ownership/permission change of certain entries by opening the entries before calling a setuid program. LINK - https://www.cve.org/CVERecord?id=CVE-2003-0501  REFERENCE,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Fails poorly due to insufficient permissions TAXONOMY NAME - WASC:ENTRY ID:17:ENTRY NAME:Improper Filesystem Permissions TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP4:ENTRY NAME:Unchecked Status Condition::,"TYPE - Maintenance NOTE - CWE-280 and CWE-274 are too similar. It is likely that CWE-274 will be deprecated in the future.  TYPE - Relationship NOTE - This can be both primary and resultant. When primary, it can expose a variety of weaknesses because a re","Software Development,Research Concept"
36,Absolute Path Traversal,Base,Draft,"The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize absolute path sequences such as /abs/path that can resolve to a location that is outside of that directory.",This allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.,NATURE:ChildOf:CWE ID:22 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:22 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:22 VIEW ID:1340 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands NOTE - The attacker may be able to create or overwrite critical files that are used to execute code, such as programs or libraries.  SCOPE - Inte","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,"REFERENCE - CVE-2022-31503 DESCRIPTION - Python package constructs filenames using an unsafe os.path.join call on untrusted input, allowing absolute path traversal because os.path.join resets the pathname to an absolute path that is specified as part of t",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Absolute Path Traversal TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,,Research Concept
842,Placement of User into Incorrect Group,Base,Incomplete,The product or the administrator places a user into an incorrect group.,"If the incorrect group has more access or privileges than the intended group, the user might be able to bypass intended security policy to access unexpected resources or perform unexpected actions. The access-control system might not be able to detect mal",NATURE:ChildOf:CWE ID:286 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation PHASE - Operation,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity,,,"REFERENCE - CVE-1999-1193 DESCRIPTION - Operating system assigns user to privileged wheel group, allowing the user to gain root privileges. LINK - https://www.cve.org/CVERecord?id=CVE-1999-1193  REFERENCE - CVE-2010-3716 DESCRIPTION - Chain: drafted web r",,,,,"Software Development,Research Concept"
214,Invocation of Process Using Visible Sensitive Information,Base,Incomplete,"A process is invoked with sensitive command-line arguments, environment variables, or other elements that can be seen by other processes on the operating system.",Many operating systems allow a user to list information about processes that are owned by other users. Other users could see information such as command line arguments or environment variable settings. When this data contains sensitive information such as,NATURE:ChildOf:CWE ID:497 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. PHASE - Operation,SCOPE - Confidentiality IMPACT - Read Application Data,,,REFERENCE - CVE-2005-1387 DESCRIPTION - password passed on command line LINK - https://www.cve.org/CVERecord?id=CVE-2005-1387  REFERENCE - CVE-2005-2291 DESCRIPTION - password passed on command line LINK - https://www.cve.org/CVERecord?id=CVE-2005-2291  R,,System Process,TAXONOMY NAME - PLOVER:ENTRY NAME:Process information infoleak to other processes TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::,"TYPE - Research Gap NOTE - Under-studied, especially environment variables.::","Software Development,Research Concept"
491,Public cloneable() Method Without Final ('Object Hijack'),Variant,Draft,"A class has a cloneable() method that is not declared final, which allows an object to be created without calling the constructor. This can cause the object to be in an unexpected state.",,NATURE:ChildOf:CWE ID:668 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity SCOPE - Other IMPACT - Unexpected State IMPACT - Varies by Context,,PHASE - Implementation DESCRIPTION - Make the cloneable() method final.,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Mobile Code: Object Hijack TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:OBJ07-J:ENTRY NAME:Sensitive classes must not let themselves be copied TAXONOMY NAME - Software Fau,,Research Concept
328,Use of Weak Hash,Base,Draft,"The product uses an algorithm that produces a digest (output value) that does not meet security expectations for a hash function that allows an adversary to reasonably determine the original input (preimage attack), find another input that can produce the",A hash function is defined as an algorithm that maps arbitrarily sized data into a fixed-sized digest (output) such that the following properties hold: The algorithm is not invertible (also called one-way or not reversible) The algorithm is deterministic;,NATURE:ChildOf:CWE ID:326 VIEW ID:1000 NATURE:ChildOf:CWE ID:327 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.,SCOPE - Access Control IMPACT - Bypass Protection Mechanism,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Architecture and Design DESCRIPTION - Use an adaptive hash function that can be configured to change the amount of computational effort needed to compute the hash, such as the number of iterations (stretching) or the amount of memory required. Som",REFERENCE - CVE-2022-30320 DESCRIPTION - Programmable Logic Controller (PLC) uses a protocol with a cryptographically insecure hashing algorithm for passwords. LINK - https://www.cve.org/CVERecord?id=CVE-2022-30320  REFERENCE - CVE-2005-4900 DESCRIPTION -,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Reversible One-Way Hash::,"TYPE - Maintenance NOTE - Since CWE 4.4, various cryptography-related entries including CWE-328 have been slated for extensive research, analysis, and community consultation to define consistent terminology, improve relationships, and reduce overlap or du","Software Development,Research Concept"
441,Unintended Proxy or Intermediary ('Confused Deputy'),Class,Draft,"The product receives a request, message, or directive from an upstream component, but the product does not sufficiently preserve the original source of the request before forwarding the request to an external actor that is outside of the product's control","If an attacker cannot directly contact a target, but the product has access to the target, then the attacker can send a request to the product and have it be forwarded to the target. The request would appear to be coming from the product's system, not the",NATURE:ChildOf:CWE ID:610 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:668 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,"TERM - Confused Deputy DESCRIPTION - This weakness is sometimes referred to as the Confused deputy problem, in which an attacker misused the authority of one victim (the confused deputy) when targeting another victim.::",PHASE - Architecture and Design: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Non-Repudiation SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity IMPACT - Hide Activities IMPACT - Execute Unauthorized Code or Commands,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design DESCRIPTION - Enforce the use of strong mutual authentication mechanism between the two parties.  PHASE - Architecture and Design DESCRIPTION - Whenever a product is an intermediary or proxy for transactions between two oth,REFERENCE - CVE-1999-0017 DESCRIPTION - FTP bounce attack. The design of the protocol allows an attacker to modify the PORT command to cause the FTP server to connect to other machines besides the attacker's. LINK - https://www.cve.org/CVERecord?id=CVE-19,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Unintended proxy/intermediary TAXONOMY NAME - PLOVER:ENTRY NAME:Proxied Trusted Channel TAXONOMY NAME - WASC:ENTRY ID:32:ENTRY NAME:Routing Detour::,TYPE - Relationship NOTE - This weakness has a chaining relationship with CWE-668 (Exposure of Resource to Wrong Sphere) because the proxy effectively provides the attacker with access to the target's resources that the attacker cannot directly obtain.  T,"Hardware Development,Research Concept"
342,Predictable Exact Value from Previous Values,Base,Draft,An exact value or random number can be precisely predicted by observing previous values.,,NATURE:ChildOf:CWE ID:340 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Other IMPACT - Varies by Context,,PHASE - DESCRIPTION - Increase the entropy used to seed a PRNG.  PHASE - Architecture and Design Requirements STRATEGY - Libraries or Frameworks DESCRIPTION - Use products or modules that conform to FIPS 140-2 [REF-267] to avoid obvious entropy problems. ,"REFERENCE - CVE-2002-1463 DESCRIPTION - Firewall generates easily predictable initial sequence numbers (ISN), which allows remote attackers to spoof connections. LINK - https://www.cve.org/CVERecord?id=CVE-2002-1463  REFERENCE - CVE-1999-0074 DESCRIPTION",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Predictable Exact Value from Previous Values::,"TYPE - Maintenance NOTE - As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, randomness is used heavily. However, within cryptography, entropy is distinct, typically i","Software Development,Research Concept"
486,Comparison of Classes by Name,Variant,Draft,"The product compares classes by name, which can cause it to use the wrong class when multiple classes can have the same name.","If the decision to trust the methods and data of an object is based on the name of a class, it is possible for malicious users to send objects of the same name as trusted classes and thereby gain the trust afforded to known classes and types.",NATURE:ChildOf:CWE ID:1025 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands NOTE - If a product relies solely on the name of an object to determine identity, it may execute the incorrect or unintended code.","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation DESCRIPTION - Use class equivalency to determine type. Rather than use the class name to determine if an object is of a given type, use the getClass() method, and == operator.",,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Comparing Classes by Name TAXONOMY NAME - CLASP:ENTRY NAME:Comparing classes by name TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:OBJ09-J:ENTRY NAME:Compare classes and no,,Research Concept
795,Only Filtering Special Elements at a Specified Location,Base,Incomplete,"The product receives data from an upstream component, but only accounts for special elements at a specified location, thereby missing remaining special elements that may exist before sending it to a downstream component.","A filter might only account for instances of special elements when they occur: relative to a marker (e.g. at the beginning/end of string; the second argument), or at an absolute position (e.g. byte number 10). This may leave special elements in the data t",NATURE:ChildOf:CWE ID:791 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Integrity IMPACT - Unexpected State,,,,,,,,Research Concept
638,Not Using Complete Mediation,Class,Draft,"The product does not perform access checks on a resource every time the resource is accessed by an entity, which can create resultant weaknesses if that entity's rights or privileges change over time.",,NATURE:ChildOf:CWE ID:657 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:862 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation PHASE - Operation,SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability SCOPE - Access Control SCOPE - Other IMPACT - Gain Privileges or Assume Identity IMPACT - Execute Unauthorized Code or Commands IMPACT - Bypass Protection Mechanism IMPACT - Read Application D,,"PHASE - Architecture and Design DESCRIPTION - Invalidate cached privileges, file handles or descriptors, or other access credentials whenever identities, processes, policies, roles, capabilities or permissions change. Perform complete authentication check",REFERENCE - CVE-2007-0408 DESCRIPTION - Server does not properly validate client certificates when reusing cached connections. LINK - https://www.cve.org/CVERecord?id=CVE-2007-0408,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP20:ENTRY NAME:Race Condition Window::,,Research Concept
375,Returning a Mutable Object to an Untrusted Caller,Base,Draft,Sending non-cloned mutable data as a return value may result in that data being altered or deleted by the calling function.,"In situations where functions return references to mutable data, it is possible that the external code which called the function may make changes to the data sent. If this data was not previously cloned, the class will then be using modified data which ma",NATURE:ChildOf:CWE ID:668 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C# LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Access Control SCOPE - Integrity IMPACT - Modify Memory NOTE - Potentially data could be tampered with by another function which should not have been tampered with.,,"PHASE - Implementation DESCRIPTION - Declare returned data which should not be altered as constant or immutable.  PHASE - Implementation DESCRIPTION - Clone all mutable data before returning references to it. This is the preferred mitigation. This way, re",,,,TAXONOMY NAME - CLASP:ENTRY NAME:Mutable object returned TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:OBJ04-J:ENTRY NAME:Provide mutable classes with copy functionality to safely allow passing instances to untrusted code,,"Software Development,Research Concept"
482,Comparing instead of Assigning,Variant,Draft,The code uses an operator for comparison when the intention was to perform an assignment.,"In many languages, the compare statement is very close in appearance to the assignment statement; they are often confused.",NATURE:ChildOf:CWE ID:480 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - This bug primarily originates from a typo.,"SCOPE - Availability SCOPE - Integrity IMPACT - Unexpected State NOTE - The assignment will not take place, which should cause obvious program execution problems.","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Testing DESCRIPTION - Many IDEs and static analysis products will detect this problem.,,,,TAXONOMY NAME - CLASP:ENTRY NAME:Comparing instead of assigning TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP2:ENTRY NAME:Unused Entities::,,Research Concept
601,URL Redirection to Untrusted Site ('Open Redirect'),Base,Draft,"A web application accepts a user-controlled input that specifies a link to an external site, and uses that link in a Redirect. This simplifies phishing attacks.","An http parameter may contain a URL value and could cause the web application to redirect the request to the specified URL. By modifying the URL value to a malicious site, an attacker may successfully launch a phishing scam and steal user credentials. Bec",NATURE:ChildOf:CWE ID:610 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:610 VIEW ID:1003 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Web Based TECHNOLOGY PREVALENCE:Undetermined,Phishing is a general term for deceptive attempts to coerce private information from users that will be used for identity theft.,TERM - Open Redirect TERM - Cross-site Redirect TERM - Cross-domain Redirect::,PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase. PHASE - Implementation,SCOPE - Access Control IMPACT - Bypass Protection Mechanism IMPACT - Gain Privileges or Assume Identity NOTE - The user may be redirected to an untrusted page that contains malware which may then compromise the user's machine. This will expose the user to,"METHOD - Manual Static Analysis DESCRIPTION - Since this weakness does not typically appear frequently within a single software package, manual white box techniques may be able to provide sufficient code coverage and reduction of false positives if all po","PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n",REFERENCE - CVE-2005-4206 DESCRIPTION - URL parameter loads the URL into a frame and causes it to appear to be part of a valid page. LINK - https://www.cve.org/CVERecord?id=CVE-2005-4206  REFERENCE - CVE-2008-2951 DESCRIPTION - An open redirect vulnerabil,,,TAXONOMY NAME - WASC:ENTRY ID:38:ENTRY NAME:URl Redirector Abuse TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,"Software Development,Research Concept"
512,Spyware,Base,Incomplete,"The product collects personally identifiable information about a human user or the user's activities, but the product accesses this information using other resources besides itself, and it does not require that user's explicit approval or direct input int","Spyware is a commonly used term with many definitions and interpretations. In general, it is meant to refer to products that collect information or install functionality that human users might not allow if they were fully aware of the actions being taken ",NATURE:ChildOf:CWE ID:506 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Architecture and Design PHASE - Implementation PHASE - Operation,SCOPE - Confidentiality IMPACT - Read Application Data,,PHASE - Operation DESCRIPTION - Use spyware detection and removal software.  PHASE - Installation DESCRIPTION - Always verify the integrity of the product that is being installed.,,,,,,Research Concept
460,Improper Cleanup on Thrown Exception,Base,Draft,"The product does not clean up its state or incorrectly cleans up its state when an exception is thrown, leading to unexpected state or control flow.","Often, when functions or loops become complicated, some level of resource cleanup is needed throughout execution. Exceptions can disturb the flow of the code and prevent the necessary cleanup from happening.",NATURE:ChildOf:CWE ID:459 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:755 VIEW ID:1000,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C# LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Other IMPACT - Varies by Context NOTE - The code could be left in a bad state.,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation DESCRIPTION - If one breaks from a loop or function by throwing an exception, make sure that cleanup happens or that you should exit the program. Use throwing exceptions sparsely.",,,,TAXONOMY NAME - CLASP:ENTRY NAME:Improper cleanup on thrown exception TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:ERR03-J:ENTRY NAME:Restore prior object state on method failure TAXONOMY NAME - The CERT Oracle Secure Co,,Research Concept
236,Improper Handling of Undefined Parameters,Variant,Draft,"The product does not handle or incorrectly handles when a particular parameter, field, or argument name is not defined or supported by the product.",,NATURE:ChildOf:CWE ID:233 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,,REFERENCE - CVE-2002-1488 DESCRIPTION - Crash in IRC client via PART message from a channel the user is not in. LINK - https://www.cve.org/CVERecord?id=CVE-2002-1488  REFERENCE - CVE-2001-0650 DESCRIPTION - Router crash or bad route modification using BGP,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Undefined Parameter Error::,,Research Concept
837,"Improper Enforcement of a Single, Unique Action",Base,Incomplete,"The product requires that an actor should only be able to perform an action once, or to have only one unique action, but the product does not enforce or improperly enforces this restriction.","In various applications, a user is only expected to perform a certain action once, such as voting, requesting a refund, or making a purchase. When this restriction is not enforced, sometimes this can have security implications. For example, in a voting ap",NATURE:ChildOf:CWE ID:799 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,#VALUE!,"SCOPE - Other IMPACT - Varies by Context NOTE - An attacker might be able to gain advantage over other users by performing the action multiple times, or affect the correctness of the product.",,,REFERENCE - CVE-2008-0294 DESCRIPTION - Ticket-booking web application allows a user to lock a seat more than once. LINK - https://www.cve.org/CVERecord?id=CVE-2008-0294  REFERENCE - CVE-2005-4051 DESCRIPTION - CMS allows people to rate downloads by votin,,,,,"Software Development,Research Concept"
1287,Improper Validation of Specified Type of Input,Base,Incomplete,"The product receives input that is expected to be of a certain type, but it does not validate or incorrectly validates that the input is actually of the expected type.","When input does not comply with the expected type, attackers could trigger unexpected errors, cause incorrect actions to take place, or exploit latent vulnerabilities that would not be possible if the input conformed with the expected type. This weakness ",NATURE:ChildOf:CWE ID:20 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:843 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Often,,,PHASE - Implementation,SCOPE - Other IMPACT - Varies by Context,,"PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n",REFERENCE - CVE-2008-2223 DESCRIPTION - SQL injection through an ID that was supposed to be numeric. LINK - https://www.cve.org/CVERecord?id=CVE-2008-2223,,,,TYPE - Maintenance NOTE - This entry is still under development and will continue to see updates and content improvements.::,"Software Development,Research Concept"
791,Incomplete Filtering of Special Elements,Base,Incomplete,"The product receives data from an upstream component, but does not completely filter special elements before sending it to a downstream component.",,NATURE:ChildOf:CWE ID:790 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Integrity IMPACT - Unexpected State,,,,,,,,"Software Development,Research Concept"
50,Path Equivalence: '//multiple/leading/slash',Variant,Incomplete,"The product accepts path input in the form of multiple leading slash ('//multiple/leading/slash') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or acce",,NATURE:ChildOf:CWE ID:41 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:161 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,,REFERENCE - CVE-2002-1483 DESCRIPTION - Read files with full pathname using multiple internal slash. LINK - https://www.cve.org/CVERecord?id=CVE-2002-1483  REFERENCE - CVE-1999-1456 DESCRIPTION - Server allows remote attackers to read arbitrary files via,,,TAXONOMY NAME - PLOVER:ENTRY NAME://multiple/leading/slash ('multiple leading slash') TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,,Research Concept
476,NULL Pointer Dereference,Base,Stable,"A NULL pointer dereference occurs when the application dereferences a pointer that it expects to be valid, but is NULL, typically causing a crash or exit.","NULL pointer dereference issues can occur through a number of flaws, including race conditions, and simple programming omissions.",NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:754 VIEW ID:1000 NATURE:ChildOf:CWE ID:754 VIEW ID:1003 ORDINAL:Primary,": ORDINALITY:Resultant:DESCRIPTION:NULL pointer dereferences are frequently resultant from rarely encountered error conditions, since these are most likely to escape detection during the testing phases.::",LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C# LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Go LANGUAGE PREVALENCE:Undetermined,,TERM - NPD TERM - null deref TERM - nil pointer dereference DESCRIPTION - used for access of nil in Go programs::,PHASE - Implementation,"SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart NOTE - NULL pointer dereferences usually result in the failure of the process unless exception handling (on some platforms) is available and implemented. Even when exception handling is being us","METHOD - Automated Dynamic Analysis DESCRIPTION - This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fa","PHASE - Implementation DESCRIPTION - If all pointers that could have been modified are sanity-checked previous to use, nearly all NULL pointer dereferences can be prevented.  PHASE - Requirements DESCRIPTION - The choice could be made to use a language th","REFERENCE - CVE-2005-3274 DESCRIPTION - race condition causes a table to be corrupted if a timer activates while it is being modified, leading to resultant NULL de REFERENCE; also involves locking. LINK - https://www.cve.org/CVERecord?id=CVE-2005-3274  RE",,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Null Dereference TAXONOMY NAME - CLASP:ENTRY NAME:Null-pointer dereference TAXONOMY NAME - PLOVER:ENTRY NAME:Null Dereference (Null Pointer Dereference) TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A9:ENTRY,,"Software Development,Research Concept"
15,External Control of System or Configuration Setting,Base,Incomplete,One or more system settings or configuration elements can be externally controlled by a user.,"Allowing external control of system settings can disrupt service or cause an application to behave in unexpected, and potentially malicious ways.",NATURE:ChildOf:CWE ID:642 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:610 VIEW ID:1000 NATURE:ChildOf:CWE ID:20 VIEW ID:700 ORDINAL:Primary,,TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Undetermined,,,"PHASE - Implementation: NOTE - Setting manipulation vulnerabilities occur when an attacker can control values that govern the behavior of the system, manage specific resources, or in some way affect the functionality of the application. PHASE - Implementa",SCOPE - Other IMPACT - Varies by Context,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design STRATEGY - Separation of Privilege DESCRIPTION - Compartmentalize the system to have safe areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always b,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Setting Manipulation TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP25:ENTRY NAME:Tainted input to variable::,,"Software Development,Research Concept"
921,Storage of Sensitive Data in a Mechanism without Access Control,Base,Incomplete,The product stores sensitive information in a file system or device that does not have built-in access control.,"While many modern file systems or devices utilize some form of access control in order to restrict access to data, not all storage mechanisms have this capability. For example, memory cards, floppy disks, CDs, and USB devices are typically made accessible",NATURE:ChildOf:CWE ID:922 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Mobile TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.,SCOPE - Confidentiality IMPACT - Read Application Data IMPACT - Read Files or Directories NOTE - Attackers can read sensitive information by accessing the unrestricted storage mechanism.  SCOPE - Integrity IMPACT - Modify Application Data IMPACT - Modify ,,,,,,,,"Software Development,Research Concept"
1342,Information Exposure through Microarchitectural State after Transient Execution,Base,Incomplete,"The processor does not properly clear microarchitectural state after incorrect microcode assists or speculative execution, resulting in transient execution.","In many processor architectures an exception, mis-speculation, or microcode assist results in a flush operation to clear results that are no longer required. This action prevents these results from influencing architectural state that is intended to be vi",NATURE:ChildOf:CWE ID:226 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:226 VIEW ID:1194 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Workstation:ARCHITECTURE PREVALENCE:Undetermined ARCHITECTURE NAME:x86:ARCHITECTURE PR,,,PHASE - Architecture and Design PHASE - Requirements,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Modify Memory IMPACT - Read Memory IMPACT - Execute Unauthorized Code or Commands LIKELIHOOD - Medium,,PHASE - Architecture and Design Requirements DESCRIPTION - Hardware ensures that no illegal data flows from faulting micro-ops exists at the microarchitectural level. EFFECTIVENESS High  PHASE - Build and Compilation DESCRIPTION - Include instructions tha,REFERENCE - CVE-2020-0551 DESCRIPTION - Load value injection in some processors utilizing speculative execution may allow an authenticated user to enable information disclosure via a side-channel with local access. LINK - https://www.cve.org/CVERecord?id=,,,,"TYPE - Relationship NOTE - CWE-1342 differs from CWE-1303, which is related to misprediction and biasing microarchitectural components, while CWE-1342 addresses illegal data flows and retention. For example, Spectre is an instance of CWE-1303 biasing bran","Hardware Development,Research Concept"
1085,Invokable Control Element with Excessive Volume of Commented-out Code,Base,Incomplete,"A function, method, procedure, etc. contains an excessive amount of code that has been commented out within its body.","This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities. While the interpreta",NATURE:ChildOf:CWE ID:1078 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,TAXONOMY NAME - OMG ASCMM:ENTRY ID:ASCMM-MNT-6::,,"Software Development,Research Concept"
674,Uncontrolled Recursion,Class,Draft,"The product does not properly control the amount of recursion that takes place, consuming excessive resources, such as allocated memory or the program stack.",,NATURE:ChildOf:CWE ID:834 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,TERM - Stack Exhaustion::,PHASE - Implementation: NOTE - The uncontrolled recursion is often due to an improper or missing conditional,"SCOPE - Availability IMPACT - DoS -  Resource Consumption (CPU) IMPACT - DoS -  Resource Consumption (Memory) NOTE - Resources including CPU, memory, and stack memory could be rapidly consumed or exhausted, eventually leading to an exit or crash.  SCOPE -","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - Ensure an end condition will be reached under all logic conditions. The end condition may include testing against the depth of recursion and exiting with an error if the recursion goes too deep. The complexity of the e,REFERENCE - CVE-2007-1285 DESCRIPTION - Deeply nested arrays trigger stack exhaustion. LINK - https://www.cve.org/CVERecord?id=CVE-2007-1285  REFERENCE - CVE-2007-3409 DESCRIPTION - Self-referencing pointers create infinite loop and resultant stack exhaus,,CPU,TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP13:ENTRY NAME:Unrestricted Consumption TAXONOMY NAME - OMG ASCRM:ENTRY ID:ASCRM-CWE-674::,,Research Concept
1125,Excessive Attack Surface,Base,Incomplete,The product has an attack surface whose quantitative measurement exceeds a desirable maximum.,"Originating from software security, an attack surface measure typically reflects the number of input points and output points that can be utilized by an untrusted party, i.e. a potential attacker. A larger attack surface provides more places to attack, an",NATURE:ChildOf:CWE ID:1120 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,#VALUE!,,,,,,,,"Software Development,Research Concept"
49,Path Equivalence: 'filename/' (Trailing Slash),Variant,Incomplete,"The product accepts path input in the form of trailing slash ('filedir/') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",,NATURE:ChildOf:CWE ID:41 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:162 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation PHASE - Operation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,,REFERENCE - CVE-2002-0253 DESCRIPTION - Overlaps infoleak LINK - https://www.cve.org/CVERecord?id=CVE-2002-0253  REFERENCE - CVE-2001-0446 DESCRIPTION - Application server allows remote attackers to read source code for .jsp files by appending a / to the,,,"TAXONOMY NAME - PLOVER:ENTRY NAME:filedir/ (trailing slash, trailing /) TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::",,Research Concept
541,Inclusion of Sensitive Information in an Include File,Variant,Incomplete,"If an include file source is accessible, the file can contain usernames and passwords, as well as sensitive information pertaining to the application and system.",,NATURE:ChildOf:CWE ID:540 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Application Data,,PHASE - Architecture and Design DESCRIPTION - Do not store sensitive information in include files.  PHASE - Architecture and Design System Configuration DESCRIPTION - Protect include files from being exposed.,,,,,,Research Concept
430,Deployment of Wrong Handler,Base,Incomplete,The wrong handler is assigned to process an object.,"An example of deploying the wrong handler would be calling a servlet to reveal source code of a .JSP file, or automatically determining type of the object even if it is contradictory to an explicitly specified type.",NATURE:ChildOf:CWE ID:691 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:433 VIEW ID:1000 NATURE:PeerOf:CWE ID:434 VIEW ID:1000,: ORDINALITY:Resultant:DESCRIPTION:This weakness is usually resultant from other weaknesses.::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity SCOPE - Other IMPACT - Varies by Context IMPACT - Unexpected State,,"PHASE - Architecture and Design DESCRIPTION - Perform a type check before interpreting an object.  PHASE - Architecture and Design DESCRIPTION - Reject any inconsistent types, such as a file with a .GIF extension that appears to consist of PHP code.",REFERENCE - CVE-2001-0004 DESCRIPTION - Source code disclosure via manipulated file extension that causes parsing by wrong DLL. LINK - https://www.cve.org/CVERecord?id=CVE-2001-0004  REFERENCE - CVE-2002-0025 DESCRIPTION - Web browser does not properly ha,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Improper Handler Deployment::,,"Software Development,Research Concept"
657,Violation of Secure Design Principles,Class,Draft,The product violates well-established principles for secure design.,"This can introduce resultant weaknesses or make it easier for developers to introduce related weaknesses during implementation. Because code is centered around design, it can be resource-intensive to fix design problems.",NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Architecture and Design PHASE - Implementation PHASE - Operation,SCOPE - Other IMPACT - Other,,,REFERENCE - CVE-2019-6260 DESCRIPTION - Baseboard Management Controller (BMC) device implements Advanced High-performance Bus (AHB) bridges that do not require authentication for arbitrary read and write access to the BMC's physical address space from the,,,TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-1:ENTRY NAME:Req SD-3 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-1:ENTRY NAME:Req SD-4 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-1:ENTRY NAME:Req SI-1::,"TYPE - Maintenance NOTE - The Taxonomy_Mappings to ISA/IEC 62443 were added in CWE 4.10, but they are still under review and might change in future CWE versions. These draft mappings were performed by members of the Mapping CWE to 62443 subgroup of the CW",Research Concept
309,Use of Password System for Primary Authentication,Base,Draft,"The use of password systems as the primary means of authentication may be subject to several flaws or shortcomings, each reducing the effectiveness of the mechanism.",,NATURE:ChildOf:CWE ID:1390 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:654 VIEW ID:1000 NATURE:PeerOf:CWE ID:308 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,"Password systems are the simplest and most ubiquitous authentication mechanisms. However, they are subject to such well known attacks,and such frequent compromise that their use in the most simple implementation is not practical.",,PHASE - Architecture and Design,SCOPE - Access Control IMPACT - Bypass Protection Mechanism IMPACT - Gain Privileges or Assume Identity NOTE - A password authentication mechanism error will almost always result in attackers being authorized as valid users.,,"PHASE - Architecture and Design DESCRIPTION - In order to protect password systems from compromise, the following should be noted  Passwords should be stored safely to prevent insider attack and to ensure that -- if a system is compromised -- the password",,,,TAXONOMY NAME - CLASP:ENTRY NAME:Using password systems TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::,,"Software Development,Research Concept"
914,Improper Control of Dynamically-Identified Variables,Base,Incomplete,The product does not properly restrict reading from or writing to dynamically-identified variables.,"Many languages offer powerful features that allow the programmer to access arbitrary variables that are specified by an input string. While these features can offer significant flexibility and reduce development time, they can be extremely dangerous if at",NATURE:ChildOf:CWE ID:99 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:913 VIEW ID:1000,: ORDINALITY:Primary::,,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Modify Application Data NOTE - An attacker could modify sensitive data or program variables.  SCOPE - Integrity IMPACT - Execute Unauthorized Code or Commands  SCOPE - Other -  SCOPE - Integrity IMPACT - Varies by Context IMPACT,,"PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - For any externally-influenced input, check the input against an allowlist of internal program variables that are allowed to be modified.  PHASE - Implementation Architecture and Design STRAT","REFERENCE - CVE-2006-7135 DESCRIPTION - extract issue enables file inclusion LINK - https://www.cve.org/CVERecord?id=CVE-2006-7135  REFERENCE - CVE-2006-7079 DESCRIPTION - Chain: extract used for register_globals compatibility layer, enables path traversa",,,,,"Software Development,Research Concept"
173,Improper Handling of Alternate Encoding,Variant,Draft,The product does not properly handle when an input uses an alternate encoding that is valid for the control sphere to which the input is being sent.,,NATURE:ChildOf:CWE ID:172 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:289 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Access Control IMPACT - Bypass Protection Mechanism,,PHASE - Architecture and Design STRATEGY - Input Validation DESCRIPTION - Avoid making decisions based on names of resources (e.g. files) if those resources can have alternate names.  PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume,,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Alternate Encoding::,,Research Concept
1099,Inconsistent Naming Conventions for Identifiers,Base,Incomplete,"The product's code, documentation, or other artifacts do not consistently use the same naming conventions for variables, callables, groups of related callables, I/O capabilities, data types, file names, or similar types of elements.","This issue makes it more difficult to understand and/or maintain the product due to inconsistencies, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introd",NATURE:ChildOf:CWE ID:1078 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,#VALUE!,,,,,,,,"Software Development,Research Concept"
104,Struts: Form Bean Does Not Extend Validation Class,Variant,Draft,"If a form bean does not extend an ActionForm subclass of the Validator framework, it can expose the application to other weaknesses related to insufficient input validation.",,NATURE:ChildOf:CWE ID:573 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:20 VIEW ID:700 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,"In order to use the Struts Validator, a form must extend one of the following: ValidatorForm, ValidatorActionForm, DynaValidatorActionForm, and DynaValidatorForm. One of these classes must be extended because the Struts Validator ties in to the applicatio",,PHASE - Implementation,"SCOPE - Other IMPACT - Other NOTE - Bypassing the validation framework for a form exposes the application to numerous types of attacks. Unchecked input is an important component of vulnerabilities like cross-site scripting, process control, and SQL inject","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - Ensure that all forms extend one of the Validation Classes.,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Struts: Form Bean Does Not Extend Validation Class TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,Research Concept
1110,Incomplete Design Documentation,Base,Incomplete,"The product's design documentation does not adequately describe control flow, data flow, system initialization, relationships between tasks, components, rationales, or other important aspects of the design.",,NATURE:ChildOf:CWE ID:1059 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Undetermined,,,#VALUE!,#VALUE!,,,,,,,,"Software Development,Research Concept"
1052,Excessive Use of Hard-Coded Literals in Initialization,Base,Incomplete,The product initializes a data element using a hard-coded literal that is not a simple integer or static constant element.,"This issue makes it more difficult to modify or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",NATURE:ChildOf:CWE ID:1419 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,TAXONOMY NAME - OMG ASCMM:ENTRY ID:ASCMM-MNT-3::,,"Software Development,Research Concept"
494,Download of Code Without Integrity Check,Base,Draft,The product downloads source code or an executable from a remote location and executes the code without sufficiently verifying the origin and integrity of the code.,"An attacker can execute malicious code by compromising the host server, performing DNS spoofing, or modifying the code in transit.",NATURE:ChildOf:CWE ID:345 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:669 VIEW ID:1000 NATURE:ChildOf:CWE ID:669 VIEW ID:1003 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase. PHASE - Implementation,SCOPE - Integrity SCOPE - Availability SCOPE - Confidentiality SCOPE - Other IMPACT - Execute Unauthorized Code or Commands IMPACT - Alter Execution Logic IMPACT - Other NOTE - Executing untrusted code could compromise the control flow of the program. The,"METHOD - Manual Analysis DESCRIPTION - This weakness can be detected using tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active ",PHASE - Implementation DESCRIPTION - Perform proper forward and reverse DNS lookups to detect DNS spoofing.  PHASE - Architecture and Design Operation DESCRIPTION - Encrypt the code with a reliable encryption scheme before transmitting. This will only be ,REFERENCE - CVE-2019-9534 DESCRIPTION - Satellite phone does not validate its firmware image. LINK - https://www.cve.org/CVERecord?id=CVE-2019-9534  REFERENCE - CVE-2021-22909 DESCRIPTION - Chain: router's firmware update procedure uses curl with -k (inse,,,TAXONOMY NAME - CLASP:ENTRY NAME:Invoking untrusted mobile code TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SEC06-J:ENTRY NAME:Do not rely on the default automatic signature verification provided by URLClassLoader and j,"TYPE - Research Gap NOTE - This is critical for mobile code, but it is likely to become more and more common as developers continue to adopt automated, network-based product distributions and upgrades. Software-as-a-Service (SaaS) might introduce addition","Software Development,Research Concept"
616,Incomplete Identification of Uploaded File Variables (PHP),Variant,Incomplete,"The PHP application uses an old method for processing uploaded files by referencing the four global variables that are set for each file (e.g. $varname, $varname_size, $varname_name, $varname_type). These variables could be overwritten by attackers, causi","These global variables could be overwritten by POST requests, cookies, or other methods of populating or overwriting these variables. This could be used to read or process arbitrary files by providing values such as /etc/passwd.",NATURE:ChildOf:CWE ID:345 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:473 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE NAME:PHP LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,"PHASE - Architecture and Design DESCRIPTION - Use PHP 4 or later.  PHASE - Architecture and Design DESCRIPTION - If you must support older PHP versions, write your own version of is_uploaded_file() and run it against $HTTP_POST_FILES['userfile']))  PHASE ","REFERENCE - CVE-2002-1460 DESCRIPTION - Forum does not properly verify whether a file was uploaded or if the associated variables were set by POST, allowing remote attackers to read arbitrary files. LINK - https://www.cve.org/CVERecord?id=CVE-2002-1460  R",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Incomplete Identification of Uploaded File Variables (PHP) TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP25:ENTRY NAME:Tainted input to variable::,,Research Concept
67,Improper Handling of Windows Device Names,Variant,Incomplete,"The product constructs pathnames from user input, but it does not handle or incorrectly handles a pathname containing a Windows device name such as AUX or CON. This typically leads to denial of service or an information exposure when the application attem","Not properly handling virtual filenames (e.g. AUX, CON, PRN, COM1, LPT1) can result in different types of vulnerabilities. In some cases an attacker can request a device via injection of a virtual filename in a URL, which may cause an error that leads to ",NATURE:ChildOf:CWE ID:66 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Resultant::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Windows OPERATING SYSTEM PREVALENCE:Undetermined,"Historically, there was a bug in the Windows operating system that caused a blue screen of death. Even after that issue was fixed DOS device names continue to be a factor.",,PHASE - Implementation PHASE - Operation,"SCOPE - Availability SCOPE - Confidentiality SCOPE - Other IMPACT - DoS -  Crash, Exit, or Restart IMPACT - Read Application Data IMPACT - Other",,PHASE - Implementation DESCRIPTION - Be familiar with the device names in the operating system where your system is deployed. Check input for these device names.,REFERENCE - CVE-2002-0106 DESCRIPTION - Server allows remote attackers to cause a denial of service via a series of requests to .JSP files that contain an MS-DOS device name. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0106  REFERENCE - CVE-2002-0200,,File or Directory,TAXONOMY NAME - PLOVER:ENTRY NAME:Windows MS-DOS device names TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FIO32-C:ENTRY NAME:Do not perform operations on devices that are only appropriate for files:MAPPING FIT:CWE More Specific TAXONOMY NAME - The CERT,,Research Concept
1059,Insufficient Technical Documentation,Class,Incomplete,"The product does not contain sufficient technical or engineering documentation (whether on paper or in electronic form) that contains descriptions of all the relevant software/hardware elements of the product, such as its usage, structure, architectural c","When technical documentation is limited or lacking, products are more difficult to maintain. This indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. When using time-limited or labor-limited third-",NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design PHASE - Documentation,"SCOPE - Other IMPACT - Varies by Context IMPACT - Hide Activities IMPACT - Reduce Reliability IMPACT - Quality Degradation IMPACT - Reduce Maintainability NOTE - Without a method of verification, one cannot be sure that everything only functions as expect",,PHASE - Documentation Architecture and Design DESCRIPTION - Ensure that design documentation is detailed enough to allow for post-manufacturing verification.,"REFERENCE - CVE-2022-3203 DESCRIPTION - A wireless access point manual specifies that the only method of configuration is via web interface (CWE-1059), but there is an undisclosed telnet server that was activated by default (CWE-912). LINK - https://www.c",,,TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 2-4:ENTRY NAME:Req SP.02.03 BR TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 2-4:ENTRY NAME:Req SP.02.03 RE(1) TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 2-4:ENTRY NAME:Req SP.03.03 RE(1) TAXONOMY NAME - ISA/IEC,,"Hardware Development,Research Concept"
1088,Synchronous Access of Remote Resource without Timeout,Base,Incomplete,"The code has a synchronous call to a remote resource, but there is no timeout for the call, or the timeout is set to infinite.","This issue can prevent the product from running reliably, since an outage for the remote resource can cause the product to hang. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.",NATURE:ChildOf:CWE ID:821 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Reliability,,,,,,TAXONOMY NAME - OMG ASCRM:ENTRY ID:ASCRM-RLB-19::,,Research Concept
1021,Improper Restriction of Rendered UI Layers or Frames,Base,Incomplete,"The web application does not restrict or incorrectly restricts frame objects or UI layers that belong to another application or domain, which can lead to user confusion about which interface the user is interacting with.","A web application is expected to place restrictions on whether it is allowed to be rendered within frames, iframes, objects, embed or applet elements. Without the restrictions, users can be tricked into interacting with the application when they were not ",NATURE:ChildOf:CWE ID:441 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:610 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:451 VIEW ID:1000,,TECHNOLOGY CLASS:Web Based TECHNOLOGY PREVALENCE:Undetermined,,"TERM - Clickjacking TERM - UI Redress Attack TERM - Tapjacking DESCRIPTION - Tapjacking is similar to clickjacking, except it is used for mobile applications in which the user taps the application instead of performing a mouse click.::",PHASE - Implementation,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity IMPACT - Bypass Protection Mechanism IMPACT - Read Application Data IMPACT - Modify Application Data NOTE - An attacker can trick a user into performing actions that are masked and hidden ,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation DESCRIPTION - The use of X-Frame-Options allows developers of web content to restrict the usage of their application within the form of overlays, frames, or iFrames. The developer can indicate from which domains can frame the conten",REFERENCE - CVE-2017-7440 DESCRIPTION - E-mail preview feature in a desktop application allows clickjacking attacks via a crafted e-mail message LINK - https://www.cve.org/CVERecord?id=CVE-2017-7440  REFERENCE - CVE-2017-5697 DESCRIPTION - Hardware/firmwa,,,,,"Software Development,Research Concept"
939,Improper Authorization in Handler for Custom URL Scheme,Base,Incomplete,"The product uses a handler for a custom URL scheme, but it does not properly restrict which actors can invoke the handler using the scheme.","Mobile platforms and other architectures allow the use of custom URL schemes to facilitate communication between applications. In the case of iOS, this is the only method to do inter-application communication. The implementation is at the developer's disc",NATURE:ChildOf:CWE ID:862 VIEW ID:1000 ORDINAL:Primary,,TECHNOLOGY CLASS:Mobile TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,#VALUE!,,"PHASE - Architecture and Design DESCRIPTION - Utilize a user prompt pop-up to authorize potentially harmful actions such as those modifying data or dealing with sensitive information. When designing functionality of actions in the URL scheme, consider whe",REFERENCE - CVE-2013-5725 DESCRIPTION - URL scheme has action replace which requires no user prompt and allows remote attackers to perform undesired actions. LINK - https://www.cve.org/CVERecord?id=CVE-2013-5725  REFERENCE - CVE-2013-5726 DESCRIPTION - UR,,,,,"Software Development,Research Concept"
147,Improper Neutralization of Input Terminators,Variant,Draft,"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as input terminators when they are sent to a downstream component.","For example, a . in SMTP signifies the end of mail message data, whereas a null character can be used for the end of a string.",NATURE:ChildOf:CWE ID:138 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,"PHASE - DESCRIPTION - Developers should anticipate that terminators will be injected/removed/manipulated in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appropriate input","REFERENCE - CVE-2000-0319 DESCRIPTION - MFV. mail server does not properly identify terminator string to signify end of message, causing corruption, possibly in conjunction with off-by-one error. LINK - https://www.cve.org/CVERecord?id=CVE-2000-0319  REFE",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Input Terminator TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,Research Concept
663,Use of a Non-reentrant Function in a Concurrent Context,Base,Draft,The product calls a non-reentrant function in a concurrent context in which a competing code sequence (e.g. thread or signal handler) may have an opportunity to call the same function or otherwise influence its state.,,NATURE:ChildOf:CWE ID:662 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation,SCOPE - Integrity SCOPE - Confidentiality SCOPE - Other IMPACT - Modify Memory IMPACT - Read Memory IMPACT - Modify Application Data IMPACT - Read Application Data IMPACT - Alter Execution Logic,,"PHASE - Implementation DESCRIPTION - Use reentrant functions if available.  PHASE - Implementation DESCRIPTION - Add synchronization to your non-reentrant function.  PHASE - Implementation DESCRIPTION - In Java, use the ReentrantLock Class.",REFERENCE - CVE-2001-1349 DESCRIPTION - unsafe calls to library functions from signal handler LINK - https://www.cve.org/CVERecord?id=CVE-2001-1349  REFERENCE - CVE-2004-2259 DESCRIPTION - SIGCHLD signal to FTP server can cause crash under heavy load whil,,,,,"Software Development,Research Concept"
1258,Exposure of Sensitive System Information Due to Uncleared Debug Information,Base,Draft,"The hardware does not fully clear security-sensitive values, such as keys and intermediate values in cryptographic operations, when debug mode is entered.","Security sensitive values, keys, intermediate steps of cryptographic operations, etc. are stored in temporary registers in the hardware. If these values are not cleared when debug mode is entered they may be accessed by a debugger allowing sensitive infor",NATURE:ChildOf:CWE ID:212 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:200 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Memory  SCOPE - Access Control IMPACT - Bypass Protection Mechanism,,"PHASE - Architecture and Design DESCRIPTION - Whenever debug mode is enabled, all registers containing sensitive assets must be cleared.",REFERENCE - CVE-2021-33080 DESCRIPTION - Uncleared debug information in memory accelerator for SSD product exposes sensitive system information LINK - https://www.cve.org/CVERecord?id=CVE-2021-33080  REFERENCE - CVE-2022-31162 DESCRIPTION - Rust library l,,,,,"Hardware Development,Research Concept"
285,Improper Authorization,Class,Draft,The product does not perform or incorrectly performs an authorization check when an actor attempts to access a resource or perform an action.,"Assuming a user with a given identity, authorization is the process of determining whether that user can access a given resource, based on the user's privileges and any permissions or other access-control specifications that apply to the resource. When ac",NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:284 VIEW ID:1340 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY NAME:Web Server TECHNOLOGY PREVALENCE:Often TECHNOLOGY NAME:Database Server TECHNOLOGY PREVALENCE:Often,"An access control list (ACL) represents who/what has permissions to a given object. Different operating systems implement (ACLs) in different ways. In UNIX, there are three types of permissions: read, write, and execute. Users are divided into three class","TERM - AuthZ DESCRIPTION - AuthZ is typically used as an abbreviation of authorization within the web application security community. It is distinct from AuthN (or, sometimes, AuthC) which is an abbreviation of authentication. The use of Auth as an abbrev",PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. A developer may introduce authorization weaknesses because of a lack of understanding about the underlying technologies. For exa,"SCOPE - Confidentiality IMPACT - Read Application Data IMPACT - Read Files or Directories NOTE - An attacker could read sensitive data, either by reading the data directly from a data store that is not properly restricted, or by accessing insufficiently-p","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis is useful for detecting commonly-used idioms for authorization. A tool may be able to analyze related configuration files, such as .htaccess in Apache web servers, or detect the us","PHASE - Architecture and Design DESCRIPTION - Divide the product into anonymous, normal, privileged, and administrative areas. Reduce the attack surface by carefully mapping roles with data and functionality. Use role-based access control (RBAC) to enforc","REFERENCE - CVE-2022-24730 DESCRIPTION - Go-based continuous deployment product does not check that a user has certain privileges to update or create an app, allowing adversaries to read sensitive repository information LINK - https://www.cve.org/CVERecor",,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Missing Access Control TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A10:ENTRY NAME:Failure to Restrict URL Access:MAPPING FIT:CWE More Specific TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A2:ENTRY NAME:Broke,,Research Concept
114,Process Control,Class,Incomplete,Executing commands or loading libraries from an untrusted source or in an untrusted environment can cause an application to execute malicious commands (and payloads) on behalf of an attacker.,Process control vulnerabilities take two forms: An attacker can change the command that the program executes: the attacker explicitly controls what the command is. An attacker can change the environment in which the command executes: the attacker implicit,NATURE:ChildOf:CWE ID:73 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:20 VIEW ID:700 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Architecture and Design STRATEGY - Libraries or Frameworks DESCRIPTION - Libraries that are loaded should be well understood and come from a trusted source. The application can execute code contained in the native libraries, which often contain ca",,,System Process,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Process Control::,"TYPE - Maintenance NOTE - CWE-114 is a Class, but it is listed a child of CWE-73 in view 1000. This suggests some abstraction problems that should be resolved in future versions.  TYPE - Maintenance NOTE - This entry seems to have close relationships with",Research Concept
372,Incomplete Internal State Distinction,Base,Draft,"The product does not properly determine which state it is in, causing it to assume it is in state X when in fact it is in state Y, causing it to perform incorrect operations in a security-relevant manner.",,NATURE:ChildOf:CWE ID:664 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity SCOPE - Other IMPACT - Varies by Context IMPACT - Unexpected State,,,,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Incomplete Internal State Distinction::,"TYPE - Relationship NOTE - This conceptually overlaps other categories such as insufficient verification, but this entry refers to the product's incorrect perception of its own state.  TYPE - Relationship NOTE - This is probably resultant from other weakn","Software Development,Research Concept"
1056,Invokable Control Element with Variadic Parameters,Base,Incomplete,A named-callable or method control element has a signature that supports a variable (variadic) number of parameters or arguments.,"This issue can prevent the product from running reliably. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability. With variadic arguments, it can be difficult or inefficient for manual analysis to b",NATURE:ChildOf:CWE ID:1120 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Reliability,,,,,,TAXONOMY NAME - OMG ASCRM:ENTRY ID:ASCRM-RLB-8::,,"Software Development,Research Concept"
351,Insufficient Type Distinction,Base,Draft,The product does not properly distinguish between different types of elements in a way that leads to insecure behavior.,,NATURE:ChildOf:CWE ID:345 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:436 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Other,,,REFERENCE - CVE-2005-2260 DESCRIPTION - Browser user interface does not distinguish between user-initiated and synthetic events. LINK - https://www.cve.org/CVERecord?id=CVE-2005-2260  REFERENCE - CVE-2005-2801 DESCRIPTION - Product does not compare all re,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Insufficient Type Distinction::,"TYPE - Relationship NOTE - Overlaps others, e.g. Multiple Interpretation Errors.::","Software Development,Research Concept"
609,Double-Checked Locking,Base,Draft,"The product uses double-checked locking to access a resource without the overhead of explicit synchronization, but the locking is insufficient.","Double-checked locking refers to the situation where a programmer checks to see if a resource has been initialized, grabs a lock, checks again to see if the resource has been initialized, and then performs the initialization if it has not occurred yet. Th",NATURE:ChildOf:CWE ID:667 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:367 VIEW ID:1000,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity SCOPE - Other IMPACT - Modify Application Data IMPACT - Alter Execution Logic,,"PHASE - Implementation DESCRIPTION - While double-checked locking can be achieved in some languages, it is inherently flawed in Java before 1.5, and cannot be achieved without compromising platform independence. Before Java 1.5, only use of the synchroniz",,,,TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:LCK10-J:ENTRY NAME:Do not use incorrect forms of the double-checked locking idiom TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP19:ENTRY NAME:Missing Lock::,,"Software Development,Research Concept"
1124,Excessively Deep Nesting,Base,Incomplete,The code contains a callable or other code grouping in which the nesting / branching is too deep.,"This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",NATURE:ChildOf:CWE ID:1120 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,,,"Software Development,Research Concept"
1299,Missing Protection Mechanism for Alternate Hardware Interface,Base,Draft,The lack of protections on alternate paths to access control-protected assets (such as unprotected shadow registers and other external facing unguarded interfaces) allows an attacker to bypass existing protections to the asset that are only performed agai,"An asset inside a chip might have access-control protections through one interface. However, if all paths to the asset are not protected, an attacker might compromise the asset through alternate paths. These alternate paths could be through shadow or mirr",NATURE:PeerOf:CWE ID:1191 VIEW ID:1194 ORDINAL:Primary NATURE:ChildOf:CWE ID:420 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:288 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY NAME:Microco,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Access Control IMPACT - Modify Memory IMPACT - Read Memory IMPACT - DoS -  Resource Consumption (Other) IMPACT - Execute Unauthorized Code or Commands IMPACT - Gain Privileges or Assum,,PHASE - Requirements DESCRIPTION - Protect assets from accesses against all potential interfaces and alternate paths. EFFECTIVENESS Defense in Depth  PHASE - Architecture and Design DESCRIPTION - Protect assets from accesses against all potential interfac,REFERENCE - CVE-2022-38399 DESCRIPTION - Missing protection mechanism on serial connection allows for arbitrary OS command execution. LINK - https://www.cve.org/CVERecord?id=CVE-2022-38399  REFERENCE - CVE-2020-9285 DESCRIPTION - Mini-PCI Express slot doe,,,,,"Hardware Development,Research Concept"
786,Access of Memory Location Before Start of Buffer,Base,Incomplete,The product reads or writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer.,"This typically occurs when a pointer or its index is decremented to a position before the buffer, when pointer arithmetic results in a position before the beginning of the valid memory location, or when a negative index is used.",NATURE:ChildOf:CWE ID:119 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:119 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:119 VIEW ID:1340 ORDINAL:Primary,,,,,#VALUE!,"SCOPE - Confidentiality IMPACT - Read Memory NOTE - For an out-of-bounds read, the attacker may have access to sensitive information. If the sensitive information contains system details, such as the current buffers position in memory, this knowledge can ","METHOD - Fuzzing DESCRIPTION - Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often c",,REFERENCE - CVE-2002-2227 DESCRIPTION - Unchecked length of SSLv2 challenge value leads to buffer underflow. LINK - https://www.cve.org/CVERecord?id=CVE-2002-2227  REFERENCE - CVE-2007-4580 DESCRIPTION - Buffer underflow from a small size value with a lar,,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:ARR30-C:ENTRY NAME:Do not form or use out-of-bounds pointers or array subscripts:MAPPING FIT:CWE More Specific::,,"Software Development,Research Concept"
757,Selection of Less-Secure Algorithm During Negotiation ('Algorithm Downgrade'),Base,Incomplete,"A protocol or its implementation supports interaction between multiple actors and allows those actors to negotiate which algorithm should be used as a protection mechanism such as encryption or authentication, but it does not select the strongest algorith","When a security mechanism can be forced to downgrade to use a less secure algorithm, this can make it easier for attackers to compromise the product by exploiting weaker algorithm. The victim might not be aware that the less secure algorithm is being used",NATURE:ChildOf:CWE ID:693 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.,SCOPE - Access Control IMPACT - Bypass Protection Mechanism,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,REFERENCE - CVE-2006-4302 DESCRIPTION - Attacker can select an older version of the software to exploit its vulnerabilities. LINK - https://www.cve.org/CVERecord?id=CVE-2006-4302  REFERENCE - CVE-2006-4407 DESCRIPTION - Improper prioritization of encrypti,,,,"TYPE - Relationship NOTE - This is related to CWE-300, although not all downgrade attacks necessarily require an entity that redirects or interferes with the network. See examples.::",Research Concept
646,Reliance on File Name or Extension of Externally-Supplied File,Variant,Incomplete,"The product allows a file to be uploaded, but it relies on the file name or extension of the file to determine the appropriate behaviors. This could be used by attackers to cause the file to be misclassified and processed in a dangerous fashion.","An application might use the file name or extension of a user-supplied file to determine the proper course of action, such as selecting the correct process to which control should be passed, deciding what data should be made available, or what resources s",NATURE:ChildOf:CWE ID:345 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY NAME:Web Server TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation PHASE - Operation,"SCOPE - Confidentiality IMPACT - Read Application Data NOTE - An attacker may be able to read sensitive data.  SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart NOTE - An attacker may be able to cause a denial of service.  SCOPE - Access Contro",,PHASE - Architecture and Design DESCRIPTION - Make decisions on the server side based on file content and not on file name or extension.,,,,,,Research Concept
1421,Exposure of Sensitive Information in Shared Microarchitectural Structures during Transient Execution,Base,Incomplete,"A processor event may allow transient operations to access architecturally restricted data (for example, in another address space) in a shared microarchitectural structure (for example, a CPU cache), potentially exposing the data over a covert channel.","Many commodity processors have Instruction Set Architecture (ISA) features that protect software components from one another. These features can include memory segmentation, virtual memory, privilege rings, trusted execution environments, and virtual mach",NATURE:ChildOf:CWE ID:1420 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:1420 VIEW ID:1194 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design: NOTE - This weakness can be introduced during hardware architecture and design if a data path allows architecturally restricted data to propagate to operations that execute before an older mis-prediction or processor event,SCOPE - Confidentiality IMPACT - Read Memory LIKELIHOOD - Medium NOTE - <<put the information here>>,"METHOD - Manual Analysis DESCRIPTION - This weakness can be detected in hardware by manually inspecting processor specifications. Features that exhibit this weakness may include microarchitectural predictors, access control checks that occur out-of-order,",PHASE - Architecture and Design DESCRIPTION - Hardware designers may choose to engineer the processor's pipeline to prevent architecturally restricted data from being used by operations that can execute transiently. EFFECTIVENESS High  PHASE - Architectur,"REFERENCE - CVE-2017-5715 DESCRIPTION - A fault may allow transient user-mode operations to access kernel data cached in the L1D, potentially exposing the data over a covert channel. LINK - https://www.cve.org/CVERecord?id=CVE-2017-5715  REFERENCE - CVE-2",,,,,"Hardware Development,Research Concept"
536,Servlet Runtime Error Message Containing Sensitive Information,Variant,Incomplete,A servlet error message indicates that there exists an unhandled exception in your web application code and may provide useful information to an attacker.,,NATURE:ChildOf:CWE ID:211 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Application Data NOTE - The error message may contain the location of the file in which the offending function is located. This may disclose the web root's absolute path as well as give the attacker the location of ap,,,,,,,,Research Concept
673,External Influence of Sphere Definition,Class,Draft,The product does not prevent the definition of control spheres from external actors.,"Typically, a product defines its control sphere within the code itself, or through configuration by the product's administrator. In some cases, an external party can change the definition of the control sphere. This is typically a resultant weakness.",NATURE:ChildOf:CWE ID:664 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Other IMPACT - Other,,,REFERENCE - CVE-2008-2613 DESCRIPTION - setuid program allows compromise using path that finds and loads a malicious library. LINK - https://www.cve.org/CVERecord?id=CVE-2008-2613,,,,"TYPE - Theoretical NOTE - A control sphere is a set of resources and behaviors that are accessible to a single actor, or a group of actors. A product's security model will typically define multiple spheres, possibly implicitly. For example, a server might",Research Concept
48,Path Equivalence: 'file name' (Internal Whitespace),Variant,Incomplete,"The product accepts path input in the form of internal space ('file(SPACE)name') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary file",,NATURE:ChildOf:CWE ID:41 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,,REFERENCE - CVE-2000-0293 DESCRIPTION - Filenames with spaces allow arbitrary file deletion when the product does not properly quote them; some overlap with path traversal. LINK - https://www.cve.org/CVERecord?id=CVE-2000-0293  REFERENCE - CVE-2001-1567 D,,,TAXONOMY NAME - PLOVER:ENTRY NAME:file(SPACE)name (internal space) TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,"TYPE - Relationship NOTE - This weakness is likely to overlap quoting problems, e.g. the Program Files unquoted search path (CWE-428). It also could be an equivalence issue if filtering removes all extraneous spaces.  TYPE - Relationship NOTE - Whitespace",Research Concept
732,Incorrect Permission Assignment for Critical Resource,Class,Draft,The product specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.,"When a resource is given a permission setting that provides access to a wider range of actors than required, it could lead to the exposure of sensitive information, or the modification of that resource by unintended parties. This is especially dangerous w",NATURE:ChildOf:CWE ID:285 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:668 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined TECHNOLOGY CLASS:Cloud Computing TECHNOLOGY PREVALENCE:Often,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. The developer might make certain assumptions about the environment in which the product operates,"SCOPE - Confidentiality IMPACT - Read Application Data IMPACT - Read Files or Directories NOTE - An attacker may be able to read sensitive information from the associated resource, such as credentials or configuration information stored in a file.  SCOPE ","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis may be effective in detecting permission problems for system resources such as files, directories, shared memory, device interfaces, etc. Automated techniques may be able to detect","PHASE - Implementation DESCRIPTION - When using a critical resource such as a configuration file, check to see if the resource has insecure permissions (such as being modifiable by any regular user) [REF-62], and generate an error or even exit the softwar",REFERENCE - CVE-2022-29527 DESCRIPTION - Go application for cloud management creates a world-writable sudoers file that allows local attackers to inject sudo rules and escalate privileges to root by winning a race condition. LINK - https://www.cve.org/CVE,,,TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO03-J:ENTRY NAME:Create files with appropriate access permission TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SEC01-J:ENTRY NAME:Do not al,"TYPE - Maintenance NOTE - The relationships between privileges, permissions, and actors (e.g. users and groups) need further refinement within the Research view. One complication is that these concepts apply to two different pillars, related to control of",Research Concept
444,Inconsistent Interpretation of HTTP Requests ('HTTP Request/Response Smuggling'),Base,Incomplete,"The product acts as an intermediary HTTP agent (such as a proxy or firewall) in the data flow between two entities such as a client and server, but it does not interpret malformed HTTP requests or responses in ways that are consistent with how the message","HTTP requests or responses (messages) can be malformed or unexpected in ways that cause web servers or clients to interpret the messages in different ways than intermediary HTTP agents such as load balancers, reverse proxies, web caching proxies, applicat",NATURE:ChildOf:CWE ID:436 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:436 VIEW ID:1003 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Web Based TECHNOLOGY PREVALENCE:Undetermined,,TERM - HTTP Request Smuggling TERM - HTTP Response Smuggling TERM - HTTP Smuggling::,PHASE - Implementation,SCOPE - Integrity SCOPE - Non-Repudiation SCOPE - Access Control IMPACT - Unexpected State IMPACT - Hide Activities IMPACT - Bypass Protection Mechanism NOTE - An attacker could create HTTP messages to exploit a number of weaknesses including 1) the messa,,"PHASE - Implementation DESCRIPTION - Use a web server that employs a strict HTTP parsing procedure, such as Apache [REF-433].  PHASE - Implementation DESCRIPTION - Use only SSL communication.  PHASE - Implementation DESCRIPTION - Terminate the client sess","REFERENCE - CVE-2022-24766 DESCRIPTION - SSL/TLS-capable proxy allows HTTP smuggling when used in tandem with HTTP/1.0 services, due to inconsistent interpretation and input sanitization of HTTP messages within the body of another message LINK - https://w",,,TAXONOMY NAME - PLOVER:ENTRY NAME:HTTP Request Smuggling TAXONOMY NAME - WASC:ENTRY ID:26:ENTRY NAME:HTTP Request Smuggling TAXONOMY NAME - WASC:ENTRY ID:27:ENTRY NAME:HTTP Response Smuggling::,"TYPE - Theoretical NOTE - Request smuggling can be performed due to a multiple interpretation error, where the target is an intermediary or monitor, via a consistency manipulation (Transfer-Encoding and Content-Length headers).::","Software Development,Research Concept"
41,Improper Resolution of Path Equivalence,Base,Incomplete,The product is vulnerable to file system contents disclosure through path equivalence. Path equivalence involves the use of special characters in file and directory names. The associated manipulations are intended to generate multiple names for the same o,"Path equivalence is usually employed in order to circumvent access controls expressed using an incomplete set of file name or file path representations. This is different from path traversal, wherein the manipulations are performed to generate a name for ",NATURE:ChildOf:CWE ID:706 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Access Control IMPACT - Read Files or Directories IMPACT - Modify Files or Directories IMPACT - Bypass Protection Mechanism NOTE - An attacker may be able to traverse the file system to unintended location,"METHOD - Automated Static Analysis - Binary or Bytecode DESCRIPTION - According to SOAR, the following detection techniques may be useful  Cost effective for partial coverage  Bytecode Weakness Analysis - including disassembler + source code weakness anal","PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n",REFERENCE - CVE-2000-1114 DESCRIPTION - Source code disclosure using trailing dot LINK - https://www.cve.org/CVERecord?id=CVE-2000-1114  REFERENCE - CVE-2002-1986 DESCRIPTION - Source code disclosure using trailing dot LINK - https://www.cve.org/CVERecord,,File or Directory,TAXONOMY NAME - PLOVER:ENTRY NAME:Path Equivalence TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FIO02-C:ENTRY NAME:Canonicalize path names originating from untrusted sources::,"TYPE - Relationship NOTE - Some of these manipulations could be effective in path traversal issues, too.::","Software Development,Research Concept"
577,EJB Bad Practices: Use of Sockets,Variant,Draft,The product violates the Enterprise JavaBeans (EJB) specification by using sockets.,"The Enterprise JavaBeans specification requires that every bean provider follow a set of programming guidelines designed to ensure that the bean will be portable and behave consistently in any EJB container. In this case, the product violates the followin",NATURE:ChildOf:CWE ID:573 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Quality Degradation,,PHASE - Architecture and Design Implementation DESCRIPTION - Do not use Sockets when writing EJBs.,,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP3:ENTRY NAME:Use of an improper API::,,Research Concept
551,Incorrect Behavior Order: Authorization Before Parsing and Canonicalization,Base,Incomplete,"If a web server does not fully parse requested URLs before it examines them for authorization, it may be possible for an attacker to bypass authorization protection.","For instance, the character strings /./ and / both mean current directory. If /SomeDirectory is a protected directory and an attacker requests /./SomeDirectory, the attacker may be able to gain access to the resource if /./ is not converted to / before th",NATURE:ChildOf:CWE ID:863 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:696 VIEW ID:1000,,,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Access Control IMPACT - Bypass Protection Mechanism,,PHASE - Architecture and Design DESCRIPTION - URL Inputs should be decoded and canonicalized to the application's current internal representation before being validated and processed for authorization. Make sure that your application does not decode the s,,,,,,"Software Development,Research Concept"
108,Struts: Unvalidated Action Form,Variant,Incomplete,Every Action Form must have a corresponding validation form.,"If a Struts Action Form Mapping specifies a form, it must have a validation form defined under the Struts Validator.",NATURE:ChildOf:CWE ID:1173 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:20 VIEW ID:700 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Other IMPACT - Other NOTE - If an action form mapping does not have a validation form defined, it may be vulnerable to a number of attacks that rely on unchecked input. Unchecked input is the root cause of some of today's worst and most common sof",,"PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Map every Action Form to a corresponding validation form. An action or a form may perform validation in other ways, but the Struts Validator provides an excellent way to verify that all inpu",,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Struts: Unvalidated Action Form TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,Research Concept
191,Integer Underflow (Wrap or Wraparound),Base,Draft,"The product subtracts one value from another, such that the result is less than the minimum allowable integer value, which produces a value that is not equal to the correct result.",This can happen in signed and unsigned cases.,NATURE:ChildOf:CWE ID:682 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:682 VIEW ID:1003 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C# LANGUAGE PREVALENCE:Undetermined,,"TERM - Integer underflow DESCRIPTION - Integer underflow is sometimes used to identify signedness errors in which an originally positive number becomes negative as a result of subtraction. However, there are cases of bad subtraction in which unsigned inte",PHASE - Implementation,"SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart IMPACT - DoS -  Resource Consumption (CPU) IMPACT - DoS -  Resource Consumption (Memory) IMPACT - DoS -  Instability NOTE - This weakness will generally lead to undefined behavior and therefore ","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,REFERENCE - CVE-2004-0816 DESCRIPTION - Integer underflow in firewall via malformed packet. LINK - https://www.cve.org/CVERecord?id=CVE-2004-0816  REFERENCE - CVE-2004-1002 DESCRIPTION - Integer underflow by packet with invalid length. LINK - https://www.,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Integer underflow (wrap or wraparound) TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP1:ENTRY NAME:Glitch in computation TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:INT30-C:ENTRY NAME:Ensure that unsigned integer o,,"Software Development,Research Concept"
45,Path Equivalence: 'file...name' (Multiple Internal Dot),Variant,Incomplete,"The product accepts path input in the form of multiple internal dot ('file...dir') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary fi",,NATURE:ChildOf:CWE ID:44 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:165 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,,,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Multiple Internal Dot - 'file...dir' TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,TYPE - Relationship NOTE - An improper attempt to remove the internal dots from the string could lead to CWE-181 (Incorrect Behavior Order: Validate Before Filter).::,Research Concept
1177,Use of Prohibited Code,Class,Incomplete,"The product uses a function, library, or third party component that has been explicitly prohibited, whether by the developer or the customer.","The developer - or customers - may wish to restrict or eliminate use of a function, library, or third party component for any number of reasons, including real or suspected vulnerabilities; difficulty to use securely; export controls or license requiremen",NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect: ORDINALITY:Primary::,,,,PHASE - Implementation,SCOPE - Other IMPACT - Reduce Maintainability,,,REFERENCE - CVE-2007-1470 DESCRIPTION - Library has multiple buffer overflows using sprintf() and strcpy() LINK - https://www.cve.org/CVERecord?id=CVE-2007-1470  REFERENCE - CVE-2007-4004 DESCRIPTION - FTP client uses inherently insecure gets() function a,,,,,Research Concept
528,Exposure of Core Dump File to an Unauthorized Control Sphere,Variant,Draft,"The product generates a core dump file in a directory, archive, or other resource that is stored, transferred, or otherwise made accessible to unauthorized actors.",,NATURE:ChildOf:CWE ID:552 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Operation: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.,SCOPE - Confidentiality IMPACT - Read Application Data IMPACT - Read Files or Directories,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - System Configuration DESCRIPTION - Protect the core dump files from unauthorized access.,,,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:MEM06-C:ENTRY NAME:Ensure that sensitive data is not written out to disk::,,Research Concept
82,Improper Neutralization of Script in Attributes of IMG Tags in a Web Page,Variant,Incomplete,"The web application does not neutralize or incorrectly neutralizes scripting elements within attributes of HTML IMG tags, such as the src attribute.","Attackers can embed XSS exploits into the values for IMG attributes (e.g. SRC) that is streamed and then executed in a victim's browser. Note that when the page is loaded into a user's browsers, the exploit will automatically execute.",NATURE:ChildOf:CWE ID:83 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Read Application Data IMPACT - Execute Unauthorized Code or Commands,,"PHASE - Implementation STRATEGY - Output Encoding DESCRIPTION - Use and specify an output encoding that can be handled by the downstream component that is reading the output. Common encodings include ISO-8859-1, UTF-7, and UTF-8. When an encoding is not s",REFERENCE - CVE-2006-3211 DESCRIPTION - Stored XSS in a guestbook application using a javascript: URI in a bbcode img tag. LINK - https://www.cve.org/CVERecord?id=CVE-2006-3211  REFERENCE - CVE-2002-1649 DESCRIPTION - javascript URI scheme in IMG tag. LIN,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Script in IMG tags TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,Research Concept
1066,Missing Serialization Control Element,Base,Incomplete,The product contains a serializable data element that does not have an associated serialization method.,"This issue can prevent the product from running reliably, e.g. by triggering an exception. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability. As examples, the serializable nature of a data elem",NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Reliability,,,,,,TAXONOMY NAME - OMG ASCRM:ENTRY ID:ASCRM-RLB-2::,,"Software Development,Research Concept"
1229,Creation of Emergent Resource,Class,Incomplete,"The product manages resources or behaves in a way that indirectly creates a new, distinct resource that can be used by attackers in violation of the intended policy.","A product is only expected to behave in a way that was specifically intended by the developer. Resource allocation and management is expected to be performed explicitly by the associated code. However, in systems with complex behavior, the product might i",NATURE:ChildOf:CWE ID:664 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined,,,#VALUE!,#VALUE!,,,,,,,,Research Concept
246,J2EE Bad Practices: Direct Use of Sockets,Variant,Draft,The J2EE application directly uses sockets instead of using framework method calls.,The J2EE standard permits the use of sockets only for the purpose of communication with legacy systems when no higher-level protocol is available. Authoring your own communication protocol requires wrestling with difficult security issues. Without signifi,NATURE:ChildOf:CWE ID:695 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Resultant::,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Quality Degradation,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design DESCRIPTION - Use framework method calls instead of using sockets directly.,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:J2EE Bad Practices: Sockets TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP3:ENTRY NAME:Use of an improper API::,,Research Concept
830,Inclusion of Web Functionality from an Untrusted Source,Variant,Incomplete,"The product includes web functionality (such as a web widget) from another domain, which causes it to operate within the domain of the product, potentially granting total access and control of the product to the untrusted source.","Including third party functionality in a web-based environment is risky, especially if the source of the functionality is untrusted. Even if the third party is a trusted source, the product may still be exposed to attacks and malicious behavior if that tr",NATURE:ChildOf:CWE ID:829 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands,,,,,,,,Research Concept
1122,Excessive Halstead Complexity,Base,Incomplete,The code is structured in a way that a Halstead complexity measure exceeds a desirable maximum.,"A variety of Halstead complexity measures exist, such as program vocabulary size or volume. This issue makes it more difficult to understand and/or maintain the product, which indirectly affects security by making it more difficult or time-consuming to fi",NATURE:ChildOf:CWE ID:1120 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,,,"Software Development,Research Concept"
1260,Improper Handling of Overlap Between Protected Memory Ranges,Base,Stable,"The product allows address regions to overlap, which can result in the bypassing of intended memory protection.",Isolated memory regions and access control (read/write) policies are used by hardware to protect privileged software. Software components are often allowed to change or remap memory region definitions in order to enable flexible and dynamically changeable,NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:119 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary: ORDINALITY:Resultant::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY NAME:Memory,,,PHASE - Architecture and Design: NOTE - Such issues could be introduced during hardware architecture and design or implementation and identified later during the Testing phase. PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Modify Memory IMPACT - Read Memory IMPACT - DoS -  Instability LIKELIHOOD - High,"METHOD - Manual Analysis DESCRIPTION - Create a high privilege memory block of any arbitrary size. Attempt to create a lower privilege memory block with an overlap of the high privilege memory block. If the creation attempt works, fix the hardware. Repeat",PHASE - Architecture and Design DESCRIPTION - Ensure that memory regions are isolated as intended and that access control (read/write) policies are used by hardware to protect privileged software.  PHASE - Implementation DESCRIPTION - For all of the progr,REFERENCE - CVE-2008-7096 DESCRIPTION - virtualization product allows compromise of hardware product by accessing certain remapping registers. LINK - https://www.cve.org/CVERecord?id=CVE-2008-7096  REFERENCE - [REF-1100] DESCRIPTION - processor design fla,,,,"TYPE - Maintenance NOTE - As of CWE 4.6, CWE-1260 and CWE-1316 are siblings under view 1000, but CWE-1260 might be a parent of CWE-1316. More analysis is warranted.::","Hardware Development,Research Concept"
835,Loop with Unreachable Exit Condition ('Infinite Loop'),Base,Incomplete,"The product contains an iteration or loop with an exit condition that cannot be reached, i.e., an infinite loop.","If the loop can be influenced by an attacker, this weakness could allow attackers to consume excessive resources such as CPU or memory.",NATURE:ChildOf:CWE ID:834 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:834 VIEW ID:1003 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,#VALUE!,"SCOPE - Availability IMPACT - DoS -  Resource Consumption (CPU) IMPACT - DoS -  Resource Consumption (Memory) IMPACT - DoS -  Amplification NOTE - An infinite loop will cause unexpected consumption of resources, such as CPU cycles or memory. The software'",,,"REFERENCE - CVE-2022-22224 DESCRIPTION - Chain: an operating system does not properly process malformed Open Shortest Path First (OSPF) Type/Length/Value Identifiers (TLV) (CWE-703), which can cause the process to enter an infinite loop (CWE-835) LINK - h",,,TAXONOMY NAME - OMG ASCSM:ENTRY ID:ASCSM-CWE-835::,,"Software Development,Research Concept"
228,Improper Handling of Syntactically Invalid Structure,Class,Incomplete,The product does not handle or incorrectly handles input that is not syntactically well-formed with respect to the associated specification.,,NATURE:ChildOf:CWE ID:703 VIEW ID:1000 NATURE:ChildOf:CWE ID:707 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation,"SCOPE - Integrity SCOPE - Availability IMPACT - Unexpected State IMPACT - DoS -  Crash, Exit, or Restart IMPACT - DoS -  Resource Consumption (CPU) NOTE - If an input is syntactically invalid, then processing the input could place the system in an unexpec","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,REFERENCE - CVE-2004-0270 DESCRIPTION - Anti-virus product has assert error when line length is non-numeric. LINK - https://www.cve.org/CVERecord?id=CVE-2004-0270,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Structure and Validity Problems TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A7:ENTRY NAME:Improper Error Handling:MAPPING FIT:CWE More Specific::,"TYPE - Maintenance NOTE - This entry needs more investigation. Public vulnerability research generally focuses on the manipulations that generate invalid structure, instead of the weaknesses that are exploited by those manipulations. For example, a common",Research Concept
585,Empty Synchronized Block,Variant,Draft,The product contains an empty synchronized block.,An empty synchronized block does not actually accomplish any synchronization and may indicate a troubled section of code. An empty synchronized block can occur because code no longer needed within the synchronized block is commented out without removing t,NATURE:ChildOf:CWE ID:1071 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Other IMPACT - Other NOTE - An empty synchronized block will wait until nobody else is using the synchronizer being specified. While this may be part of the desired behavior, because you haven't protected the subsequent code by placing it inside t","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation DESCRIPTION - When you come across an empty synchronized statement, or a synchronized statement in which the code has been commented out, try to determine what the original intentions were and whether or not the synchronized block i",,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP21:ENTRY NAME:Multiple locks/unlocks::,,Research Concept
824,Access of Uninitialized Pointer,Base,Incomplete,The product accesses or uses a pointer that has not been initialized.,"If the pointer contains an uninitialized value, then the value might not point to a valid memory location. This could cause the product to read from or write to unexpected memory locations, leading to a denial of service. If the uninitialized pointer is u",NATURE:ChildOf:CWE ID:119 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:119 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:119 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:119 VIEW ID:1340 ORDINAL:Primary NATURE:CanPrecede:CWE ID:125 VIEW I,,,,,#VALUE!,"SCOPE - Confidentiality IMPACT - Read Memory NOTE - If the uninitialized pointer is used in a read operation, an attacker might be able to read sensitive portions of memory.  SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart NOTE - If the unini","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,"REFERENCE - CVE-2010-0211 DESCRIPTION - chain: unchecked return value (CWE-252) leads to free of invalid, uninitialized pointer (CWE-824). LINK - https://www.cve.org/CVERecord?id=CVE-2010-0211  REFERENCE - CVE-2009-2768 DESCRIPTION - Pointer in structure",,,,TYPE - Maintenance NOTE - There are close relationships between incorrect pointer dereferences and other weaknesses related to buffer operations. There may not be sufficient community agreement regarding these relationships. Further study is needed to det,"Software Development,Research Concept"
1278,Missing Protection Against Hardware Reverse Engineering Using Integrated Circuit (IC) Imaging Techniques,Base,Incomplete,Information stored in hardware may be recovered by an attacker with the capability to capture and analyze images of the integrated circuit using techniques such as scanning electron microscopy.,"The physical structure of a device, viewed at high enough magnification, can reveal the information stored inside. Typical steps in IC reverse engineering involve removing the chip packaging (decapsulation) then using various imaging techniques ranging fr",NATURE:ChildOf:CWE ID:693 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design,SCOPE - Confidentiality IMPACT - Varies by Context NOTE - A common goal of malicious actors who reverse engineer ICs is to produce and sell counterfeit versions of the IC.,,PHASE - Architecture and Design DESCRIPTION - The cost of secret extraction via IC reverse engineering should outweigh the potential value of the secrets being extracted. Threat model and value of secrets should be used to choose the technology used to sa,,,,,"TYPE - Maintenance NOTE - This entry is still under development and will continue to see updates and content improvements. It is more attack-oriented, so it might be more suited for CAPEC.::","Hardware Development,Research Concept"
488,Exposure of Data Element to Wrong Session,Base,Draft,"The product does not sufficiently enforce boundaries between the states of different sessions, causing data to be provided to, or used by, the wrong session.","Data can bleed from one session to another through member variables of singleton objects, such as Servlets, and objects from a shared pool. In the case of Servlets, developers sometimes do not understand that, unless a Servlet implements the SingleThreadM",NATURE:ChildOf:CWE ID:668 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Confidentiality IMPACT - Read Application Data,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design DESCRIPTION - Protect the application's sessions from information leakage. Make sure that a session's data is not used or visible by other sessions.  PHASE - Testing DESCRIPTION - Use a static analysis tool to scan the code,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Data Leaking Between Users::,,"Software Development,Research Concept"
357,Insufficient UI Warning of Dangerous Operations,Base,Draft,"The user interface provides a warning to a user regarding dangerous or sensitive operations, but the warning is not noticeable enough to warrant attention.",,NATURE:ChildOf:CWE ID:693 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Non-Repudiation IMPACT - Hide Activities,,,REFERENCE - CVE-2007-1099 DESCRIPTION - User not sufficiently warned if host key mismatch occurs LINK - https://www.cve.org/CVERecord?id=CVE-2007-1099,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Insufficient UI warning of dangerous operations::,,"Software Development,Research Concept"
239,Failure to Handle Incomplete Element,Variant,Draft,The product does not properly handle when a particular element is not completely specified.,,NATURE:ChildOf:CWE ID:237 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:404 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity SCOPE - Other IMPACT - Varies by Context IMPACT - Unexpected State,,,REFERENCE - CVE-2002-1532 DESCRIPTION - HTTP GET without rnrn CRLF sequences causes product to wait indefinitely and prevents other users from accessing it. LINK - https://www.cve.org/CVERecord?id=CVE-2002-1532  REFERENCE - CVE-2003-0195 DESCRIPTION - Par,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Incomplete Element::,,Research Concept
693,Protection Mechanism Failure,Pillar,Draft,The product does not use or incorrectly uses a protection mechanism that provides sufficient defense against directed attacks against the product.,"This weakness covers three distinct situations. A missing protection mechanism occurs when the application does not define any mechanism against a certain class of attack. An insufficient protection mechanism might provide some defenses - for example, aga",#VALUE!,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation PHASE - Operation,SCOPE - Access Control IMPACT - Bypass Protection Mechanism,,,,,,,"TYPE - Research Gap NOTE - The concept of protection mechanisms is well established, but protection mechanism failures have not been studied comprehensively. It is suspected that protection mechanisms can have significantly different  TYPEs of weaknesses ",Research Concept
356,Product UI does not Warn User of Unsafe Actions,Base,Incomplete,The product's user interface does not warn the user before undertaking an unsafe action on behalf of that user. This makes it easier for attackers to trick users into inflicting damage to their system.,"Product systems should warn users that a potentially dangerous action may occur if the user proceeds. For example, if the user downloads a file from an unknown source and attempts to execute the file on their machine, then the application's GUI can indica",NATURE:ChildOf:CWE ID:221 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Non-Repudiation IMPACT - Hide Activities,,,REFERENCE - CVE-1999-1055 DESCRIPTION - Product does not warn user when document contains certain dangerous functions or macros. LINK - https://www.cve.org/CVERecord?id=CVE-1999-1055  REFERENCE - CVE-1999-0794 DESCRIPTION - Product does not warn user when,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Product UI does not warn user of unsafe actions::,"TYPE - Relationship NOTE - Often resultant, e.g. in unhandled error conditions.  TYPE - Relationship NOTE - Can overlap privilege errors, conceptually at least.::","Software Development,Research Concept"
707,Improper Neutralization,Pillar,Incomplete,The product does not ensure or incorrectly ensures that structured messages or data are well-formed and that certain security properties are met before being read from an upstream component or sent to a downstream component.,"If a message is malformed, it may cause the message to be incorrectly interpreted. Neutralization is an abstract term for any technique that ensures that input (and output) conforms with expectations and is safe. This can be done by: checking that the inp",#VALUE!,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Other IMPACT - Other,,,,,,,"TYPE - Maintenance NOTE - Concepts such as validation, data transformation, and neutralization are being refined, so relationships between CWE-20 and other entries such as CWE-707 may change in future versions, along with an update to the Vulnerability Th",Research Concept
588,Attempt to Access Child of a Non-structure Pointer,Variant,Incomplete,Casting a non-structure type to a structure type and accessing a field can lead to memory access errors or data corruption.,,NATURE:ChildOf:CWE ID:704 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:758 VIEW ID:1000,,,,,PHASE - Implementation,"SCOPE - Integrity IMPACT - Modify Memory NOTE - Adjacent variables in memory may be corrupted by assignments performed on fields after the cast.  SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart NOTE - Execution may end due to a memory access ",,PHASE - Requirements DESCRIPTION - The choice could be made to use a language that is not susceptible to these issues.  PHASE - Implementation DESCRIPTION - Review of type casting operations can identify locations where incompatible types are cast.,REFERENCE - CVE-2021-3510 DESCRIPTION - JSON decoder accesses a C union using an invalid offset to an object LINK - https://www.cve.org/CVERecord?id=CVE-2021-3510,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP7:ENTRY NAME:Faulty Pointer Use::,,Research Concept
696,Incorrect Behavior Order,Class,Incomplete,"The product performs multiple related behaviors, but the behaviors are performed in the wrong order in ways which may produce resultant weaknesses.",,NATURE:ChildOf:CWE ID:691 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Integrity IMPACT - Alter Execution Logic,,,"REFERENCE - CVE-2019-9805 DESCRIPTION - Chain: Creation of the packet client occurs before initialization is complete (CWE-696) resulting in a read from uninitialized memory (CWE-908), causing memory corruption. LINK - https://www.cve.org/CVERecord?id=CVE",,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:POS36-C:ENTRY NAME:Observe correct revocation order while relinquishing privileges:MAPPING FIT:CWE More Abstract::,,Research Concept
1249,Application-Level Admin Tool with Inconsistent View of Underlying Operating System,Base,Incomplete,"The product provides an application for administrators to manage parts of the underlying operating system, but the application does not accurately identify all of the relevant entities or resources that exist in the OS; that is, the application's model of","Many products provide web-based applications or other interfaces for managing the underlying operating system. This is common with cloud, network access devices, home networking, and other systems. When the management tool does not accurately represent wh",NATURE:ChildOf:CWE ID:1250 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined TECHNOLOGY CLASS:Web Based TECHNOLOGY PREVALENCE:Undetermined,,TERM - Ghost in the Shell::,PHASE - Architecture and Design: NOTE - The design might assume that the underlying OS does not change. PHASE - Implementation: NOTE - Assumptions about the underlying OS might be hard-coded into the application or otherwise in external data stores in a w,SCOPE - Access Control IMPACT - Varies by Context  SCOPE - Accountability IMPACT - Hide Activities  SCOPE - Other IMPACT - Unexpected State,,"PHASE - Architecture and Design DESCRIPTION - Ensure that the admin tool refreshes its model of the underlying OS on a regular basis, and note any inconsistencies with configuration files or other data sources that are expected to have the same data.",,,,,,Research Concept
1223,Race Condition for Write-Once Attributes,Base,Incomplete,"A write-once register in hardware design is programmable by an untrusted software component earlier than the trusted software component, resulting in a race condition issue.",Integrated circuits and hardware IP software programmable controls and settings are commonly stored in register circuits. These register contents have to be initialized at hardware reset to defined default values that are hard coded in the hardware descri,NATURE:ChildOf:CWE ID:362 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Verilog LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:VHDL LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:System on Chip TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - This weakness can appear in designs that use register write-once attributes with two or more software/firmware modules with varying levels of trust executing in parallel.,SCOPE - Access Control IMPACT - Bypass Protection Mechanism NOTE - System configuration cannot be programmed in a secure way.,,PHASE - Architecture and Design DESCRIPTION - During hardware design all register write-once or sticky fields must be evaluated for proper configuration.  PHASE - Testing DESCRIPTION - The testing  PHASE should use automated tools to test that values are ,,,,,,"Hardware Development,Research Concept"
157,Failure to Sanitize Paired Delimiters,Variant,Draft,"The product does not properly handle the characters that are used to mark the beginning and ending of a group of entities, such as parentheses, brackets, and braces.",Paired delimiters might include: < and > angle brackets ( and ) parentheses { and } braces [ and ] square brackets double quotes ' ' single quotes,NATURE:ChildOf:CWE ID:138 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,"PHASE - DESCRIPTION - Developers should anticipate that grouping elements will be injected/removed/manipulated in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appropriate",REFERENCE - CVE-2004-0956 DESCRIPTION - Crash via missing paired delimiter (open double-quote but no closing double-quote). LINK - https://www.cve.org/CVERecord?id=CVE-2004-0956  REFERENCE - CVE-2000-1165 DESCRIPTION - Crash via message without closing >.,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Grouping Element / Paired Delimiter TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,TYPE - Research Gap NOTE - Under-studied.::,Research Concept
1222,Insufficient Granularity of Address Regions Protected by Register Locks,Variant,Incomplete,The product defines a large address region protected from modification by the same register lock control bit. This results in a conflict between the functional requirement that some addresses need to be writable by software during operation and the securi,Integrated circuits and hardware IPs can expose the device configuration controls that need to be programmed after device power reset by a trusted firmware or software module (commonly set by BIOS/bootloader) and then locked from any further modification.,NATURE:ChildOf:CWE ID:1220 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:System,,,PHASE - Architecture and Design: NOTE - Such issues are introduced during hardware architecture and design since software controls and configuration are defined during these phases and identified later during Testing or System Configuration phases.,SCOPE - Access Control IMPACT - Other NOTE - System security configuration cannot be defined in a way that does not conflict with functional requirements of device.,,PHASE - Architecture and Design DESCRIPTION - The defining of protected locked registers should be reviewed or tested early in the design  PHASE with software teams to ensure software flows are not blocked by the security locks. As an alternative to using,,,,,,"Hardware Development,Research Concept"
115,Misinterpretation of Input,Base,Incomplete,"The product misinterprets an input, whether from an attacker or another product, in a security-relevant fashion.",,NATURE:ChildOf:CWE ID:436 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,"METHOD - Fuzzing DESCRIPTION - Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often c",,"REFERENCE - CVE-2005-2225 DESCRIPTION - Product sees dangerous file extension in free text of a group discussion, disconnects all users. LINK - https://www.cve.org/CVERecord?id=CVE-2005-2225  REFERENCE - CVE-2001-0003 DESCRIPTION - Product does not correc",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Misinterpretation Error::,"TYPE - Research Gap NOTE - This concept needs further study. It is likely a factor in several weaknesses, possibly resultant as well. Overlaps Multiple Interpretation Errors (MIE).::","Software Development,Research Concept"
334,Small Space of Random Values,Base,Draft,"The number of possible random values is smaller than needed by the product, making it more susceptible to brute force attacks.",,NATURE:ChildOf:CWE ID:330 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Access Control SCOPE - Other IMPACT - Bypass Protection Mechanism IMPACT - Other NOTE - An attacker could easily guess the values used. This could lead to unauthorized access to a system if the seed is used for authentication and authorization.,,PHASE - Architecture and Design Requirements STRATEGY - Libraries or Frameworks DESCRIPTION - Use products or modules that conform to FIPS 140-2 [REF-267] to avoid obvious entropy problems. Consult FIPS 140-2 Annex C (Approved Random Number Generators).,"REFERENCE - CVE-2002-0583 DESCRIPTION - Product uses 5 alphanumeric characters for filenames of expense claim reports, stored under web root. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0583  REFERENCE - CVE-2002-0903 DESCRIPTION - Product uses small",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Small Space of Random Values::,"TYPE - Maintenance NOTE - As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, randomness is used heavily. However, within cryptography, entropy is distinct, typically i","Software Development,Research Concept"
1235,Incorrect Use of Autoboxing and Unboxing for Performance Critical Operations,Base,Incomplete,"The code uses boxed primitives, which may introduce inefficiencies into performance-critical operations.","Languages such as Java and C# support automatic conversion through their respective compilers from primitive types into objects of the corresponding wrapper classes, and vice versa. For example, a compiler might convert an int to Integer (called autoboxin",NATURE:ChildOf:CWE ID:400 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C# LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Unde,,,PHASE - Implementation: NOTE - The programmer may use boxed primitives when not strictly necessary.,SCOPE - Availability IMPACT - DoS -  Resource Consumption (CPU) IMPACT - DoS -  Resource Consumption (Memory) IMPACT - DoS -  Resource Consumption (Other) IMPACT - Reduce Performance LIKELIHOOD - Low NOTE - Incorrect autoboxing/unboxing would result in re,,PHASE - Implementation DESCRIPTION - Use of boxed primitives should be limited to certain situations such as when calling methods with typed parameters. Examine the use of boxed primitives prior to use. Use SparseArrays or ArrayMap instead of HashMap to a,,,,TAXONOMY NAME - SEI CERT Oracle Coding Standard for Java:ENTRY ID:EXP04-J:ENTRY NAME:Do not pass arguments to certain Java Collections Framework methods that are a different type than the collection parameter type TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Pa,,"Software Development,Research Concept"
1389,Incorrect Parsing of Numbers with Different Radices,Base,Incomplete,"The product parses numeric input assuming base 10 (decimal) values, but it does not account for inputs that use a different base number (radix).","Frequently, a numeric input that begins with 0 is treated as octal, or 0x causes it to be treated as hexadecimal, e.g. by the inet_addr() function. For example, 023 (octal) is 35 decimal, or 0x31 is 49 decimal. Other bases may be used as well. If the deve",NATURE:ChildOf:CWE ID:704 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined,,,"PHASE - Implementation: NOTE - Input validation used may assume decimal bases during conditional checks, when it may not always be the case. PHASE - Implementation: NOTE - The application may rely on a service that supports different numerical bases.",SCOPE - Confidentiality IMPACT - Read Application Data LIKELIHOOD - Unknown NOTE - An attacker may use an unexpected numerical base to access private application resources.  SCOPE - Integrity IMPACT - Bypass Protection Mechanism IMPACT - Alter Execution L,,"PHASE - Implementation STRATEGY - Enforcement by Conversion DESCRIPTION - If only decimal-based values are expected in the application, conditional checks should be created in a way that prevent octal or hexadecimal strings from being checked. This can be",REFERENCE - CVE-2021-29662 DESCRIPTION - Chain: Use of zero-prepended IP addresses in Perl-based IP validation module can lead to an access control bypass. LINK - https://www.cve.org/CVERecord?id=CVE-2021-29662  REFERENCE - CVE-2021-28918 DESCRIPTION - Ch,,,,,"Software Development,Research Concept"
1063,Creation of Class Instance within a Static Code Block,Base,Incomplete,A static code block creates an instance of a class.,This pattern identifies situations where a storable data element or member data element is initialized with a value in a block of code which is declared as static. This issue can make the product perform more slowly by performing initialization before it ,NATURE:ChildOf:CWE ID:1176 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Performance,,,,,,TAXONOMY NAME - OMG ASCPEM:ENTRY ID:ASCPEM-PRF-1::,,"Software Development,Research Concept"
1024,Comparison of Incompatible Types,Base,Incomplete,"The product performs a comparison between two entities, but the entities are of different, incompatible types that cannot be guaranteed to provide correct results when they are directly compared.","In languages that are strictly typed but support casting/conversion, such as C or C++, the programmer might assume that casting one entity to the same type as another entity will ensure that the comparison will be performed correctly, but this cannot be g",NATURE:ChildOf:CWE ID:697 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE NAME:JavaScript LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:PHP LANGUAGE PREVALENCE:Undetermined LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Varies by Context,,PHASE - Testing DESCRIPTION - Thoroughly test the comparison scheme before deploying code into production. Perform positive testing as well as negative testing.,,,,,,"Software Development,Research Concept"
1245,Improper Finite State Machines (FSMs) in Hardware Logic,Base,Incomplete,"Faulty finite state machines (FSMs) in the hardware logic allow an attacker to put the system in an undefined state, to cause a denial of service (DoS) or gain privileges on the victim's system.",The functionality and security of the system heavily depend on the implementation of FSMs. FSMs can be used to indicate the current security state of the system. Lots of secure data operations and data transfers rely on the state reported by the FSM. Faul,NATURE:ChildOf:CWE ID:684 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:System,,,PHASE - Architecture and Design PHASE - Implementation,"SCOPE - Availability SCOPE - Access Control IMPACT - Unexpected State IMPACT - DoS -  Crash, Exit, or Restart IMPACT - DoS -  Instability IMPACT - Gain Privileges or Assume Identity",,PHASE - Architecture and Design Implementation DESCRIPTION - Define all possible states and handle all unused states through default statements. Ensure that system defaults to a secure state. EFFECTIVENESS High,,,,,,"Hardware Development,Research Concept"
706,Use of Incorrectly-Resolved Name or Reference,Class,Incomplete,"The product uses a name or reference to access a resource, but the name/reference resolves to a resource that is outside of the intended control sphere.",,NATURE:ChildOf:CWE ID:664 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:99 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Application Data IMPACT - Modify Application Data,,,,,,,,Research Concept
823,Use of Out-of-range Pointer Offset,Base,Incomplete,"The product performs pointer arithmetic on a valid pointer, but it uses an offset that can point outside of the intended range of valid memory locations for the resulting pointer.","While a pointer can contain a reference to any arbitrary memory location, a program typically only intends to use the pointer to access limited portions of memory, such as contiguous memory used to access an individual array. Programs may use offsets in o",NATURE:ChildOf:CWE ID:119 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:119 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:119 VIEW ID:1340 ORDINAL:Primary NATURE:CanPrecede:CWE ID:125 VIEW ID:1000 NATURE:CanPrecede:CWE ID:787 VIEW ID:1000,,,,"TERM - Untrusted pointer offset DESCRIPTION - This term is narrower than the concept of out-of-range offset, since the offset might be the result of a calculation or other error that does not depend on any externally-supplied values.::",#VALUE!,"SCOPE - Confidentiality IMPACT - Read Memory NOTE - If the untrusted pointer is used in a read operation, an attacker might be able to read sensitive portions of memory.  SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart NOTE - If the untrusted","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,REFERENCE - CVE-2010-2160 DESCRIPTION - Invalid offset in undocumented opcode leads to memory corruption. LINK - https://www.cve.org/CVERecord?id=CVE-2010-2160  REFERENCE - CVE-2010-1281 DESCRIPTION - Multimedia player uses untrusted value from a file whe,,,,TYPE - Maintenance NOTE - There are close relationships between incorrect pointer dereferences and other weaknesses related to buffer operations. There may not be sufficient community agreement regarding these relationships. Further study is needed to det,"Software Development,Research Concept"
283,Unverified Ownership,Base,Draft,The product does not properly verify that a critical resource is owned by the proper entity.,,NATURE:ChildOf:CWE ID:282 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - An attacker could gain unauthorized access to system resources.,,"PHASE - Architecture and Design Operation DESCRIPTION - Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software.  PHASE - Architecture and Design STRATEGY - Separation of Privilege DESCRIPTI",REFERENCE - CVE-2001-0178 DESCRIPTION - Program does not verify the owner of a UNIX socket that is used for sending a password. LINK - https://www.cve.org/CVERecord?id=CVE-2001-0178  REFERENCE - CVE-2004-2012 DESCRIPTION - Owner of special device not chec,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Unverified Ownership::,"TYPE - Relationship NOTE - This overlaps insufficient comparison, verification errors, permissions, and privileges.::","Software Development,Research Concept"
1087,Class with Virtual Method without a Virtual Destructor,Base,Incomplete,"A class contains a virtual method, but the method does not have an associated virtual destructor.","This issue can prevent the product from running reliably, e.g. due to undefined behavior. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.",NATURE:ChildOf:CWE ID:1076 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Reliability,,,,,,TAXONOMY NAME - OMG ASCRM:ENTRY ID:ASCRM-RLB-15::,,"Software Development,Research Concept"
422,Unprotected Windows Messaging Channel ('Shatter'),Variant,Draft,"The product does not properly verify the source of a message in the Windows Messaging System while running at elevated privileges, creating an alternate channel through which an attacker can directly send a message to the product.",,NATURE:ChildOf:CWE ID:420 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:360 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity IMPACT - Bypass Protection Mechanism,,PHASE - Architecture and Design DESCRIPTION - Always verify and authenticate the source of the message.,REFERENCE - CVE-2002-0971 DESCRIPTION - Bypass GUI and access restricted dialog box. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0971  REFERENCE - CVE-2002-1230 DESCRIPTION - Gain privileges via Windows message. LINK - https://www.cve.org/CVERecord?i,,System Process,TAXONOMY NAME - PLOVER:ENTRY NAME:Unprotected Windows Messaging Channel ('Shatter') TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP30:ENTRY NAME:Missing endpoint authentication::,"TYPE - Relationship NOTE - Overlaps privilege errors and UI errors.  TYPE - Research Gap NOTE - Possibly under-reported, probably under-studied. It is suspected that a number of publicized vulnerabilities that involve local privilege escalation on Windows",Research Concept
151,Improper Neutralization of Comment Delimiters,Variant,Draft,"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as comment delimiters when they are sent to a downstream component.",,NATURE:ChildOf:CWE ID:138 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,"PHASE - DESCRIPTION - Developers should anticipate that comments will be injected/removed/manipulated in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appropriate input is",REFERENCE - CVE-2002-0001 DESCRIPTION - Mail client command execution due to improperly terminated comment in address list. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0001  REFERENCE - CVE-2004-0162 DESCRIPTION - MIE. RFC822 comment fields may be pr,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Comment Element TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,Research Concept
595,Comparison of Object References Instead of Object Contents,Variant,Incomplete,"The product compares object references instead of the contents of the objects themselves, preventing it from detecting equivalent objects.","For example, in Java, comparing objects using == usually produces deceptive results, since the == operator compares object references rather than values; often, this means that using == for strings is actually comparing the strings' references, not their ",NATURE:ChildOf:CWE ID:1025 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:JavaScript LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:PHP LANGUAGE PREVALENCE:Undetermined LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Varies by Context NOTE - This weakness can lead to erroneous results that can cause unexpected application behaviors.,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation DESCRIPTION - In Java, use the equals() method to compare objects instead of the == operator. If using ==, it is important for performance reasons that your objects are created by a static factory, not by a constructor.",,,,TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:EXP02-J:ENTRY NAME:Use the two-argument Arrays.equals() method to compare the contents of arrays TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY I,,Research Concept
72,Improper Handling of Apple HFS+ Alternate Data Stream Path,Variant,Incomplete,The product does not properly handle special paths that may identify the data or resource fork of a file on the HFS+ file system.,"If the product chooses actions to take based on the file name, then if an attacker provides the data or resource fork, the product may take unexpected actions. Further, if the product intends to restrict access to a file, then an attacker might still be a",NATURE:ChildOf:CWE ID:66 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:macOS OPERATING SYSTEM PREVALENCE:Undetermined,"The Apple HFS+ file system permits files to have multiple data input streams, accessible through special paths. The Mac OS X operating system provides a way to access the different data input streams through special paths and as an extended attribute: - R",,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,,REFERENCE - CVE-2004-1084 DESCRIPTION - Server allows remote attackers to read files and resource fork content via HTTP requests to certain special file names related to multiple data streams in HFS+. LINK - https://www.cve.org/CVERecord?id=CVE-2004-1084,,,,TYPE - Theoretical NOTE - This and similar problems exist because the same resource can have multiple identifiers that dictate which behavior can be performed on the resource.  TYPE - Research Gap NOTE - Under-studied::,Research Concept
531,Inclusion of Sensitive Information in Test Code,Variant,Incomplete,"Accessible test applications can pose a variety of security risks. Since developers or administrators rarely consider that someone besides themselves would even know about the existence of these applications, it is common for them to contain sensitive inf",,NATURE:ChildOf:CWE ID:540 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Testing,SCOPE - Confidentiality IMPACT - Read Application Data,,PHASE - Distribution Installation DESCRIPTION - Remove test code before deploying the application into production.,,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP28:ENTRY NAME:Unexpected access points::,,Research Concept
385,Covert Timing Channel,Base,Incomplete,"Covert timing channels convey information by modulating some aspect of system behavior over time, so that the program receiving the information can observe system behavior and infer protected information.","In some instances, knowing when data is transmitted between parties can provide a malicious user with privileged information. Also, externally monitoring the timing of operations can potentially reveal sensitive data. For example, a cryptographic operatio",NATURE:ChildOf:CWE ID:514 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality SCOPE - Other IMPACT - Read Application Data IMPACT - Other NOTE - Information exposure.,,"PHASE - Architecture and Design DESCRIPTION - Whenever possible, specify implementation strategies that do not introduce time variances in operations.  PHASE - Implementation DESCRIPTION - Often one can artificially manipulate the time which operations ta",,,,TAXONOMY NAME - Landwehr:ENTRY NAME:Timing TAXONOMY NAME - CLASP:ENTRY NAME:Covert Timing Channel::,"TYPE - Maintenance NOTE - As of CWE 4.9, members of the CWE Hardware SIG are working to improve CWE's coverage of transient execution weaknesses, which include issues related to Spectre, Meltdown, and other attacks that create or exploit covert channels. ","Software Development,Research Concept"
1297,Unprotected Confidential Information on Device is Accessible by OSAT Vendors,Base,Incomplete,The product does not adequately protect confidential information on the device from being accessed by Outsourced Semiconductor Assembly and Test (OSAT) vendors.,"In contrast to complete vertical integration of architecting, designing, manufacturing, assembling, and testing chips all within a single organization, an organization can choose to simply architect and design a chip before outsourcing the rest of the pro",NATURE:ChildOf:CWE ID:285 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Verilog LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:VHDL LANGUAGE PREVALENCE:Undetermined LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermine,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Access Control SCOPE - Authentication SCOPE - Authorization SCOPE - Availability SCOPE - Accountability SCOPE - Non-Repudiation IMPACT - Gain Privileges or Assume Identity IMPACT - Bypass Protection Mechan,METHOD - Architecture or Design Review DESCRIPTION - Appropriate Post-Si tests should be carried out to ensure that residual confidential information is not left on parts leaving one facility for another facility. EFFECTIVENESS - High  METHOD - Dynamic An,"PHASE - Architecture and Design DESCRIPTION - Ensure that when an OSAT vendor is allowed to access test interfaces necessary for preproduction and returned parts, the vendor only pulls the minimal information necessary. Also, architect the product in such",,,,,TYPE - Maintenance NOTE - This entry might be subject to CWE Scope Exclusion SCOPE.SITUATIONS (Focus on situations in which weaknesses may appear); SCOPE.HUMANPROC (Human/organizational process; and/or SCOPE.CUSTREL (Not customer-relevant).  TYPE - Mainte,"Hardware Development,Research Concept"
1072,Data Resource Access without Use of Connection Pooling,Base,Incomplete,The product accesses a data resource through a database without using a connection pooling capability.,"This issue can make the product perform more slowly, as connection pools allow connections to be reused without the overhead and time consumption of opening and closing a new connection. If the relevant code is reachable by an attacker, then this performa",NATURE:ChildOf:CWE ID:405 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Performance,,,,,,TAXONOMY NAME - OMG ASCPEM:ENTRY ID:ASCPEM-PRF-13::,,"Software Development,Research Concept"
98,Improper Control of Filename for Include/Require Statement in PHP Program ('PHP Remote File Inclusion'),Variant,Draft,"The PHP application receives input from an upstream component, but it does not restrict or incorrectly restricts the input before its usage in require, include, or similar functions.","In certain versions and configurations of PHP, this can allow an attacker to specify a URL to a remote location from which the product will obtain the code to execute. In other cases in association with path traversal, the attacker can specify a local fil",NATURE:ChildOf:CWE ID:706 VIEW ID:1000 NATURE:ChildOf:CWE ID:829 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:94 VIEW ID:1000 NATURE:CanAlsoBe:CWE ID:426 VIEW ID:1000,,LANGUAGE NAME:PHP LANGUAGE PREVALENCE:Often,,"TERM - Remote file include TERM - RFI DESCRIPTION - The Remote File Inclusion (RFI) acronym is often used by vulnerability researchers. TERM - Local file inclusion DESCRIPTION - This term is frequently used in cases in which remote download is disabled, o",PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,"SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands NOTE - The attacker may be able to specify arbitrary code to be executed from a remote location. Alternatively, it may be possible to use normal ","METHOD - Manual Analysis DESCRIPTION - Manual white-box analysis can be very effective for finding this issue, since there is typically a relatively small number of include or require statements in each program. EFFECTIVENESS - High  METHOD - Automated St",PHASE - Architecture and Design STRATEGY - Libraries or Frameworks DESCRIPTION - Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.  PHASE - Architecture and Design ,REFERENCE - CVE-2004-0285 DESCRIPTION - Modification of assumed-immutable configuration variable in include file allows file inclusion via direct request. LINK - https://www.cve.org/CVERecord?id=CVE-2004-0285  REFERENCE - CVE-2004-0030 DESCRIPTION - Modif,,File or Directory,TAXONOMY NAME - PLOVER:ENTRY NAME:PHP File Include TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A3:ENTRY NAME:Malicious File Execution:MAPPING FIT:CWE More Specific TAXONOMY NAME - WASC:ENTRY ID:5:ENTRY NAME:Remote File Inclusion::,"TYPE - Relationship NOTE - This is frequently a functional consequence of other weaknesses. It is usually multi-factor with other factors (e.g. MAID), although not all inclusion bugs involve assumed-immutable data. Direct request weaknesses frequently pla",Research Concept
1057,Data Access Operations Outside of Expected Data Manager Component,Base,Incomplete,"The product uses a dedicated, central data manager component as required by design, but it contains code that performs data-access operations that do not use this data manager.","This issue can make the product perform more slowly than intended, since the intended central data manager may have been explicitly optimized for performance or other quality characteristics. If the relevant code is reachable by an attacker, then this per",NATURE:ChildOf:CWE ID:1061 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Performance,,,,,,TAXONOMY NAME - OMG ASCPEM:ENTRY ID:ASCPEM-PRF-11::,,"Software Development,Research Concept"
61,UNIX Symbolic Link (Symlink) Following,Compound,Incomplete,"The product, when opening a file or directory, does not sufficiently account for when the file is a symbolic link that resolves to a target outside of the intended control sphere. This could allow an attacker to cause the product to operate on unauthorize",A product that allows UNIX symbolic links (symlink) as part of paths whether in internal code or through user input can allow an attacker to spoof the symbolic link and traverse the file system to unintended locations or access arbitrary files. The symbol,NATURE:ChildOf:CWE ID:59 VIEW ID:1000 ORDINAL:Primary NATURE:Requires:CWE ID:362 VIEW ID:1000 NATURE:Requires:CWE ID:340 VIEW ID:1000 NATURE:Requires:CWE ID:386 VIEW ID:1000 NATURE:Requires:CWE ID:732 VIEW ID:1000,: ORDINALITY:Resultant::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,TERM - Symlink following TERM - symlink vulnerability::,PHASE - Implementation: NOTE - These are typically reported for temporary files or privileged programs.,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,PHASE - Implementation DESCRIPTION - Symbolic link attacks often occur when a program creates a tmp directory that stores files/links. Access to the directory should be restricted to the program as to prevent attackers from manipulating the files.  PHASE ,"REFERENCE - CVE-1999-1386 DESCRIPTION - Some versions of Perl follow symbolic links when running with the -e option, which allows local users to overwrite arbitrary files via a symlink attack. LINK - https://www.cve.org/CVERecord?id=CVE-1999-1386  REFEREN",,,TAXONOMY NAME - PLOVER:ENTRY NAME:UNIX symbolic link following::,"TYPE - Research Gap NOTE - Symlink vulnerabilities are regularly found in C and shell programs, but all programming languages can have this problem. Even shell programs are probably under-reported. Second-order symlink vulnerabilities may exist in program",Research Concept
1100,Insufficient Isolation of System-Dependent Functions,Base,Incomplete,The product or code does not isolate system-dependent functionality into separate standalone modules.,"This issue makes it more difficult to maintain and/or port the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",NATURE:ChildOf:CWE ID:1061 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,,,"Software Development,Research Concept"
1330,Remanent Data Readable after Memory Erase,Variant,Draft,Confidential information stored in memory circuits is readable or recoverable after being cleared or erased.,"Data remanence occurs when stored, memory content is not fully lost after a memory-clear or -erase operation. Confidential memory contents can still be readable through data remanence in the hardware. Data remanence can occur because of performance optimi",NATURE:ChildOf:CWE ID:1301 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:1301 VIEW ID:1194 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY NAME:Securit,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality IMPACT - Modify Memory IMPACT - Read Memory NOTE - Confidential data are readable to untrusted agent.,"METHOD - Architecture or Design Review DESCRIPTION - Testing of memory-device contents after clearing or erase commands. Dynamic analysis of memory contents during device operation to detect specific, confidential assets. Architecture and design analysis ","PHASE - Architecture and Design DESCRIPTION - Support for secure-erase commands that apply multiple cycles of overwriting memory with known patterns and of erasing actual content. Support for cryptographic erase in self-encrypting, memory devices. Externa",REFERENCE - CVE-2019-8575 DESCRIPTION - Firmware Data Deletion Vulnerability in which a base station factory reset might not delete all user information. The impact of this enables a new owner of a used device that has been factory-default reset with a vu,,,,,"Hardware Development,Research Concept"
610,Externally Controlled Reference to a Resource in Another Sphere,Class,Draft,The product uses an externally controlled name or reference that resolves to a resource that is outside of the intended control sphere.,,NATURE:ChildOf:CWE ID:664 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Application Data IMPACT - Modify Application Data,,,REFERENCE - CVE-2022-3032 DESCRIPTION - An email client does not block loading of remote objects in a nested document. LINK - https://www.cve.org/CVERecord?id=CVE-2022-3032  REFERENCE - CVE-2022-45918 DESCRIPTION - Chain: a learning management tool debugg,,,,"TYPE - Relationship NOTE - This is a general class of weakness, but most research is focused on more specialized cases, such as path traversal (CWE-22) and symlink following (CWE-61). A symbolic link has a name; in general, it appears like any other file ",Research Concept
1263,Improper Physical Access Control,Class,Incomplete,"The product is designed with access restricted to certain information, but it does not sufficiently protect against an unauthorized actor with physical access to these areas.",Sections of a product intended to have restricted access may be inadvertently or intentionally rendered accessible when the implemented physical protections are insufficient. The specific requirements around how robust the design of the physical protectio,NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:1191 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design: NOTE - This weakness can arise if design decisions are made that do not align with the intended physical protection of the product PHASE - Manufacturing: NOTE - While the architecture and design phase of the product may ha,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Access Control IMPACT - Varies by Context,,PHASE - Architecture and Design DESCRIPTION - Specific protection requirements depend strongly on contextual factors including the level of acceptable risk associated with compromise to the product's protection mechanism. Designers could incorporate anti-,,,,,TYPE - Maintenance NOTE - This entry is still under development and will continue to see updates and content improvements.::,"Hardware Development,Research Concept"
336,Same Seed in Pseudo-Random Number Generator (PRNG),Variant,Draft,A Pseudo-Random Number Generator (PRNG) uses the same seed each time the product is initialized.,"Given the deterministic nature of PRNGs, using the same seed for each initialization will lead to the same output in the same order. If an attacker can guess (or knows) the seed, then the attacker may be able to determine the random numbers that will be p",NATURE:ChildOf:CWE ID:335 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Other -  SCOPE - Access Control IMPACT - Other IMPACT - Bypass Protection Mechanism,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Architecture and Design DESCRIPTION - Do not reuse PRNG seeds. Consider a PRNG that periodically re-seeds itself as needed from a high quality pseudo-random output, such as hardware devices.  PHASE - Architecture and Design Requirements STRATEGY -","REFERENCE - CVE-2022-39218 DESCRIPTION - SDK for JavaScript app builder for serverless code uses the same fixed seed for a PRNG, allowing cryptography bypass LINK - https://www.cve.org/CVERecord?id=CVE-2022-39218",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Same Seed in PRNG TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MSC02-J:ENTRY NAME:Generate strong random numbers::,"TYPE - Maintenance NOTE - As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, randomness is used heavily. However, within cryptography, entropy is distinct, typically i",Research Concept
180,Incorrect Behavior Order: Validate Before Canonicalize,Variant,Draft,"The product validates input before it is canonicalized, which prevents the product from detecting data that becomes invalid after the canonicalization step.","This can be used by an attacker to bypass the validation and launch attacks that expose weaknesses that would otherwise be prevented, such as injection.",NATURE:ChildOf:CWE ID:179 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Access Control IMPACT - Bypass Protection Mechanism,,PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same inpu,REFERENCE - CVE-2002-0433 DESCRIPTION - Product allows remote attackers to view restricted files via an HTTP request containing a * (wildcard or asterisk) character. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0433  REFERENCE - CVE-2003-0332 DESCRIPT,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Validate-Before-Canonicalize TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A1:ENTRY NAME:Unvalidated Input:MAPPING FIT:CWE More Specific TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS01-,TYPE - Relationship NOTE - This overlaps other categories.::,Research Concept
1250,Improper Preservation of Consistency Between Independent Representations of Shared State,Base,Incomplete,The product has or supports multiple distributed components or sub-systems that are each required to keep their own local copy of shared data - such as state or cache - but the product does not ensure that all local copies remain consistent with each othe,"In highly distributed environments, or on systems with distinct physical components that operate independently, there is often a need for each component to store and update its own local copy of key data such as state or cache, so that all components have",NATURE:ChildOf:CWE ID:664 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Cloud,,,#VALUE!,#VALUE!,,,,,,,"TYPE - Research Gap NOTE - Issues related to state and cache - creation, preservation, and update - are a significant gap in CWE that is expected to be addressed in future versions. It likely has relationships to concurrency and synchronization, incorrect","Hardware Development,Research Concept"
305,Authentication Bypass by Primary Weakness,Base,Draft,"The authentication algorithm is sound, but the implemented mechanism can be bypassed as the result of a separate weakness that is primary to the authentication error.",,NATURE:ChildOf:CWE ID:1390 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Access Control IMPACT - Bypass Protection Mechanism,,,REFERENCE - CVE-2002-1374 DESCRIPTION - The provided password is only compared against the first character of the real password. LINK - https://www.cve.org/CVERecord?id=CVE-2002-1374  REFERENCE - CVE-2000-0979 DESCRIPTION - The password is not properly ch,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Authentication Bypass by Primary Weakness::,"TYPE - Relationship NOTE - Most authentication bypass errors are resultant, not primary.::","Software Development,Research Concept"
666,Operation on Resource in Wrong Phase of Lifetime,Class,Draft,"The product performs an operation on a resource at the wrong phase of the resource's lifecycle, which can lead to unexpected behaviors.","A resource's lifecycle includes several phases: initialization, use, and release. For each phase, it is important to follow the specifications outlined for how to operate on the resource and to ensure that the resource is in the expected phase. Otherwise,",NATURE:ChildOf:CWE ID:664 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation,SCOPE - Other IMPACT - Other,,PHASE - Architecture and Design DESCRIPTION - Follow the resource's lifecycle from creation to release.,"REFERENCE - CVE-2006-5051 DESCRIPTION - Chain: Signal handler contains too much functionality (CWE-828), introducing a race condition (CWE-362) that leads to a double free (CWE-415). LINK - https://www.cve.org/CVERecord?id=CVE-2006-5051",,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FIO46-C:ENTRY NAME:Do not access a closed file:MAPPING FIT:CWE More Abstract TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:MEM30-C:ENTRY NAME:Do not access freed memory:MAPPING FIT:CWE More Abstract::,,Research Concept
1097,Persistent Storable Data Element without Associated Comparison Control Element,Base,Incomplete,The product uses a storable data element that does not have all of the associated functions or methods that are necessary to support comparison.,"For example, with Java, a class that is made persistent requires both hashCode() and equals() methods to be defined. This issue can prevent the product from running reliably, due to incorrect or unexpected comparison results. If the relevant code is reach",NATURE:ChildOf:CWE ID:1076 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:595 VIEW ID:1305 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Reliability,,,,,,TAXONOMY NAME - OMG ASCRM:ENTRY ID:ASCRM-RLB-4::,,"Software Development,Research Concept"
524,Use of Cache Containing Sensitive Information,Base,Incomplete,"The code uses a cache that contains sensitive information, but the cache can be read by an actor outside of the intended control sphere.","Applications may use caches to improve efficiency when communicating with remote entities or performing intensive calculations. A cache maintains a pool of objects, threads, connections, pages, financial data, passwords, or other resources to minimize the",NATURE:ChildOf:CWE ID:668 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Application Data,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design DESCRIPTION - Protect information stored in cache.  PHASE - Architecture and Design DESCRIPTION - Do not store unnecessarily sensitive information in the cache.  PHASE - Architecture and Design DESCRIPTION - Consider using ,,,,,,"Software Development,Research Concept"
451,User Interface (UI) Misrepresentation of Critical Information,Class,Draft,"The user interface (UI) does not properly represent critical information to the user, allowing the information - or its source - to be obscured or spoofed. This is often a component in phishing attacks.","If an attacker can cause the UI to display erroneous data, or to otherwise convince the user to display information that appears to come from a trusted source, then the attacker could trick the user into performing the wrong action. This is often a compon",NATURE:ChildOf:CWE ID:684 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:221 VIEW ID:1000 NATURE:PeerOf:CWE ID:346 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Non-Repudiation SCOPE - Access Control IMPACT - Hide Activities IMPACT - Bypass Protection Mechanism,,"PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Perform data validation (e.g. syntax, length, etc.) before interpreting the data.  PHASE - Architecture and Design STRATEGY - Output Encoding DESCRIPTION - Create a strategy for presenting i","REFERENCE - CVE-2004-2227 DESCRIPTION - Web browser's filename selection dialog only shows the beginning portion of long filenames, which can trick users into launching executables with dangerous extensions. LINK - https://www.cve.org/CVERecord?id=CVE-200",,,TAXONOMY NAME - PLOVER:ENTRY NAME:UI Misrepresentation of Critical Information::,"TYPE - Maintenance NOTE - This entry should be broken down into more precise entries. See extended description.  TYPE - Research Gap NOTE - Misrepresentation problems are frequently studied in web browsers, but there are no known efforts for classifying t",Research Concept
691,Insufficient Control Flow Management,Pillar,Draft,"The code does not sufficiently manage its control flow during execution, creating conditions in which the control flow can be modified in unexpected ways.",,#VALUE!,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Other IMPACT - Alter Execution Logic,,,"REFERENCE - CVE-2019-9805 DESCRIPTION - Chain: Creation of the packet client occurs before initialization is complete (CWE-696) resulting in a read from uninitialized memory (CWE-908), causing memory corruption. LINK - https://www.cve.org/CVERecord?id=CVE",,,TAXONOMY NAME - WASC:ENTRY ID:40:ENTRY NAME:Insufficient Process Validation::,,Research Concept
177,Improper Handling of URL Encoding (Hex Encoding),Variant,Draft,The product does not properly handle when all or part of an input has been URL encoded.,,NATURE:ChildOf:CWE ID:172 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,PHASE - Architecture and Design STRATEGY - Input Validation DESCRIPTION - Avoid making decisions based on names of resources (e.g. files) if those resources can have alternate names.  PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume,"REFERENCE - CVE-2000-0900 DESCRIPTION - Hex-encoded path traversal variants - %2e%2e, %2e%2e%2f, %5c%2e%2e LINK - https://www.cve.org/CVERecord?id=CVE-2000-0900  REFERENCE - CVE-2005-2256 DESCRIPTION - Hex-encoded path traversal variants - %2e%2e, %2e%2e%",,,TAXONOMY NAME - PLOVER:ENTRY NAME:URL Encoding (Hex Encoding)::,,Research Concept
176,Improper Handling of Unicode Encoding,Variant,Draft,The product does not properly handle when an input contains Unicode encoding.,,NATURE:ChildOf:CWE ID:172 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,PHASE - Architecture and Design STRATEGY - Input Validation DESCRIPTION - Avoid making decisions based on names of resources (e.g. files) if those resources can have alternate names.  PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume,"REFERENCE - CVE-2000-0884 DESCRIPTION - Server allows remote attackers to read documents outside of the web root, and possibly execute arbitrary commands, via malformed URLs that contain Unicode encoded characters. LINK - https://www.cve.org/CVERecord?id=",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Unicode Encoding TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:MSC10-C:ENTRY NAME:Character Encoding - UTF8 Related Issues::,,Research Concept
793,Only Filtering One Instance of a Special Element,Variant,Incomplete,"The product receives data from an upstream component, but only filters a single instance of a special element before sending it to a downstream component.","Incomplete filtering of this nature may be location-dependent, as in only the first or last element is filtered.",NATURE:ChildOf:CWE ID:792 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Integrity IMPACT - Unexpected State,,,,,,,,Research Concept
489,Active Debug Code,Base,Draft,"The product is deployed to unauthorized actors with debugging code still enabled or active, which can create unintended entry points or expose sensitive information.",A common development practice is to add back door code specifically designed for debugging or testing purposes that is not intended to be shipped or deployed with the product. These back door entry points create security risks because they are not conside,NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:215 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Undetermined,,TERM - Leftover debug code DESCRIPTION - This term originates from Seven Pernicious Kingdoms::,"PHASE - Implementation: NOTE - In web-based applications, debug code is used to test and modify web application properties, configuration information, and functions. If a debug application is left on a production server, this oversight during the software",SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Access Control SCOPE - Other IMPACT - Bypass Protection Mechanism IMPACT - Read Application Data IMPACT - Gain Privileges or Assume Identity IMPACT - Varies by Context NOTE - The sever,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Build and Compilation Distribution DESCRIPTION - Remove debug code before deploying the application.,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Leftover Debug Code TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A10:ENTRY NAME:Insecure Configuration Management:MAPPING FIT:CWE More Specific TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP28:ENTRY NA,"TYPE - Other NOTE - In J2EE a main method may be a good indicator that debug code has been left in the application, although there may not be any direct security impact.::","Software Development,Research Concept"
366,Race Condition within a Thread,Base,Draft,"If two threads of execution use a resource simultaneously, there exists the possibility that resources may be used while invalid, in turn making the state of execution undefined.",,NATURE:ChildOf:CWE ID:362 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:662 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:662 VIEW ID:1340 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C# LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity SCOPE - Other IMPACT - Alter Execution Logic IMPACT - Unexpected State NOTE - The main problem is that -- if a lock is overcome -- data could be altered in a bad state.,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design DESCRIPTION - Use locking functionality. This is the recommended solution. Implement some form of locking mechanism around code which alters or reads persistent data in a multithreaded environment.  PHASE - Architecture and,"REFERENCE - CVE-2022-2621 DESCRIPTION - Chain: two threads in a web browser use the same resource (CWE-366), but one of those threads can destroy the resource before the other has completed (CWE-416). LINK - https://www.cve.org/CVERecord?id=CVE-2022-2621",,System Process,TAXONOMY NAME - CLASP:ENTRY NAME:Race condition within a thread TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:CON32-C:ENTRY NAME:Prevent data races when accessing bit-fields from multiple threads:MAPPING FIT:CWE More Abstract TAXONOMY NAME - CERT C Secure,,"Software Development,Research Concept"
57,Path Equivalence: 'fakedir/../realdir/filename',Variant,Incomplete,"The product contains protection mechanisms to restrict access to 'realdir/filename', but it constructs pathnames using external input in the form of 'fakedir/../realdir/filename' that are not handled by those mechanisms. This allows attackers to perform u",,NATURE:ChildOf:CWE ID:41 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same inpu,"REFERENCE - CVE-2001-1152 DESCRIPTION - Proxy allows remote attackers to bypass denylist restrictions and connect to unauthorized web servers by modifying the requested URL, including (1) a // (double slash), (2) a /SUBDIR/.. where the desired file is in",,,TAXONOMY NAME - PLOVER:ENTRY NAME:dirname/fakechild/../realchild/filename TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,TYPE - Theoretical NOTE - This is a manipulation that uses an injection for one consequence (containment violation using relative path) to achieve a different consequence (equivalence by alternate name).::,Research Concept
206,Observable Internal Behavioral Discrepancy,Variant,Incomplete,"The product performs multiple behaviors that are combined to produce a single result, but the individual behaviors are observable separately in a way that allows attackers to reveal internal state or internal decision points.","Ideally, a product should provide as little information as possible to an attacker. Any hints that the attacker may be making progress can then be used to simplify or optimize the attack. For example, in a login procedure that requires a username and pass",NATURE:ChildOf:CWE ID:205 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality SCOPE - Access Control IMPACT - Read Application Data IMPACT - Bypass Protection Mechanism,,"PHASE - DESCRIPTION - Setup generic response pages for error conditions. The error page should not disclose information about the success or failure of a sensitive operation. For instance, the login page should not confirm that the login is correct and th",REFERENCE - CVE-2002-2031 DESCRIPTION - File existence via infoleak monitoring whether onerror handler fires or not. LINK - https://www.cve.org/CVERecord?id=CVE-2002-2031  REFERENCE - CVE-2005-2025 DESCRIPTION - Valid groupname enumeration via behavioral,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Internal behavioral inconsistency infoleak::,,Research Concept
268,Privilege Chaining,Base,Draft,"Two distinct privileges, roles, capabilities, or rights can be combined in a way that allows an entity to perform unsafe actions that would not be allowed without that combination.",,NATURE:ChildOf:CWE ID:269 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. PHASE - Operation,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - A user can be given or gain access rights of another user. This can give the user unauthorized access to sensitive information including the access information of another user.,,PHASE - Architecture and Design STRATEGY - Separation of Privilege DESCRIPTION - Consider following the principle of separation of privilege. Require multiple conditions to be met before permitting access to a system resource.  PHASE - Architecture and De,REFERENCE - CVE-2005-1736 DESCRIPTION - Chaining of user rights. LINK - https://www.cve.org/CVERecord?id=CVE-2005-1736  REFERENCE - CVE-2002-1772 DESCRIPTION - Gain certain rights via privilege chaining in alternate channel. LINK - https://www.cve.org/CVE,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Privilege Chaining::,TYPE - Relationship NOTE - There is some conceptual overlap with Unsafe Privilege.::,"Software Development,Research Concept"
1109,Use of Same Variable for Multiple Purposes,Base,Incomplete,"The code contains a callable, block, or other code element in which the same variable is used to control more than one unique task or store more than one instance of data.","Use of the same variable for multiple purposes can make it more difficult for a person to read or understand the code, potentially hiding other quality issues. This issue makes it more difficult to maintain the product, which indirectly affects security b",NATURE:ChildOf:CWE ID:1078 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,,,"Software Development,Research Concept"
1274,Improper Access Control for Volatile Memory Containing Boot Code,Base,Stable,"The product conducts a secure-boot process that transfers bootloader code from Non-Volatile Memory (NVM) into Volatile Memory (VM), but it does not have sufficient access control or other protections for the Volatile Memory.","Adversaries could bypass the secure-boot process and execute their own untrusted, malicious boot code. As a part of a secure-boot process, the read-only-memory (ROM) code for a System-on-Chip (SoC) or other system fetches bootloader code from Non-Volatile",NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design: NOTE - This weakness can be introduced during hardware architecture or design but can be identified later during testing.,SCOPE - Access Control SCOPE - Integrity IMPACT - Modify Memory IMPACT - Execute Unauthorized Code or Commands IMPACT - Gain Privileges or Assume Identity LIKELIHOOD - High,"METHOD - Manual Analysis DESCRIPTION - Ensure the volatile memory is lockable or has locks. Ensure the volatile memory is locked for writes from untrusted agents or adversaries. Try modifying the volatile memory from an untrusted agent, and ensure these w",PHASE - Architecture and Design DESCRIPTION - Ensure that the design of volatile-memory protections is enough to prevent modification from an adversary or untrusted code.  PHASE - Testing DESCRIPTION - Test the volatile-memory protections to ensure they a,REFERENCE - CVE-2019-2267 DESCRIPTION - Locked memory regions may be modified through other interfaces in a secure-boot-loader image due to improper access control. LINK - https://www.cve.org/CVERecord?id=CVE-2019-2267,,,,,"Hardware Development,Research Concept"
257,Storing Passwords in a Recoverable Format,Base,Incomplete,"The storage of passwords in a recoverable format makes them subject to password reuse attacks by malicious users. In fact, it should be noted that recoverable encrypted passwords provide no significant benefit over plaintext passwords since they are subje",,NATURE:ChildOf:CWE ID:522 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:259 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.,SCOPE - Confidentiality SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - User's passwords may be revealed.  SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - Revealed passwords may be reused elsewhere to im,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Architecture and Design DESCRIPTION - Use strong, non-reversible encryption to protect stored passwords.","REFERENCE - CVE-2022-30018 DESCRIPTION - A messaging platform serializes all elements of User/Group objects, making private information available to adversaries LINK - https://www.cve.org/CVERecord?id=CVE-2022-30018",,,TAXONOMY NAME - CLASP:ENTRY NAME:Storing passwords in a recoverable format TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::,"TYPE - Maintenance NOTE - The meaning of this entry needs to be investigated more closely, especially with respect to what is meant by recoverable.::","Software Development,Research Concept"
862,Missing Authorization,Class,Incomplete,The product does not perform an authorization check when an actor attempts to access a resource or perform an action.,"Assuming a user with a given identity, authorization is the process of determining whether that user can access a given resource, based on the user's privileges and any permissions or other access-control specifications that apply to the resource. When ac",NATURE:ChildOf:CWE ID:285 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:284 VIEW ID:1340 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY NAME:Web Server TECHNOLOGY PREVALENCE:Often TECHNOLOGY NAME:Database Server TECHNOLOGY PREVALENCE:Often,"An access control list (ACL) represents who/what has permissions to a given object. Different operating systems implement (ACLs) in different ways. In UNIX, there are three types of permissions: read, write, and execute. Users are divided into three class","TERM - AuthZ DESCRIPTION - AuthZ is typically used as an abbreviation of authorization within the web application security community. It is distinct from AuthN (or, sometimes, AuthC) which is an abbreviation of authentication. The use of Auth as an abbrev",PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase. Authorization weaknesses may arise when a single-user application is ported to a multi-user environment. PHASE,"SCOPE - Confidentiality IMPACT - Read Application Data IMPACT - Read Files or Directories NOTE - An attacker could read sensitive data, either by reading the data directly from a data store that is not restricted, or by accessing insufficiently-protected,","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis is useful for detecting commonly-used idioms for authorization. A tool may be able to analyze related configuration files, such as .htaccess in Apache web servers, or detect the us","PHASE - Architecture and Design DESCRIPTION - Divide the product into anonymous, normal, privileged, and administrative areas. Reduce the attack surface by carefully mapping roles with data and functionality. Use role-based access control (RBAC) [REF-229]","REFERENCE - CVE-2022-24730 DESCRIPTION - Go-based continuous deployment product does not check that a user has certain privileges to update or create an app, allowing adversaries to read sensitive repository information LINK - https://www.cve.org/CVERecor",,,TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 2-1:ENTRY NAME:Req 4.3.3.7 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 3-3:ENTRY NAME:Req SR 2.1 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-2:ENTRY NAME:Req CR 2.1::,,Research Concept
495,Private Data Structure Returned From A Public Method,Variant,Draft,"The product has a method that is declared public, but returns a reference to a private data structure, which could then be modified in unexpected ways.",,NATURE:ChildOf:CWE ID:664 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C# LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Modify Application Data NOTE - The contents of the data structure can be modified from outside the intended  SCOPE.,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - Declare the method private.  PHASE - Implementation DESCRIPTION - Clone the member data and keep an unmodified version of the data private to the object.  PHASE - Implementation DESCRIPTION - Use public setter methods ,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Private Array-Typed Field Returned From A Public Method TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::,,Research Concept
1090,Method Containing Access of a Member Element from Another Class,Base,Incomplete,A method for a class performs an operation that directly accesses a member element from another class.,"This issue suggests poor encapsulation and makes it more difficult to understand and maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to ",NATURE:ChildOf:CWE ID:1061 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,TAXONOMY NAME - OMG ASCMM:ENTRY ID:ASCMM-MNT-16::,,"Software Development,Research Concept"
313,Cleartext Storage in a File or on Disk,Variant,Draft,"The product stores sensitive information in cleartext in a file, or on disk.","The sensitive information could be read by attackers with access to the file, or with physical or administrator access to the raw disk. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encodi",NATURE:ChildOf:CWE ID:312 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.,SCOPE - Confidentiality IMPACT - Read Application Data,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,REFERENCE - CVE-2001-1481 DESCRIPTION - Cleartext credentials in world-readable file. LINK - https://www.cve.org/CVERecord?id=CVE-2001-1481  REFERENCE - CVE-2005-1828 DESCRIPTION - Password in cleartext in config file. LINK - https://www.cve.org/CVERecord,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Plaintext Storage in File or on Disk TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::,"TYPE - Terminology NOTE - Different people use cleartext and plaintext to mean the same thing: the lack of encryption. However, within cryptography, these have more precise meanings. Plaintext is the information just before it is fed into a cryptographic ",Research Concept
413,Improper Resource Locking,Base,Draft,The product does not lock or does not correctly lock a resource when the product must have exclusive access to the resource.,"When a resource is not properly locked, an attacker could modify the resource while it is being operated on by the product. This might violate the product's assumption that the resource will not change, potentially leading to unexpected behaviors.",NATURE:ChildOf:CWE ID:667 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,"SCOPE - Integrity SCOPE - Availability IMPACT - Modify Application Data IMPACT - DoS -  Instability IMPACT - DoS -  Crash, Exit, or Restart","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design DESCRIPTION - Use a non-conflicting privilege scheme.  PHASE - Architecture and Design Implementation DESCRIPTION - Use synchronization when locking a resource.,REFERENCE - CVE-2022-20141 DESCRIPTION - Chain: an operating system kernel has insufficent resource locking (CWE-413) leading to a use after free (CWE-416). LINK - https://www.cve.org/CVERecord?id=CVE-2022-20141,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Insufficient Resource Locking TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:VNA00-J:ENTRY NAME:Ensure visibility when accessing shared primitive variables TAXONOMY NAME - The CERT Oracle,,"Software Development,Research Concept"
1286,Improper Validation of Syntactic Correctness of Input,Base,Incomplete,"The product receives input that is expected to be well-formed - i.e., to comply with a certain syntax - but it does not validate or incorrectly validates that the input complies with the syntax.","Often, complex inputs are expected to follow a particular syntax, which is either assumed by the input itself, or declared within metadata such as headers. The syntax could be for data exchange formats, markup languages, or even programming languages. Whe",NATURE:ChildOf:CWE ID:20 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Often,,,PHASE - Implementation,SCOPE - Other IMPACT - Varies by Context,,"PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n","REFERENCE - CVE-2016-4029 DESCRIPTION - Chain: incorrect validation of intended decimal-based IP address format (CWE-1286) enables parsing of octal or hexadecimal formats (CWE-1389), allowing bypass of an SSRF protection mechanism (CWE-918). LINK - https:",,,,TYPE - Maintenance NOTE - This entry is still under development and will continue to see updates and content improvements.::,"Software Development,Research Concept"
85,Doubled Character XSS Manipulations,Variant,Draft,The web application does not filter user-controlled input for executable script disguised using doubling of the involved characters.,,NATURE:ChildOf:CWE ID:79 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:675 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Read Application Data IMPACT - Execute Unauthorized Code or Commands,,PHASE - Implementation DESCRIPTION - Resolve all filtered input to absolute or canonical representations before processing.  PHASE - Implementation DESCRIPTION - Carefully check each input parameter against a rigorous positive specification (allowlist) de,REFERENCE - CVE-2002-2086 DESCRIPTION - XSS using<script. LINK - https://www.cve.org/CVERecord?id=CVE-2002-2086  REFERENCE - CVE-2000-0116 DESCRIPTION - Encoded javascript in IMG tag. LINK - https://www.cve.org/CVERecord?id=CVE-2000-0116  REFERENCE - ,,,"TAXONOMY NAME - PLOVER:ENTRY NAME:DOUBLE - Doubled character XSS manipulations, e.g.",,Research Concept
1290,Incorrect Decoding of Security Identifiers ,Base,Incomplete,"The product implements a decoding mechanism to decode certain bus-transaction signals to security identifiers. If the decoding is implemented incorrectly, then untrusted agents can now gain unauthorized access to the asset.","In a System-On-Chip (SoC), various integrated circuits and hardware engines generate transactions such as to access (reads/writes) assets or perform certain actions (e.g., reset, fetch, compute, etc.). Among various types of message information, a typical",NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:1294 VIEW ID:1194 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY NAME:Bus/Int,,,PHASE - Implementation PHASE - Architecture and Design,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Access Control IMPACT - Modify Memory IMPACT - Read Memory IMPACT - DoS -  Resource Consumption (Other) IMPACT - Execute Unauthorized Code or Commands IMPACT - Gain Privileges or Assum,,PHASE - Architecture and Design DESCRIPTION - Security identifier decoders must be reviewed for design consistency and common weaknesses.  PHASE - Implementation DESCRIPTION - Access and programming flows must be tested in pre-silicon and post-silicon tes,,,,,,"Hardware Development,Research Concept"
475,Undefined Behavior for Input to API,Base,Incomplete,The behavior of this function is undefined unless its control parameter is set to a specific value.,,NATURE:ChildOf:CWE ID:573 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Other IMPACT - Quality Degradation IMPACT - Varies by Context,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Undefined Behavior TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP1:ENTRY NAME:Glitch in computation::,"TYPE - Other NOTE - The Linux Standard Base Specification 2.0.1 for libc places constraints on the arguments to some internal functions [21]. If the constraints are not met, the behavior of the functions is not defined. It is unusual for this function to ","Software Development,Research Concept"
9,J2EE Misconfiguration: Weak Access Permissions for EJB Methods,Variant,Draft,"If elevated access rights are assigned to EJB methods, then an attacker can take advantage of the permissions to exploit the product.","If the EJB deployment descriptor contains one or more method permissions that grant access to the special ANYONE role, it indicates that access control for the application has not been fully thought through or that the application is structured in such a ",NATURE:ChildOf:CWE ID:266 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Other IMPACT - Other,,PHASE - Architecture and Design System Configuration DESCRIPTION - Follow the principle of least privilege when assigning access rights to EJB methods. Permission to invoke EJB methods should not be granted to the ANYONE role.,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:J2EE Misconfiguration: Weak Access Permissions::,,Research Concept
350,Reliance on Reverse DNS Resolution for a Security-Critical Action,Variant,Draft,"The product performs reverse DNS resolution on an IP address to obtain the hostname and make a security decision, but it does not properly ensure that the IP address is truly associated with the hostname.","Since DNS names can be easily spoofed or misreported, and it may be difficult for the product to detect if a trusted DNS server has been compromised, DNS names do not constitute a valid authentication mechanism. When the product performs a reverse DNS res",NATURE:ChildOf:CWE ID:290 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:807 VIEW ID:1000 NATURE:CanPrecede:CWE ID:923 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity IMPACT - Bypass Protection Mechanism NOTE - Malicious users can fake authentication information by providing false DNS information.,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design DESCRIPTION - Use other means of identity verification that cannot be simply spoofed. Possibilities include a username/password or certificate.  PHASE - Implementation DESCRIPTION - Perform proper forward and reverse DNS lo,REFERENCE - CVE-2001-1488 DESCRIPTION - Does not do double-reverse lookup to prevent DNS spoofing. LINK - https://www.cve.org/CVERecord?id=CVE-2001-1488  REFERENCE - CVE-2001-1500 DESCRIPTION - Does not verify reverse-resolved hostnames in DNS. LINK - htt,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Improperly Trusted Reverse DNS TAXONOMY NAME - CLASP:ENTRY NAME:Trusting self-reported DNS name TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP29:ENTRY NAME:Faulty endpoint authentication::,"TYPE - Maintenance NOTE - CWE-350, CWE-247, and CWE-292 were merged into CWE-350 in CWE 2.5. CWE-247 was originally derived from Seven Pernicious Kingdoms, CWE-350 from PLOVER, and CWE-292 from CLASP. All taxonomies focused closely on the use of reverse D",Research Concept
500,Public Static Field Not Marked Final,Variant,Draft,"An object contains a public static field that is not marked final, which might allow it to be modified in unexpected ways.",Public static variables can be read without an accessor and changed without a mutator by any classes in the application.,NATURE:ChildOf:CWE ID:493 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,"When a field is declared public but not final, the field can be read and written to by arbitrary Java code.",,PHASE - Implementation,SCOPE - Integrity IMPACT - Modify Application Data NOTE - The object could potentially be tampered with.  SCOPE - Confidentiality IMPACT - Read Application Data NOTE - The object could potentially allow the object to be read.,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Architecture and Design DESCRIPTION - Clearly identify the scope for all critical data elements, including whether they should be regarded as static.  PHASE - Implementation DESCRIPTION - Make any static fields private and constant. A constant fie",,,,TAXONOMY NAME - CLASP:ENTRY NAME:Overflow of static internal buffer TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:OBJ10-J:ENTRY NAME:Do not use public static nonfinal variables TAXONOMY NAME - Software Fault Patterns:ENTR,,Research Concept
625,Permissive Regular Expression,Base,Draft,The product uses a regular expression that does not sufficiently restrict the set of allowed values.,"This effectively causes the regexp to accept substrings that match the pattern, which produces a partial comparison to the target. In some cases, this can lead to other weaknesses. Common errors include: not identifying the beginning and end of the target",NATURE:ChildOf:CWE ID:185 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:187 VIEW ID:1000 NATURE:PeerOf:CWE ID:184 VIEW ID:1000 NATURE:PeerOf:CWE ID:183 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE NAME:Perl LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:PHP LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - This problem is frequently found when the regular expression is used in input validation or security features such as authentication.,SCOPE - Access Control IMPACT - Bypass Protection Mechanism,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation DESCRIPTION - When applicable, ensure that the regular expression marks beginning and ending string patterns, such as /^string$/ for Perl.","REFERENCE - CVE-2021-22204 DESCRIPTION - Chain: regex in EXIF processor code does not correctly determine where a string ends (CWE-625), enabling eval injection (CWE-95), as exploited in the wild per CISA KEV. LINK - https://www.cve.org/CVERecord?id=CVE-2",,,TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS08-J:ENTRY NAME:Sanitize untrusted data passed to a regex::,,"Software Development,Research Concept"
158,Improper Neutralization of Null Byte or NUL Character,Variant,Incomplete,"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes NUL characters or null bytes when they are sent to a downstream component.","As data is parsed, an injected NUL character or null byte may cause the product to believe the input is terminated earlier than it actually is, or otherwise cause the input to be misinterpreted. This could then be used to inject potentially dangerous inpu",NATURE:ChildOf:CWE ID:138 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,"PHASE - DESCRIPTION - Developers should anticipate that null characters or null bytes will be injected/removed/manipulated in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and",REFERENCE - CVE-2008-1284 DESCRIPTION - NUL byte in theme name causes directory traversal impact to be worse LINK - https://www.cve.org/CVERecord?id=CVE-2008-1284  REFERENCE - CVE-2005-2008 DESCRIPTION - Source code disclosure using trailing null. LINK -,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Null Character / Null Byte TAXONOMY NAME - WASC:ENTRY ID:28:ENTRY NAME:Null Byte Injection TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,"TYPE - Relationship NOTE - This can be a factor in multiple interpretation errors, other interaction errors, filename equivalence, etc.::",Research Concept
1295,Debug Messages Revealing Unnecessary Information,Base,Incomplete,The product fails to adequately prevent the revealing of unnecessary and potentially sensitive system information within debugging messages.,"Debug messages are messages that help troubleshoot an issue by revealing the internal state of the system. For example, debug data in design can be exposed through internal memory array dumps or boot logs through interfaces like UART via TAP commands, sca",NATURE:ChildOf:CWE ID:200 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:209 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Access Control SCOPE - Accountability SCOPE - Authentication SCOPE - Authorization SCOPE - Non-Repudiation IMPACT - Read Memory IMPACT - Bypass Protection Mechanism IMPACT - Gain Privi,,PHASE - Implementation DESCRIPTION - Ensure that a debug message does not reveal any unnecessary information during the debug process for the intended response.,"REFERENCE - CVE-2021-25476 DESCRIPTION - Digital Rights Management (DRM) capability for mobile platform leaks pointer information, simplifying ASLR bypass LINK - https://www.cve.org/CVERecord?id=CVE-2021-25476  REFERENCE - CVE-2020-24491 DESCRIPTION - Pro",,,,,"Hardware Development,Research Concept"
455,Non-exit on Failed Initialization,Base,Draft,"The product does not exit or otherwise modify its operation when security-relevant errors occur during initialization, such as when a configuration file has a format error or a hardware security module (HSM) cannot be activated, which can cause the produc",,NATURE:ChildOf:CWE ID:665 VIEW ID:1000 NATURE:ChildOf:CWE ID:705 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:636 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity SCOPE - Other IMPACT - Modify Application Data IMPACT - Alter Execution Logic NOTE - The application could be placed in an insecure state that may allow an attacker to modify sensitive data or allow unintended logic to be executed.,,PHASE - Implementation DESCRIPTION - Follow the principle of failing securely when an error occurs. The system should enter a state where it is not vulnerable and will not display sensitive error messages to a potential attacker.,REFERENCE - CVE-2005-1345 DESCRIPTION - Product does not trigger a fatal error if missing or invalid ACLs are in a configuration file. LINK - https://www.cve.org/CVERecord?id=CVE-2005-1345,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Non-exit on Failed Initialization::,"TYPE - Research Gap NOTE - Under-studied. These issues are not frequently reported, and it is difficult to find published examples.::","Software Development,Research Concept"
774,Allocation of File Descriptors or Handles Without Limits or Throttling,Variant,Incomplete,"The product allocates file descriptors or handles on behalf of an actor without imposing any restrictions on how many descriptors can be allocated, in violation of the intended security policy for that actor.","This can cause the product to consume all available file descriptors or handles, which can prevent other processes from performing critical file processing operations.",NATURE:ChildOf:CWE ID:770 VIEW ID:1000 ORDINAL:Primary,,,,TERM - File Descriptor Exhaustion::,PHASE - Architecture and Design PHASE - Implementation,"SCOPE - Availability IMPACT - DoS -  Resource Consumption (Other) NOTE - When allocating resources without limits, an attacker could prevent all other processes from accessing the same type of resource.",,"PHASE - Operation Architecture and Design STRATEGY - Resource Limitation DESCRIPTION - Use resource-limiting settings provided by the operating system or environment. For example, when managing system resources in POSIX, setrlimit() can be used to set lim",,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP13:ENTRY NAME:Unrestricted Consumption::,,Research Concept
1234,Hardware Internal or Debug Modes Allow Override of Locks,Base,Incomplete,System configuration protection may be bypassed during debug mode.,"Device configuration controls are commonly programmed after a device power reset by a trusted firmware or software module (e.g., BIOS/bootloader) and then locked from any further modification. This is commonly implemented using a trusted lock bit, which w",NATURE:ChildOf:CWE ID:667 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Access Control IMPACT - Bypass Protection Mechanism LIKELIHOOD - High NOTE - Bypass of lock bit allows access and modification of system configuration even when the lock bit is set.,,PHASE - Architecture and Design Implementation Testing DESCRIPTION - Security Lock bit protections should be reviewed for any bypass/override modes supported. Any supported override modes either should be removed or protected using authenticated debug mod,,,,,,"Hardware Development,Research Concept"
511,Logic/Time Bomb,Base,Incomplete,"The product contains code that is designed to disrupt the legitimate operation of the product (or its environment) when a certain time passes, or when a certain logical condition is met.","When the time bomb or logic bomb is detonated, it may perform a denial of service such as crashing the system, deleting critical data, or degrading system response time. This bomb might be placed within either a replicating or non-replicating Trojan horse",NATURE:ChildOf:CWE ID:506 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Mobile TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Other -  SCOPE - Integrity IMPACT - Varies by Context IMPACT - Alter Execution Logic,,"PHASE - Installation DESCRIPTION - Always verify the integrity of the product that is being installed.  PHASE - Testing DESCRIPTION - Conduct a code coverage analysis using live testing, then closely inspect any code that is not covered.",,,,TAXONOMY NAME - Landwehr:ENTRY NAME:Logic/Time Bomb::,,Research Concept
425,Direct Request ('Forced Browsing'),Base,Incomplete,"The web application does not adequately enforce appropriate authorization on all restricted URLs, scripts, or files.",Web applications susceptible to direct request attacks often make the false assumption that such resources can only be reached through a given navigation path and so only apply authorization at certain points in the path.,NATURE:ChildOf:CWE ID:862 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:862 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:288 VIEW ID:1000 NATURE:ChildOf:CWE ID:424 VIEW ID:1000 NATURE:CanPrecede:CWE ID:471 VIEW ID:1000 NATURE:CanPrecede:CWE ID:,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Web Based TECHNOLOGY PREVALENCE:Undetermined,,"TERM - forced browsing DESCRIPTION - The forced browsing term could be misinterpreted to include weaknesses such as CSRF or XSS, so its use is discouraged.::",PHASE - Implementation PHASE - Operation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Access Control IMPACT - Read Application Data IMPACT - Modify Application Data IMPACT - Execute Unauthorized Code or Commands IMPACT - Gain Privileges or Assume Identity,,"PHASE - Architecture and Design Operation DESCRIPTION - Apply appropriate access control authorizations for each access to all restricted URLs, scripts or files.  PHASE - Architecture and Design DESCRIPTION - Consider using MVC based frameworks such as St","REFERENCE - CVE-2022-29238 DESCRIPTION - Access-control setting in web-based document collaboration tool is not properly implemented by the code, which prevents listing hidden directories but does not prevent direct requests to files in those directories.",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Direct Request aka 'Forced Browsing' TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A10:ENTRY NAME:Failure to Restrict URL Access:MAPPING FIT:CWE More Specific TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A1:ENTRY NAME:Unvali,"TYPE - Relationship NOTE - Overlaps Modification of Assumed-Immutable Data (MAID), authorization errors, container errors; often primary to other weaknesses such as XSS and SQL injection.  TYPE - Theoretical NOTE - Forced browsing is a step-based manipula","Software Development,Research Concept"
14,Compiler Removal of Code to Clear Buffers,Variant,Draft,"Sensitive memory is cleared according to the source code, but compiler optimizations leave the memory untouched when it is not read from again, aka dead store removal.","This compiler optimization error occurs when: Secret data are stored in memory. The secret data are scrubbed from memory by overwriting its contents. The source code is compiled using an optimizing compiler, which identifies and removes the function that ",NATURE:ChildOf:CWE ID:733 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation PHASE - Build and Compilation,"SCOPE - Confidentiality SCOPE - Access Control IMPACT - Read Memory IMPACT - Bypass Protection Mechanism NOTE - This weakness will allow data that has not been cleared from memory to be read. If this data contains sensitive password information, then an a","METHOD - Black Box DESCRIPTION - This specific weakness is impossible to detect using black box  METHODs. While an analyst could examine memory to see that it has not been scrubbed, an analysis of the executable would not be successful. This is because th","PHASE - Implementation DESCRIPTION - Store the sensitive data in a volatile memory location if available.  PHASE - Build and Compilation DESCRIPTION - If possible, configure your compiler so that it does not remove dead stores.  PHASE - Architecture and D",,,Memory,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Insecure Compiler Optimization TAXONOMY NAME - PLOVER:ENTRY NAME:Sensitive memory uncleared by compiler optimization TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A8:ENTRY NAME:Insecure Storage:MAPPING FIT:CW,,Research Concept
1327,Binding to an Unrestricted IP Address,Base,Incomplete,"The product assigns the address 0.0.0.0 for a database server, a cloud service/instance, or any computing resource that communicates remotely.","When a server binds to the address 0.0.0.0, it allows connections from every IP address on the local machine, effectively exposing the server to every possible network. This might be much broader access than intended by the developer or administrator, who",NATURE:ChildOf:CWE ID:668 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Other LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY NAME:Web Server TECHNOLOGY PR,,,PHASE - System Configuration,SCOPE - Availability IMPACT - DoS -  Amplification LIKELIHOOD - High,,PHASE - System Configuration DESCRIPTION - Assign IP addresses that are not 0.0.0.0. EFFECTIVENESS High  PHASE - System Configuration STRATEGY - Firewall DESCRIPTION - Unwanted connections to the configured server may be denied through a firewall or other,"REFERENCE - CVE-2022-21947 DESCRIPTION - Desktop manager for Kubernetes and container management binds a service to 0.0.0.0, allowing users on the network to make requests to a dashboard API. LINK - https://www.cve.org/CVERecord?id=CVE-2022-21947",,,,,"Software Development,Research Concept"
374,Passing Mutable Objects to an Untrusted Method,Base,Draft,The product sends non-cloned mutable data as an argument to a method or function.,"The function or method that has been called can alter or delete the mutable data. This could violate assumptions that the calling function has made about its state. In situations where unknown code is called with references to mutable data, this external ",NATURE:ChildOf:CWE ID:668 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C# LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Modify Memory NOTE - Potentially data could be tampered with by another function which should not have been tampered with.,,"PHASE - Implementation DESCRIPTION - Pass in data which should not be altered as constant or immutable.  PHASE - Implementation DESCRIPTION - Clone all mutable data before passing it into an external function . This is the preferred mitigation. This way, ",,,,TAXONOMY NAME - CLASP:ENTRY NAME:Passing mutable objects to an untrusted method TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:OBJ04-J:ENTRY NAME:Provide mutable classes with copy functionality to safely allow passing inst,,"Software Development,Research Concept"
1101,Reliance on Runtime Component in Generated Code,Base,Incomplete,The product uses automatically-generated code that cannot be executed without a specific runtime support component.,"This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,,,"Software Development,Research Concept"
1329,Reliance on Component That is Not Updateable,Base,Incomplete,The product contains a component that cannot be updated or patched in order to remove vulnerabilities or significant bugs.,"If the component is discovered to contain a vulnerability or critical bug, but the issue cannot be fixed using an update or patch, then the product's owner will not be able to protect against the issue. The only option might be replacement of the product,",NATURE:ChildOf:CWE ID:1357 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:664 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Requirements: NOTE - Requirements development might not consider the importance of updates over the lifetime of the product or might intentionally exclude this capability due to concerns such as expense or speed to market. PHASE - Architecture and,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Access Control SCOPE - Authentication SCOPE - Authorization SCOPE - Other IMPACT - Gain Privileges or Assume Identity IMPACT - Bypass Protection Mechanism IMPACT - Execute Unauthorized Code or Commands IMP,"METHOD - Architecture or Design Review DESCRIPTION - Check the consumer or maintainer documentation, the architecture/design documentation, or the original requirements to ensure that the documentation includes details for how to update the firmware. EFFE","PHASE - Requirements DESCRIPTION - Specify requirements that each component should be updateable, including ROM, firmware, etc.  PHASE - Architecture and Design DESCRIPTION - Design the product to allow for updating of its components. Include the external","REFERENCE - CVE-2020-9054 DESCRIPTION - Chain: network-attached storage (NAS) device has a critical OS command injection (CWE-78) vulnerability that is actively exploited to place IoT devices into a botnet, but some products are end-of-support and cannot",,,,,"Hardware Development,Research Concept"
436,Interpretation Conflict,Class,Incomplete,"Product A handles inputs or steps differently than Product B, which causes A to perform incorrect actions based on its perception of B's state.","This is generally found in proxies, firewalls, anti-virus software, and other intermediary devices that monitor, allow, deny, or modify traffic based on how the client or server is expected to behave.",NATURE:ChildOf:CWE ID:435 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Integrity SCOPE - Other IMPACT - Unexpected State IMPACT - Varies by Context,,,"REFERENCE - CVE-2005-1215 DESCRIPTION - Bypass filters or poison web cache using requests with multiple Content-Length headers, a non-standard behavior. LINK - https://www.cve.org/CVERecord?id=CVE-2005-1215  REFERENCE - CVE-2002-0485 DESCRIPTION - Anti-vi",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Multiple Interpretation Error (MIE) TAXONOMY NAME - WASC:ENTRY ID:27:ENTRY NAME:HTTP Response Smuggling::,,Research Concept
258,Empty Password in Configuration File,Variant,Incomplete,Using an empty string as a password is insecure.,,NATURE:ChildOf:CWE ID:260 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:521 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. PHASE - Operation,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity,,"PHASE - System Configuration DESCRIPTION - Passwords should be at least eight characters long -- the longer the better. Avoid passwords that are in any way similar to other passwords you have. Avoid using words that may be found in a dictionary, names boo",REFERENCE - CVE-2022-26117 DESCRIPTION - Network access control (NAC) product has a configuration file with an empty password LINK - https://www.cve.org/CVERecord?id=CVE-2022-26117,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Password Management: Empty Password in Configuration File::,,Research Concept
755,Improper Handling of Exceptional Conditions,Class,Incomplete,The product does not handle or incorrectly handles an exceptional condition.,,NATURE:ChildOf:CWE ID:703 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Other IMPACT - Other,,,REFERENCE - CVE-2023-41151 DESCRIPTION - SDK for OPC Unified Architecture (OPC UA) server has uncaught exception when a socket is blocked for writing but the server tries to send an error LINK - https://www.cve.org/CVERecord?id=CVE-2023-41151  REFERENCE -,,,,,Research Concept
608,Struts: Non-private Field in ActionForm Class,Variant,Draft,"An ActionForm class contains a field that has not been declared private, which can be accessed without using a setter or getter.",,NATURE:ChildOf:CWE ID:668 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity SCOPE - Confidentiality IMPACT - Modify Application Data IMPACT - Read Application Data,,PHASE - Implementation DESCRIPTION - Make all fields private. Use getter to get the value of the field. Setter should be used only by the framework; setting an action form field from other actions is bad practice and should be avoided.,,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP28:ENTRY NAME:Unexpected access points::,,Research Concept
447,Unimplemented or Unsupported Feature in UI,Base,Draft,"A UI function for a security feature appears to be supported and gives feedback to the user that suggests that it is supported, but the underlying functionality is not implemented.",,NATURE:ChildOf:CWE ID:446 VIEW ID:1000 NATURE:ChildOf:CWE ID:671 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Varies by Context,,PHASE - Testing DESCRIPTION - Perform functionality testing before deploying the application.,"REFERENCE - CVE-2000-0127 DESCRIPTION - GUI configuration tool does not enable a security option when a checkbox is selected, although that option is honored when manually set in the configuration file. LINK - https://www.cve.org/CVERecord?id=CVE-2000-012",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Unimplemented or unsupported feature in UI::,"TYPE - Research Gap NOTE - This issue needs more study, as there are not many examples. It is not clear whether it is primary or resultant.::","Software Development,Research Concept"
1292,Incorrect Conversion of Security Identifiers,Base,Draft,"The product implements a conversion mechanism to map certain bus-transaction signals to security identifiers. However, if the conversion is incorrectly implemented, untrusted agents can gain unauthorized access to the asset.","In a System-On-Chip (SoC), various integrated circuits and hardware engines generate transactions such as to access (reads/writes) assets or perform certain actions (e.g., reset, fetch, compute, etc.). Among various types of message information, a typical",NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:1294 VIEW ID:1194 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY NAME:Bus/Int,,,"PHASE - Architecture and Design: NOTE - Such issues could be introduced during hardware architecture and design, then identified later during Testing or System Configuration phases. PHASE - Implementation: NOTE - Such issues could be introduced during har",SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Access Control IMPACT - Modify Memory IMPACT - Read Memory IMPACT - DoS -  Resource Consumption (Other) IMPACT - Execute Unauthorized Code or Commands IMPACT - Gain Privileges or Assum,,PHASE - Architecture and Design DESCRIPTION - Security identifier decoders must be reviewed for design inconsistency and common weaknesses.  PHASE - Implementation DESCRIPTION - Access and programming flows must be tested in pre-silicon and post-silicon t,,,,,,"Hardware Development,Research Concept"
1047,Modules with Circular Dependencies,Base,Incomplete,"The product contains modules in which one module has references that cycle back to itself, i.e., there are circular dependencies.","As an example, with Java, this weakness might indicate cycles between packages. This issue makes it more difficult to maintain the product due to insufficient modularity, which indirectly affects security by making it more difficult or time-consuming to f",NATURE:ChildOf:CWE ID:1120 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Reliability,,,,,,TAXONOMY NAME - OMG ASCMM:ENTRY ID:ASCMM-MNT-7 TAXONOMY NAME - OMG ASCRM:ENTRY ID:ASCRM-RLB-13::,,"Software Development,Research Concept"
575,EJB Bad Practices: Use of AWT Swing,Variant,Draft,The product violates the Enterprise JavaBeans (EJB) specification by using AWT/Swing.,"The Enterprise JavaBeans specification requires that every bean provider follow a set of programming guidelines designed to ensure that the bean will be portable and behave consistently in any EJB container. In this case, the product violates the followin",NATURE:ChildOf:CWE ID:695 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Quality Degradation,,PHASE - Architecture and Design DESCRIPTION - Do not use AWT/Swing when writing EJBs.,,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP3:ENTRY NAME:Use of an improper API::,,Research Concept
90,Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection'),Base,Draft,"The product constructs all or part of an LDAP query using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended LDAP query when it is sent to a downstr",,NATURE:ChildOf:CWE ID:943 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY NAME:Database Server TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands IMPACT - Read Application Data IMPACT - Modify Application Data NOTE - An attacker could include input that changes the LDAP query which allows u,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n","REFERENCE - CVE-2021-41232 DESCRIPTION - Chain: authentication routine in Go-based agile development product does not escape user name (CWE-116), allowing LDAP injection (CWE-90) LINK - https://www.cve.org/CVERecord?id=CVE-2021-41232  REFERENCE - CVE-2005",,,TAXONOMY NAME - PLOVER:ENTRY NAME:LDAP injection TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A2:ENTRY NAME:Injection Flaws:MAPPING FIT:CWE More Specific TAXONOMY NAME - WASC:ENTRY ID:29:ENTRY NAME:LDAP Injection TAXONOMY NAME - Software Fault Patterns:ENT,"TYPE - Relationship NOTE - Factors: resultant to special character mismanagement, MAID, or denylist/allowlist problems. Can be primary to authentication and verification errors.::","Software Development,Research Concept"
185,Incorrect Regular Expression,Class,Draft,The product specifies a regular expression in a way that causes data to be improperly matched or compared.,"When the regular expression is used in protection mechanisms such as filtering or validation, this may allow an attacker to bypass the intended restrictions on the incoming data.",NATURE:ChildOf:CWE ID:697 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:187 VIEW ID:1000 NATURE:CanPrecede:CWE ID:182 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Other IMPACT - Unexpected State IMPACT - Varies by Context NOTE - When the regular expression is not correctly specified, data might have a different format or type than the rest of the program expects, producing resultant weaknesses or errors.  S","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design STRATEGY - Refactoring DESCRIPTION - Regular expressions can become error prone when defining a complex language even for those experienced in writing grammars. Determine if several smaller regular expressions simplify one ,"REFERENCE - CVE-2002-2109 DESCRIPTION - Regexp isn't anchored to the beginning or end, which allows spoofed values that have trusted values as substrings. LINK - https://www.cve.org/CVERecord?id=CVE-2002-2109  REFERENCE - CVE-2005-1949 DESCRIPTION - Regex",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Regular Expression Error::,"TYPE - Relationship NOTE - While there is some overlap with allowlist/denylist problems, this entry is intended to deal with incorrectly written regular expressions, regardless of their intended use. Not every regular expression is intended for use as an ",Research Concept
97,Improper Neutralization of Server-Side Includes (SSI) Within a Web Page,Variant,Draft,"The product generates a web page, but does not neutralize or incorrectly neutralizes user-controllable input that could be interpreted as a server-side include (SSI) directive.",,NATURE:ChildOf:CWE ID:96 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands,,,,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Server-Side Includes (SSI) Injection TAXONOMY NAME - WASC:ENTRY ID:36:ENTRY NAME:SSI Injection::,"TYPE - Relationship NOTE - This can be resultant from XSS/HTML injection because the same special characters can be involved. However, this is server-side code execution, not client-side.::",Research Concept
1294,Insecure Security Identifier Mechanism,Class,Incomplete,"The System-on-Chip (SoC) implements a Security Identifier mechanism to differentiate what actions are allowed or disallowed when a transaction originates from an entity. However, the Security Identifiers are not correctly implemented.","Systems-On-Chip (Integrated circuits and hardware engines) implement Security Identifiers to differentiate/identify actions originated from various agents. These actions could be 'read', 'write', 'program', 'reset', 'fetch', 'compute', etc. Security ident",NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY NAME:Bus/Int,,,"PHASE - Architecture and Design: NOTE - Such issues could be introduced during hardware architecture and design, then identified later during Testing or System Configuration phases. PHASE - Implementation: NOTE - Such issues could be introduced during har",SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Access Control IMPACT - Modify Memory IMPACT - Read Memory IMPACT - DoS -  Resource Consumption (Other) IMPACT - Execute Unauthorized Code or Commands IMPACT - Gain Privileges or Assum,,PHASE - Architecture and Design DESCRIPTION - Security Identifier Decoders must be reviewed for design inconsistency and common weaknesses.  PHASE - Implementation DESCRIPTION - Access and programming flows must be tested in pre-silicon and post-silicon t,,,,,TYPE - Maintenance NOTE - This entry is still under development and will continue to see updates and content improvements.::,"Hardware Development,Research Concept"
69,Improper Handling of Windows ::DATA Alternate Data Stream,Variant,Incomplete,"The product does not properly prevent access to, or detect usage of, alternate data streams (ADS).","An attacker can use an ADS to hide information about a file (e.g. size, the name of the process) from a system or file browser tools such as Windows Explorer and 'dir' at the command line utility. Alternately, the attacker might be able to bypass intended",NATURE:ChildOf:CWE ID:66 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Windows OPERATING SYSTEM PREVALENCE:Undetermined,"Alternate data streams (ADS) were first implemented in the Windows NT operating system to provide compatibility between NTFS and the Macintosh Hierarchical File System (HFS). In HFS, data and resource forks are used to store information about a file. The ",,PHASE - Implementation,SCOPE - Access Control SCOPE - Non-Repudiation SCOPE - Other IMPACT - Bypass Protection Mechanism IMPACT - Hide Activities IMPACT - Other,,PHASE - Testing DESCRIPTION - Software tools are capable of finding ADSs on your system.  PHASE - Implementation DESCRIPTION - Ensure that the source code correctly parses the filename to read or write to the correct stream.,"REFERENCE - CVE-1999-0278 DESCRIPTION - In IIS, remote attackers can obtain source code for ASP files by appending $DATA to the URL. LINK - https://www.cve.org/CVERecord?id=CVE-1999-0278  REFERENCE - CVE-2000-0927 DESCRIPTION - Product does not properly r",,System Process,TAXONOMY NAME - PLOVER:ENTRY NAME:Windows ::DATA alternate data stream::,TYPE - Theoretical NOTE - This and similar problems exist because the same resource can have multiple identifiers that dictate which behavior can be performed on the resource.::,Research Concept
400,Uncontrolled Resource Consumption,Class,Draft,"The product does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources.","Limited resources include memory, file system storage, database connection pool entries, and CPU. If an attacker can trigger the allocation of these limited resources, but the number or size of the resources is not controlled, then the attacker could caus",NATURE:ChildOf:CWE ID:664 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,TERM - Resource Exhaustion::,PHASE - Operation PHASE - Architecture and Design PHASE - Implementation,"SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart IMPACT - DoS -  Resource Consumption (CPU) IMPACT - DoS -  Resource Consumption (Memory) IMPACT - DoS -  Resource Consumption (Other) NOTE - The most common result of resource exhaustion is deni","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis typically has limited utility in recognizing resource exhaustion problems, except for program-independent system resources such as files, sockets, and processes. For system resourc",PHASE - Architecture and Design DESCRIPTION - Design throttling mechanisms into the system architecture. The best protection is to limit the amount of resources that an unauthorized user can cause to be expended. A strong authentication and access control,"REFERENCE - CVE-2022-21668 DESCRIPTION - Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190). LI",,,"TAXONOMY NAME - CLASP:ENTRY NAME:Resource exhaustion (file descriptor, disk space, sockets, ...) TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific TAXONOMY NAME - WASC:ENTRY ID:10:ENTRY NAME:Denial o","TYPE - Maintenance NOTE - Resource consumption could be interpreted as a consequence instead of an insecure behavior, so this entry is being considered for modification. It appears to be referenced too frequently when more precise mappings are available. ",Research Concept
841,Improper Enforcement of Behavioral Workflow,Base,Incomplete,"The product supports a session in which more than one behavior must be performed by an actor, but it does not properly ensure that the actor performs the behaviors in the required sequence.","By performing actions in an unexpected order, or by omitting steps, an attacker could manipulate the business logic of the product or cause it to enter an invalid state. In some cases, this can also expose resultant weaknesses. For example, a file-sharing",NATURE:ChildOf:CWE ID:691 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,"SCOPE - Other IMPACT - Alter Execution Logic NOTE - An attacker could cause the product to skip critical steps or perform them in the wrong order, bypassing its intended business logic. This can sometimes have security implications.",,,REFERENCE - CVE-2011-0348 DESCRIPTION - Bypass of access/billing restrictions by sending traffic to an unrestricted destination before sending to a restricted destination. LINK - https://www.cve.org/CVERecord?id=CVE-2011-0348  REFERENCE - CVE-2007-3012 DE,,,TAXONOMY NAME - WASC:ENTRY ID:40:ENTRY NAME:Insufficient Process Validation::,"TYPE - Research Gap NOTE - This weakness is typically associated with business logic flaws, except when it produces resultant weaknesses. The classification of business logic flaws has been under-studied, although exploitation of business flaws frequently","Software Development,Research Concept"
1079,Parent Class without Virtual Destructor Method,Base,Incomplete,"A parent class contains one or more child classes, but the parent class does not have a virtual destructor method.","This issue can prevent the product from running reliably due to undefined or unexpected behaviors. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.",NATURE:ChildOf:CWE ID:1076 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Reliability,,,,,,TAXONOMY NAME - OMG ASCRM:ENTRY ID:ASCRM-RLB-16::,,"Software Development,Research Concept"
526,Cleartext Storage of Sensitive Information in an Environment Variable,Variant,Incomplete,The product uses an environment variable to store unencrypted sensitive information.,"Information stored in an environment variable can be accessible by other processes with the execution context, including child processes that dependencies are executed in, or serverless functions in cloud environments. An environment variable's contents c",NATURE:ChildOf:CWE ID:312 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:214 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Architecture and Design PHASE - Implementation PHASE - Operation,SCOPE - Confidentiality IMPACT - Read Application Data,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design DESCRIPTION - Encrypt information stored in the environment variable to protect it from being exposed to an unauthorized user. If encryption is not feasible or is considered too expensive for the business use of the applica,REFERENCE - CVE-2022-43691 DESCRIPTION - CMS shows sensitive server-side information from environment variables when run in Debug mode. LINK - https://www.cve.org/CVERecord?id=CVE-2022-43691  REFERENCE - CVE-2022-27195 DESCRIPTION - Plugin for an automati,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::,,Research Concept
1073,Non-SQL Invokable Control Element with Excessive Number of Data Resource Accesses,Base,Incomplete,"The product contains a client with a function or method that contains a large number of data accesses/queries that are sent through a data manager, i.e., does not use efficient database capabilities.","This issue can make the product perform more slowly. If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability. While the interpretation of large number of data accesses/queries may vary for each produ",NATURE:ChildOf:CWE ID:405 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Performance,,,,,,TAXONOMY NAME - OMG ASCPEM:ENTRY ID:ASCPEM-PRF-10::,,"Software Development,Research Concept"
155,Improper Neutralization of Wildcards or Matching Symbols,Variant,Draft,"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as wildcards or matching symbols when they are sent to a downstream component.","As data is parsed, an injected element may cause the process to take unexpected actions.",NATURE:ChildOf:CWE ID:138 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,"PHASE - DESCRIPTION - Developers should anticipate that wildcard or matching elements will be injected/removed/manipulated in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and",REFERENCE - CVE-2002-0433 DESCRIPTION - Bypass file restrictions using wildcard character. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0433  REFERENCE - CVE-2002-1010 DESCRIPTION - Bypass file restrictions using wildcard character. LINK - https://www,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Wildcard or Matching Element TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,TYPE - Research Gap NOTE - Under-studied.::,Research Concept
245,J2EE Bad Practices: Direct Management of Connections,Variant,Draft,"The J2EE application directly manages connections, instead of using the container's connection management facilities.",The J2EE standard forbids the direct management of connections. It requires that applications use the container's resource management facilities to obtain connections to resources. Every major web application container provides pooled database connection ,NATURE:ChildOf:CWE ID:695 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Quality Degradation,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:J2EE Bad Practices: getConnection() TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP3:ENTRY NAME:Use of an improper API::,,Research Concept
686,Function Call With Incorrect Argument Type,Variant,Draft,"The product calls a function, procedure, or routine, but the caller specifies an argument that is the wrong data type, which may lead to resultant weaknesses.","This weakness is most likely to occur in loosely typed languages, or in strongly typed languages in which the types of variable arguments cannot be enforced at compilation time, or where there is implicit casting.",NATURE:ChildOf:CWE ID:628 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,,,,PHASE - Implementation,SCOPE - Other IMPACT - Quality Degradation,,PHASE - Testing DESCRIPTION - Because this function call often produces incorrect behavior it will usually be detected during testing or normal operation of the product. During testing exercise all possible control paths will typically expose this weaknes,,,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:EXP37-C:ENTRY NAME:Call functions with the correct number and type of arguments:MAPPING FIT:CWE More Specific TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FIO47-C:ENTRY NAME:Use valid format strings:MAPPING F,,Research Concept
52,Path Equivalence: '/multiple/trailing/slash//',Variant,Incomplete,"The product accepts path input in the form of multiple trailing slash ('/multiple/trailing/slash//') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or a",,NATURE:ChildOf:CWE ID:41 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:163 VIEW ID:1000 NATURE:CanPrecede:CWE ID:289 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same inpu,REFERENCE - CVE-2002-1078 DESCRIPTION - Directory listings in web server using multiple trailing slash LINK - https://www.cve.org/CVERecord?id=CVE-2002-1078,,,TAXONOMY NAME - PLOVER:ENTRY NAME:/multiple/trailing/slash// ('multiple trailing slash') TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,,Research Concept
834,Excessive Iteration,Class,Incomplete,The product performs an iteration or loop without sufficiently limiting the number of times that the loop is executed.,"If the iteration can be influenced by an attacker, this weakness could allow attackers to consume excessive resources such as CPU or memory. In many cases, a loop does not need to be infinite in order to cause enough resource consumption to adversely affe",NATURE:ChildOf:CWE ID:691 VIEW ID:1000 ORDINAL:Primary,,,,,#VALUE!,"SCOPE - Availability IMPACT - DoS -  Resource Consumption (CPU) IMPACT - DoS -  Resource Consumption (Memory) IMPACT - DoS -  Amplification IMPACT - DoS -  Crash, Exit, or Restart NOTE - Excessive looping will cause unexpected consumption of resources, su","METHOD - Dynamic Analysis with Manual Results Interpretation DESCRIPTION - According to SOAR, the following detection techniques may be useful  Cost effective for partial coverage  Fuzz Tester Framework-based Fuzzer Forced Path Execution EFFECTIVENESS - S",,REFERENCE - CVE-2011-1027 DESCRIPTION - Chain: off-by-one error (CWE-193) leads to infinite loop (CWE-835) using invalid hex-encoded characters. LINK - https://www.cve.org/CVERecord?id=CVE-2011-1027  REFERENCE - CVE-2006-6499 DESCRIPTION - Chain: web brow,,,,,Research Concept
414,Missing Lock Check,Base,Draft,A product does not check to see if a lock is present before performing sensitive operations on a resource.,,NATURE:ChildOf:CWE ID:667 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,"SCOPE - Integrity SCOPE - Availability IMPACT - Modify Application Data IMPACT - DoS -  Instability IMPACT - DoS -  Crash, Exit, or Restart",,PHASE - Architecture and Design Implementation DESCRIPTION - Implement a reliable lock mechanism.,"REFERENCE - CVE-2004-1056 DESCRIPTION - Product does not properly check if a lock is present, allowing other attackers to access functionality. LINK - https://www.cve.org/CVERecord?id=CVE-2004-1056",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Missing Lock Check TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP19:ENTRY NAME:Missing Lock::,,"Software Development,Research Concept"
1268,Policy Privileges are not Assigned Consistently Between Control and Data Agents,Base,Draft,The product's hardware-enforced access control for a particular resource improperly accounts for privilege discrepancies between control and write policies.,"Integrated circuits and hardware engines may provide access to resources (device-configuration, encryption keys, etc.) belonging to trusted firmware or software modules (commonly set by a BIOS or a bootloader). These accesses are typically controlled and ",NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design: NOTE - This weakness may be introduced during the design of a device when the architect does not comprehensively specify all of the policies required by an agent. PHASE - Implementation: NOTE - This weakness may be introdu,"SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Access Control IMPACT - Modify Memory IMPACT - Read Memory IMPACT - DoS -  Crash, Exit, or Restart IMPACT - Execute Unauthorized Code or Commands IMPACT - Gain Privileges or Assume Ide",,PHASE - Architecture and Design Implementation DESCRIPTION - Access-control-policy definition and programming flow must be sufficiently tested in pre-silicon and post-silicon testing.,,,,,TYPE - Maintenance NOTE - This entry is still under development and will continue to see updates and content improvements.::,"Hardware Development,Research Concept"
1038,Insecure Automated Optimizations,Class,Draft,"The product uses a mechanism that automatically optimizes code, e.g. to improve a characteristic such as performance, but the optimizations can have an unintended side effect that might violate an intended security assumption.",,NATURE:ChildOf:CWE ID:435 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:758 VIEW ID:1000,: ORDINALITY:Primary:DESCRIPTION:This weakness does not depend on other weaknesses and is the result of choices made during optimization.::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - Optimizations built into the design of a product can have unintended consequences during execution.,SCOPE - Integrity IMPACT - Alter Execution Logic NOTE - The optimizations alter the order of execution resulting in side effects that were not intended by the original developer.,,,"REFERENCE - CVE-2017-5715 DESCRIPTION - Intel, ARM, and AMD processor optimizations related to speculative execution and branch prediction cause access control checks to be bypassed when placing data into the cache. Often known as Spectre. LINK - https://",,,,,Research Concept
432,Dangerous Signal Handler not Disabled During Sensitive Operations,Base,Draft,"The product uses a signal handler that shares state with other signal handlers, but it does not properly mask or prevent those signal handlers from being invoked while the original signal handler is still running.","During the execution of a signal handler, it can be interrupted by another handler when a different signal is sent. If the two handlers share state - such as global variables - then an attacker can corrupt the state by sending another signal before the fi",NATURE:ChildOf:CWE ID:364 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Modify Application Data,,PHASE - Implementation DESCRIPTION - Turn off dangerous handlers when performing sensitive operations.,,,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:SIG00-C:ENTRY NAME:Mask signals handled by noninterruptible signal handlers TAXONOMY NAME - PLOVER:ENTRY NAME:Dangerous handler not cleared/disabled during sensitive operations::,,Research Concept
5,J2EE Misconfiguration: Data Transmission Without Encryption,Variant,Draft,Information sent over a network can be compromised while in transit. An attacker may be able to read or modify the contents if the data are sent in plaintext or are weakly encrypted.,,NATURE:ChildOf:CWE ID:319 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation PHASE - Operation,SCOPE - Confidentiality IMPACT - Read Application Data  SCOPE - Integrity IMPACT - Modify Application Data,,PHASE - System Configuration DESCRIPTION - The product configuration should ensure that SSL or an encryption mechanism of equivalent strength and vetted reputation is used for all access-controlled pages.,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:J2EE Misconfiguration: Insecure Transport::,"TYPE - Other NOTE - If an application uses SSL to guarantee confidential communication with client browsers, the application configuration should make it impossible to view any access controlled page without SSL. There are three common ways for SSL to be ",Research Concept
250,Execution with Unnecessary Privileges,Base,Draft,"The product performs an operation at a privilege level that is higher than the minimum level required, which creates new weaknesses or amplifies the consequences of other weaknesses.","New weaknesses can be exposed because running with extra privileges, such as root or Administrator, can disable the normal security checks being performed by the operating system or surrounding environment. Other pre-existing weaknesses can turn into secu",NATURE:ChildOf:CWE ID:269 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:657 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Mobile TECHNOLOGY PREVALENCE:Undetermined,,,"PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. PHASE - Installation PHASE - Architecture and Design: NOTE - If an application has this design problem, then it can be easier fo","SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity IMPACT - Execute Unauthorized Code or Commands IMPACT - Read Application Data IMPACT - DoS -  Crash, Exit, or Restart NOTE - ","METHOD - Manual Analysis DESCRIPTION - This weakness can be detected using tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active ","PHASE - Architecture and Design Operation STRATEGY - Environment Hardening DESCRIPTION - Run your code using the lowest privileges that are required to accomplish the necessary tasks [REF-76]. If possible, create isolated accounts with limited privileges ","REFERENCE - CVE-2007-4217 DESCRIPTION - FTP client program on a certain OS runs with setuid privileges and has a buffer overflow. Most clients do not need extra privileges, so an overflow is not a vulnerability for those clients. LINK - https://www.cve.or",,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Often Misused: Privilege Management TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SER09-J:ENTRY NAME:Minimize privileges before deserializing from a privilege context TAXON,TYPE - Relationship NOTE - There is a close association with CWE-653 (Insufficient Separation of Privileges). CWE-653 is about providing separate components for each privilege; CWE-250 is about ensuring that each component has the least amount of privileg,"Software Development,Research Concept"
1123,Excessive Use of Self-Modifying Code,Base,Incomplete,The product uses too much self-modifying code.,"This issue makes it more difficult to understand or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",NATURE:ChildOf:CWE ID:1120 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,,,"Software Development,Research Concept"
546,Suspicious Comment,Variant,Draft,"The code contains comments that suggest the presence of bugs, incomplete functionality, or weaknesses.","Many suspicious comments, such as BUG, HACK, FIXME, LATER, LATER2, TODO, in the code indicate missing security functionality and checking. Others indicate code problems that programmers should fix, such as hard-coded variables, error handling, not using s",NATURE:ChildOf:CWE ID:1078 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Quality Degradation NOTE - Suspicious comments could be an indication that there are problems in the source code that may need to be fixed and is an indication of poor quality. This could lead to further bugs and the introduction of,,"PHASE - Documentation DESCRIPTION - Remove comments that suggest the presence of bugs, incomplete functionality, or weaknesses, before deploying the application.",,,,,,Research Concept
641,Improper Restriction of Names for Files and Other Resources,Base,Incomplete,"The product constructs the name of a file or other resource using input from an upstream component, but it does not restrict or incorrectly restricts the resulting name.","This may produce resultant weaknesses. For instance, if the names of these resources contain scripting characters, it is possible that a script may get executed in the client's browser if the application ever displays the name of the resource on a dynamic",NATURE:ChildOf:CWE ID:99 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands NOTE - Execution of arbitrary code in the context of usage of the resources with dangerous names.  SCOPE - Confidentiality SCOPE - Availability I,,PHASE - Architecture and Design DESCRIPTION - Do not allow users to control names of resources used on the server side.  PHASE - Architecture and Design DESCRIPTION - Perform allowlist input validation at entry points and also before consuming the resourc,,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,"Software Development,Research Concept"
392,Missing Report of Error Condition,Base,Draft,The product encounters an error but does not provide a status code or return value to indicate that an error has occurred.,,NATURE:ChildOf:CWE ID:755 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:684 VIEW ID:1000 NATURE:ChildOf:CWE ID:703 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:703 VIEW ID:1340 ORDINAL:Primary,: ORDINALITY:Primary: ORDINALITY:Resultant::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity SCOPE - Other IMPACT - Varies by Context IMPACT - Unexpected State NOTE - Errors that are not properly reported could place the system in an unexpected state that could lead to unintended behaviors.,,,"REFERENCE - [REF-1374] DESCRIPTION - Chain: JavaScript-based cryptocurrency library can fall back to the insecure Math.random() function instead of reporting a failure (CWE-392), thus reducing the entropy (CWE-332) and leading to generation of non-unique",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Missing Error Status Code TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:TPS03-J:ENTRY NAME:Ensure that tasks executing in a thread pool do not fail silently TAXONOMY NAME - Software Fault,,"Software Development,Research Concept"
550,Server-generated Error Message Containing Sensitive Information,Variant,Incomplete,"Certain conditions, such as network failure, will cause a server error message to be displayed.","While error messages in and of themselves are not dangerous, per se, it is what an attacker can glean from them that might cause eventual problems.",NATURE:ChildOf:CWE ID:209 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Confidentiality IMPACT - Read Application Data,,"PHASE - Architecture and Design System Configuration DESCRIPTION - Recommendations include designing and adding consistent error handling mechanisms which are capable of handling any user input to your web application, providing meaningful detail to end-u",,,,,,Research Concept
1023,Incomplete Comparison with Missing Factors,Class,Incomplete,"The product performs a comparison between entities that must consider multiple factors or characteristics of each entity, but the comparison does not include one or more of these factors.","An incomplete comparison can lead to resultant weaknesses, e.g., by operating on the wrong object or making a security decision without considering a required factor.",NATURE:ChildOf:CWE ID:697 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity SCOPE - Access Control IMPACT - Alter Execution Logic IMPACT - Bypass Protection Mechanism,,PHASE - Testing DESCRIPTION - Thoroughly test the comparison scheme before deploying code into production. Perform positive testing as well as negative testing.,"REFERENCE - CVE-2005-2782 DESCRIPTION - PHP remote file inclusion in web application that filters http and https URLs, but not ftp. LINK - https://www.cve.org/CVERecord?id=CVE-2005-2782  REFERENCE - CVE-2014-6394 DESCRIPTION - Product does not prevent acc",,,,,Research Concept
86,Improper Neutralization of Invalid Characters in Identifiers in Web Pages,Variant,Draft,"The product does not neutralize or incorrectly neutralizes invalid characters or byte sequences in the middle of tag names, URI schemes, and other identifiers.","Some web browsers may remove these sequences, resulting in output that may have unintended control implications. For example, the product may attempt to remove a javascript: URI scheme, but a java%00script: URI may bypass this check and still be rendered ",NATURE:ChildOf:CWE ID:79 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:184 VIEW ID:1000 NATURE:ChildOf:CWE ID:436 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Read Application Data IMPACT - Execute Unauthorized Code or Commands,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation STRATEGY - Output Encoding DESCRIPTION - Use and specify an output encoding that can be handled by the downstream component that is reading the output. Common encodings include ISO-8859-1, UTF-7, and UTF-8. When an encoding is not s","REFERENCE - CVE-2004-0595 DESCRIPTION - XSS filter doesn't filter null characters before looking for dangerous tags, which are ignored by web browsers. Multiple Interpretation Error (MIE) and validate-before-cleanse. LINK - https://www.cve.org/CVERecord?i",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Invalid Characters in Identifiers TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,Research Concept
759,Use of a One-Way Hash without a Salt,Variant,Incomplete,"The product uses a one-way cryptographic hash against an input that should not be reversible, such as a password, but the product does not also use a salt as part of the input.","This makes it easier for attackers to pre-compute the hash value using dictionary attack techniques such as rainbow tables. It should be noted that, despite common perceptions, the use of a good salt with a hash does not sufficiently increase the effort f",NATURE:ChildOf:CWE ID:916 VIEW ID:1000 ORDINAL:Primary,,,"In cryptography, salt refers to some random addition of data to an input before hashing to make dictionary attacks more difficult.",,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,"SCOPE - Access Control IMPACT - Bypass Protection Mechanism IMPACT - Gain Privileges or Assume Identity NOTE - If an attacker can gain access to the hashes, then the lack of a salt makes it easier to conduct brute force attacks using techniques such as ra","METHOD - Automated Static Analysis - Binary or Bytecode DESCRIPTION - According to SOAR, the following detection techniques may be useful  Cost effective for partial coverage  Bytecode Weakness Analysis - including disassembler + source code weakness anal","PHASE - Architecture and Design DESCRIPTION - Use an adaptive hash function that can be configured to change the amount of computational effort needed to compute the hash, such as the number of iterations (stretching) or the amount of memory required. Som","REFERENCE - CVE-2008-1526 DESCRIPTION - Router does not use a salt with a hash, making it easier to crack passwords. LINK - https://www.cve.org/CVERecord?id=CVE-2008-1526  REFERENCE - CVE-2006-1058 DESCRIPTION - Router does not use a salt with a hash, mak",,,,,Research Concept
331,Insufficient Entropy,Base,Draft,"The product uses an algorithm or scheme that produces insufficient entropy, leaving patterns or clusters of values that are more likely to occur than others.",,NATURE:ChildOf:CWE ID:330 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:330 VIEW ID:1003 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Access Control SCOPE - Other IMPACT - Bypass Protection Mechanism IMPACT - Other NOTE - An attacker could guess the random numbers generated and could gain unauthorized access to a system if the random numbers are used for authentication and autho,,PHASE - Implementation DESCRIPTION - Determine the necessary entropy to adequately provide for randomness and predictability. This can be achieved by increasing the number of bits of objects such as keys and seeds.,"REFERENCE - CVE-2001-0950 DESCRIPTION - Insufficiently random data used to generate session tokens using C rand(). Also, for certificate/key generation, uses a source that does not block when entropy is low. LINK - https://www.cve.org/CVERecord?id=CVE-200",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Insufficient Entropy TAXONOMY NAME - WASC:ENTRY ID:11:ENTRY NAME:Brute Force TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:MSC32-C:ENTRY NAME:Properly seed pseudorandom number generators:MAPPING FIT:Exact::,"TYPE - Maintenance NOTE - As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, randomness is used heavily. However, within cryptography, entropy is distinct, typically i","Software Development,Research Concept"
1193,Power-On of Untrusted Execution Core Before Enabling Fabric Access Control,Base,Draft,The product enables components that contain untrusted firmware before memory and fabric access controls have been enabled.,"After initial reset, System-on-Chip (SoC) fabric access controls and other security features need to be programmed by trusted firmware as part of the boot sequence. If untrusted IPs or peripheral microcontrollers are enabled first, then the untrusted comp",NATURE:ChildOf:CWE ID:696 VIEW ID:1000 ORDINAL:Primary,,,,,#VALUE!,SCOPE - Access Control IMPACT - Bypass Protection Mechanism LIKELIHOOD - High NOTE - An untrusted component can master transactions on the HW bus and target memory or other assets to compromise the SoC boot firmware.,,PHASE - Architecture and Design DESCRIPTION - The boot sequence should enable fabric access controls and memory protections before enabling third-party hardware IPs and peripheral microcontrollers that use untrusted firmware.,,,,,,"Hardware Development,Research Concept"
1422,Exposure of Sensitive Information caused by Incorrect Data Forwarding during Transient Execution,Base,Incomplete,"A processor event or prediction may allow incorrect or stale data to be forwarded to transient operations, potentially exposing data over a covert channel.","Software may use a variety of techniques to preserve the confidentiality of private data that is accessible within the current processor context. For example, the memory safety and type safety properties of some high-level programming languages help to pr",NATURE:ChildOf:CWE ID:1420 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:1420 VIEW ID:1194 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,"PHASE - Architecture and Design: NOTE - This weakness can be introduced by data speculation techniques, or when the processor pipeline is designed to check exception conditions concurrently with other operations. This weakness can also persist after a CWE",SCOPE - Confidentiality IMPACT - Read Memory LIKELIHOOD - Medium,"METHOD - Automated Static Analysis DESCRIPTION - A variety of automated static analysis tools can identify potentially exploitable code sequences in software. These tools may perform the analysis on source code, on binary code, or on an intermediate code ",PHASE - Architecture and Design DESCRIPTION - The hardware designer can attempt to prevent transient execution from causing observable discrepancies in specific covert channels. EFFECTIVENESS Limited  PHASE - Requirements DESCRIPTION - Processor designers,"REFERENCE - CVE-2020-0551 DESCRIPTION - A fault, microcode assist, or abort may allow transient load operations to forward malicious stale data to dependent operations executed by a victim, causing the victim to unintentionally access and potentially expo",,,,,"Hardware Development,Research Concept"
315,Cleartext Storage of Sensitive Information in a Cookie,Variant,Draft,The product stores sensitive information in cleartext in a cookie.,"Attackers can use widely-available tools to view the cookie and read the sensitive information. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode the inform",NATURE:ChildOf:CWE ID:312 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.,SCOPE - Confidentiality IMPACT - Read Application Data,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,REFERENCE - CVE-2002-1800 DESCRIPTION - Admin password in cleartext in a cookie. LINK - https://www.cve.org/CVERecord?id=CVE-2002-1800  REFERENCE - CVE-2001-1537 DESCRIPTION - Default configuration has cleartext usernames/passwords in cookie. LINK - https,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Plaintext Storage in Cookie TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::,"TYPE - Terminology NOTE - Different people use cleartext and plaintext to mean the same thing: the lack of encryption. However, within cryptography, these have more precise meanings. Plaintext is the information just before it is fed into a cryptographic ",Research Concept
1288,Improper Validation of Consistency within Input,Base,Incomplete,"The product receives a complex input with multiple elements or fields that must be consistent with each other, but it does not validate or incorrectly validates that the input is actually consistent.","Some input data can be structured with multiple elements or fields that must be consistent with each other, e.g. a number-of-items field that is followed by the expected number of elements. When such complex inputs are inconsistent, attackers could trigge",NATURE:ChildOf:CWE ID:20 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Often,,,PHASE - Implementation,SCOPE - Other IMPACT - Varies by Context,,"PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n",REFERENCE - CVE-2018-16733 DESCRIPTION - product does not validate that the start block appears before the end block LINK - https://www.cve.org/CVERecord?id=CVE-2018-16733  REFERENCE - CVE-2006-3790 DESCRIPTION - size field that is inconsistent with packe,,,,TYPE - Maintenance NOTE - This entry is still under development and will continue to see updates and content improvements.::,"Software Development,Research Concept"
271,Privilege Dropping / Lowering Errors,Class,Incomplete,The product does not drop privileges before passing control of a resource to an actor that does not have those privileges.,"In some contexts, a system executing with elevated permissions will hand off a process/file/etc. to another process or user. If the privileges of an entity are not reduced, then elevated privileges are spread throughout a system and possibly to an attacke",NATURE:ChildOf:CWE ID:269 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. PHASE - Operation,"SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - If privileges are not dropped, neither are access rights of the user. Often these rights can be prevented from being dropped.  SCOPE - Access Control SCOPE - Non-Repudiation IMPACT ",,PHASE - Architecture and Design STRATEGY - Separation of Privilege DESCRIPTION - Compartmentalize the system to have safe areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always b,REFERENCE - CVE-2000-1213 DESCRIPTION - Program does not drop privileges after acquiring the raw socket. LINK - https://www.cve.org/CVERecord?id=CVE-2000-1213  REFERENCE - CVE-2001-0559 DESCRIPTION - Setuid program does not drop privileges after a parsing,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Privilege Dropping / Lowering Errors::,"TYPE - Maintenance NOTE - CWE-271, CWE-272, and CWE-250 are all closely related and possibly overlapping. CWE-271 is probably better suited as a category.::",Research Concept
162,Improper Neutralization of Trailing Special Elements,Variant,Incomplete,"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes trailing special elements that could be interpreted in unexpected ways when they are sent to a downstream component.","As data is parsed, improperly handled trailing special elements may cause the process to take unexpected actions that result in an attack.",NATURE:ChildOf:CWE ID:138 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,"PHASE - DESCRIPTION - Developers should anticipate that trailing special elements will be injected/removed/manipulated in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and app",REFERENCE - CVE-2004-0847 DESCRIPTION - web framework for .NET allows remote attackers to bypass authentication for .aspx files in restricted directories via a request containing a (1) (backslash) or (2) %5C (encoded backslash) LINK - https://www.cve.org/,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Trailing Special Element TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,Research Concept
765,Multiple Unlocks of a Critical Resource,Base,Incomplete,"The product unlocks a critical resource more times than intended, leading to an unexpected state in the system.","When the product is operating in a concurrent environment and repeatedly unlocks a critical resource, the consequences will vary based on the type of lock, the lock's implementation, and the resource being protected. In some situations such as with semaph",NATURE:ChildOf:CWE ID:667 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:675 VIEW ID:1000,,,,,PHASE - Implementation,"SCOPE - Availability SCOPE - Integrity IMPACT - DoS -  Crash, Exit, or Restart IMPACT - Modify Memory IMPACT - Unexpected State",,"PHASE - Implementation DESCRIPTION - When locking and unlocking a resource, try to be sure that all control paths through the code in which the resource is locked one or more times correspond to exactly as many unlocks. If the product acquires a lock and ","REFERENCE - CVE-2009-0935 DESCRIPTION - Attacker provides invalid address to a memory-reading function, causing a mutex to be unlocked twice LINK - https://www.cve.org/CVERecord?id=CVE-2009-0935",,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP21:ENTRY NAME:Multiple locks/unlocks::,"TYPE - Maintenance NOTE - An alternate way to think about this weakness is as an imbalance between the number of locks / unlocks in the control flow. Over the course of execution, if each lock call is not followed by a subsequent call to unlock in a reaso","Software Development,Research Concept"
420,Unprotected Alternate Channel,Base,Draft,"The product protects a primary channel, but it does not use the same level of protection for an alternate channel.",,NATURE:ChildOf:CWE ID:923 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase. PHASE - Implementation PHASE - Operation,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity IMPACT - Bypass Protection Mechanism,,PHASE - Architecture and Design DESCRIPTION - Identify all alternate channels and use the same protection mechanisms that are used for the primary channels.,"REFERENCE - CVE-2020-8004 DESCRIPTION - When the internal flash is protected by blocking access on the Data Bus (DBUS), it can still be indirectly accessed through the Instruction Bus (IBUS). LINK - https://www.cve.org/CVERecord?id=CVE-2020-8004  REFERENC",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Unprotected Alternate Channel::,"TYPE - Relationship NOTE - This can be primary to authentication errors, and resultant from unhandled error conditions.::","Software Development,Research Concept"
1321,Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution'),Variant,Incomplete,"The product receives input from an upstream component that specifies attributes that are to be initialized or updated in an object, but it does not properly control modifications of attributes of the object prototype.","By adding or modifying attributes of an object prototype, it is possible to create attributes that exist on every object, or replace critical attributes with malicious ones. This can be problematic if the product depends on existence or non-existence of c",NATURE:ChildOf:CWE ID:915 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:913 VIEW ID:1003 ORDINAL:Primary NATURE:CanPrecede:CWE ID:471 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:JavaScript LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,"SCOPE - Integrity IMPACT - Modify Application Data LIKELIHOOD - High NOTE - An attacker can inject attributes that are used in other components.  SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart LIKELIHOOD - High NOTE - An attacker can overrid",,"PHASE - Implementation DESCRIPTION - By freezing the object prototype first (for example, Object.freeze(Object.prototype)), modification of the prototype becomes impossible. EFFECTIVENESS High  PHASE - Architecture and Design DESCRIPTION - By blocking mod",REFERENCE - CVE-2018-3721 DESCRIPTION - Prototype pollution by merging objects. LINK - https://www.cve.org/CVERecord?id=CVE-2018-3721  REFERENCE - CVE-2019-10744 DESCRIPTION - Prototype pollution by setting default values to object attributes recursively.,,,,,Research Concept
1102,Reliance on Machine-Dependent Data Representation,Base,Incomplete,"The code uses a data representation that relies on low-level data representation or constructs that may vary across different processors, physical machines, OSes, or other physical components.","This issue makes it more difficult to maintain and/or port the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",NATURE:ChildOf:CWE ID:758 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:1105 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,,,"Software Development,Research Concept"
621,Variable Extraction Error,Variant,Incomplete,"The product uses external input to determine the names of variables into which information is extracted, without verifying that the names of the specified variables are valid. This could cause the program to overwrite unintended variables.","For example, in PHP, extraction can be used to provide functionality similar to register_globals, a dangerous functionality that is frequently disabled in production systems. Calling extract() or import_request_variables() without the proper arguments cou",NATURE:ChildOf:CWE ID:914 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:471 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE NAME:PHP LANGUAGE PREVALENCE:Undetermined,,TERM - Variable overwrite::,PHASE - Implementation,SCOPE - Integrity IMPACT - Modify Application Data NOTE - An attacker could modify sensitive data or program variables.,,PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Use allowlists of variable names that can be extracted.  PHASE - Implementation DESCRIPTION - Consider refactoring your code to avoid extraction routines altogether.  PHASE - Implementation ,"REFERENCE - CVE-2006-7135 DESCRIPTION - extract issue enables file inclusion LINK - https://www.cve.org/CVERecord?id=CVE-2006-7135  REFERENCE - CVE-2006-7079 DESCRIPTION - Chain: PHP app uses extract for register_globals compatibility layer (CWE-621), ena",,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,TYPE - Research Gap NOTE - Probably under-reported for PHP. Seems under-studied for other interpreted languages.::,Research Concept
705,Incorrect Control Flow Scoping,Class,Incomplete,The product does not properly return control flow to the proper location after it has completed a task or detected an unusual condition.,,NATURE:ChildOf:CWE ID:691 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Alter Execution Logic IMPACT - Other,,,REFERENCE - CVE-2023-21087 DESCRIPTION - Java code in a smartphone OS can encounter a boot loop due to an uncaught exception LINK - https://www.cve.org/CVERecord?id=CVE-2023-21087  REFERENCE - CVE-2014-1266 DESCRIPTION - chain: incorrect goto in Apple SSL,,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:ENV32-C:ENTRY NAME:All exit handlers must return normally:MAPPING FIT:CWE More Abstract TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:ERR04-C:ENTRY NAME:Choose an appropriate termination strategy TAXONOMY NAME,,Research Concept
412,Unrestricted Externally Accessible Lock,Base,Incomplete,"The product properly checks for the existence of a lock, but the lock can be externally controlled or influenced by an actor that is outside of the intended sphere of control.","This prevents the product from acting on associated resources or performing other behaviors that are controlled by the presence of the lock. Relevant locks might include an exclusive lock or mutex, or modifying a shared resource that is treated as a lock.",NATURE:ChildOf:CWE ID:667 VIEW ID:1000 ORDINAL:Primary NATURE:CanAlsoBe:CWE ID:410 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,"SCOPE - Availability IMPACT - DoS -  Resource Consumption (Other) NOTE - When an attacker can control a lock, the program may wait indefinitely until the attacker releases the lock, causing a denial of service to other users of the program. This is especi","METHOD - White Box DESCRIPTION - Automated code analysis techniques might not be able to reliably detect this weakness, since the application's behavior and general security model dictate which resource locks are critical. Interpretation of the weakness m",PHASE - Architecture and Design Implementation DESCRIPTION - Use any access control that is offered by the functionality that is offering the lock.  PHASE - Architecture and Design Implementation DESCRIPTION - Use unpredictable names or identifiers for th,REFERENCE - CVE-2001-0682 DESCRIPTION - Program can not execute when attacker obtains a mutex. LINK - https://www.cve.org/CVERecord?id=CVE-2001-0682  REFERENCE - CVE-2002-1914 DESCRIPTION - Program can not execute when attacker obtains a lock on a critica,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Unrestricted Critical Resource Lock TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Deadlock TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific TAXONOMY NAME - The C,"TYPE - Relationship NOTE - This overlaps Insufficient Resource Pool when the pool is of size 1. It can also be resultant from race conditions, although the timing window could be quite large in some cases.::","Software Development,Research Concept"
229,Improper Handling of Values,Base,Incomplete,"The product does not properly handle when the expected number of values for parameters, fields, or arguments is not provided in input, or if those values are undefined.",,NATURE:ChildOf:CWE ID:228 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,,,,,,,"Software Development,Research Concept"
582,"Array Declared Public, Final, and Static",Variant,Draft,"The product declares an array public, final, and static, which is not sufficient to prevent the array's contents from being modified.","Because arrays are mutable objects, the final constraint requires that the array object itself be assigned only once, but makes no guarantees about the values of the array elements. Since the array is public, a malicious program can change the values stor",NATURE:ChildOf:CWE ID:668 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,"Mobile code, in this case a Java Applet, is code that is transmitted across a network and executed on a remote machine. Because mobile code developers have little if any control of the environment in which their code will execute, special security concern",,PHASE - Implementation,SCOPE - Integrity IMPACT - Modify Application Data,,PHASE - Implementation DESCRIPTION - In most situations the array should be made private.,,,,TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:OBJ10-J:ENTRY NAME:Do not use public static nonfinal variables TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP28:ENTRY NAME:Unexpected Access Points::,,Research Concept
1244,Internal Asset Exposed to Unsafe Debug Access Level or State,Base,Stable,"The product uses physical debug or test interfaces with support for multiple access levels, but it assigns the wrong debug access level to an internal asset, providing unintended access to the asset from untrusted debug agents.","Debug authorization can have multiple levels of access, defined such that different system internal assets are accessible based on the current authorized debug level. Other than debugger authentication (e.g., using passwords or challenges), the authorizat",NATURE:ChildOf:CWE ID:863 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:System,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Memory  SCOPE - Integrity IMPACT - Modify Memory  SCOPE - Authorization SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity IMPACT - Bypass Protection Mechanism,"METHOD - Manual Analysis DESCRIPTION - Check 2 devices for their passcode to authenticate access to JTAG/debugging ports. If the passcodes are missing or the same, update the design to fix and retest. Check communications over JTAG/debugging ports for enc","PHASE - Architecture and Design Implementation DESCRIPTION - For security-sensitive assets accessible over debug/test interfaces, only allow trusted agents. EFFECTIVENESS High  PHASE - Architecture and Design DESCRIPTION - Apply blinding [REF-1219] or mas","REFERENCE - CVE-2019-18827 DESCRIPTION - After ROM code execution, JTAG access is disabled. But before the ROM code is executed, JTAG access is possible, allowing a user full system access. This allows a user to modify the boot flow and successfully bypas",,,,"TYPE - Relationship NOTE - CWE-1191 and CWE-1244 both involve physical debug access, but the weaknesses are different. CWE-1191 is effectively about missing authorization for a debug interface, i.e. JTAG. CWE-1244 is about providing internal assets with t","Hardware Development,Research Concept"
91,XML Injection (aka Blind XPath Injection),Base,Draft,"The product does not properly neutralize special elements that are used in XML, allowing attackers to modify the syntax, content, or commands of the XML before it is processed by an end system.","Within XML, special elements could include reserved words or characters such as<, > , , and &, which could then be used to add new data or modify XML syntax.",NATURE:ChildOf:CWE ID:74 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:74 VIEW ID:1003 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands IMPACT - Read Application Data IMPACT - Modify Application Data,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n",,,,TAXONOMY NAME - PLOVER:ENTRY NAME:XML injection (aka Blind Xpath injection) TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A2:ENTRY NAME:Injection Flaws:MAPPING FIT:CWE More Specific TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A6:ENTRY NAME:Injection Flaws:M,"TYPE - Maintenance NOTE - The description for this entry is generally applicable to XML, but the name includes blind XPath injection which is more closely associated with CWE-643. Therefore this entry might need to be deprecated or converted to a general ","Software Development,Research Concept"
831,Signal Handler Function Associated with Multiple Signals,Variant,Incomplete,The product defines a function that is used as a handler for more than one signal.,"While sometimes intentional and safe, when the same function is used to handle multiple signals, a race condition could occur if the function uses any state outside of its local declaration, such as global variables or non-reentrant functions, or has any ",NATURE:ChildOf:CWE ID:364 VIEW ID:1000 ORDINAL:Primary,,,,,#VALUE!,"SCOPE - Availability SCOPE - Integrity SCOPE - Confidentiality SCOPE - Access Control SCOPE - Other IMPACT - DoS -  Crash, Exit, or Restart IMPACT - Execute Unauthorized Code or Commands IMPACT - Read Application Data IMPACT - Gain Privileges or Assume Id",,,,,,,,Research Concept
299,Improper Check for Certificate Revocation,Base,Draft,"The product does not check or incorrectly checks the revocation status of a certificate, which may cause it to use a certificate that has been compromised.",An improper check for certificate revocation is a far more serious flaw than related certificate failures. This is because the use of any revoked certificate is almost certainly malicious. The most common reason for certificate revocation is compromise of,NATURE:ChildOf:CWE ID:295 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:404 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,"PHASE - Implementation: NOTE - When the product uses certificate pinning, the developer might not properly validate all relevant components of the certificate before pinning the certificate. This can make it difficult or expensive to test after the pinnin",SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - Trust may be assigned to an entity who is not who it claims to be.  SCOPE - Integrity SCOPE - Other IMPACT - Other NOTE - Data from an untrusted (and possibly malicious) source may ,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Architecture and Design DESCRIPTION - Ensure that certificates are checked for revoked status.  PHASE - Implementation DESCRIPTION - If certificate pinning is being used, ensure that all relevant properties of the certificate are fully validated b","REFERENCE - CVE-2011-2014 DESCRIPTION - LDAP-over-SSL implementation does not check Certificate Revocation List (CRL), allowing spoofing using a revoked certificate. LINK - https://www.cve.org/CVERecord?id=CVE-2011-2014  REFERENCE - CVE-2011-0199 DESCRIPT",,,TAXONOMY NAME - CLASP:ENTRY NAME:Failure to check for certificate revocation::,,Research Concept
639,Authorization Bypass Through User-Controlled Key,Base,Incomplete,The system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.,Retrieval of a user record occurs in the system based on some key value that is under user control. The key would typically identify a user-related record stored in the system and would be used to lookup that record for presentation to the user. It is lik,NATURE:ChildOf:CWE ID:863 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:863 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:284 VIEW ID:1340 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,"TERM - Insecure Direct Object Reference / IDOR DESCRIPTION - The Insecure Direct Object Reference term, as described in the OWASP Top Ten, is broader than this CWE because it also covers path traversal (CWE-22). Within the context of vulnerability theory,",PHASE - Architecture and Design: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Access Control IMPACT - Bypass Protection Mechanism NOTE - Access control checks for specific user data or functionality can be bypassed.  SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - Horizontal escalation of privilege,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Architecture and Design DESCRIPTION - For each and every data access, ensure that the user has sufficient privilege to access the record that is being requested.  PHASE - Architecture and Design Implementation DESCRIPTION - Make sure that the key ","REFERENCE - CVE-2021-36539 DESCRIPTION - An educational application does not appropriately restrict file IDs to a particular user. The attacker can brute-force guess IDs, indicating IDOR. LINK - https://www.cve.org/CVERecord?id=CVE-2021-36539",,,,,"Software Development,Research Concept"
238,Improper Handling of Incomplete Structural Elements,Variant,Draft,The product does not handle or incorrectly handles when a particular structural element is not completely specified.,,NATURE:ChildOf:CWE ID:237 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Resultant::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,,,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Missing Element Error::,TYPE - Relationship NOTE - Can be primary to other problems.::,Research Concept
1065,Runtime Resource Management Control Element in a Component Built to Run on Application Servers,Base,Incomplete,"The product uses deployed components from application servers, but it also uses low-level functions/methods for management of resources, instead of the API provided by the application server.","This issue can prevent the product from running reliably. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.",NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Reliability,,,,,,TAXONOMY NAME - OMG ASCRM:ENTRY ID:ASCRM-RLB-5::,,"Software Development,Research Concept"
619,Dangling Database Cursor ('Cursor Injection'),Base,Incomplete,"If a database cursor is not closed properly, then it could become accessible to other users while retaining the same privileges that were originally assigned, leaving the cursor dangling.","For example, an improper dangling cursor could arise from unhandled exceptions. The impact of the issue depends on the cursor's role, but SQL injection attacks are commonly possible.",NATURE:ChildOf:CWE ID:402 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary:DESCRIPTION:This could be primary when the programmer never attempts to close the cursor when finished with it.: ORDINALITY:Resultant::,LANGUAGE NAME:SQL LANGUAGE PREVALENCE:Undetermined,A cursor is a feature in Oracle PL/SQL and other languages that provides a handle for executing and accessing the results of SQL queries.,,"PHASE - Implementation: NOTE - This issue is currently reported for unhandled exceptions, but it is theoretically possible any time the programmer does not close the cursor at the proper time.",SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Application Data IMPACT - Modify Application Data,,PHASE - Implementation DESCRIPTION - Close cursors immediately after access to them is complete. Ensure that you close cursors if exceptions occur.,,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,"Software Development,Research Concept"
680,Integer Overflow to Buffer Overflow,Compound,Draft,"The product performs a calculation to determine how much memory to allocate, but an integer overflow can occur that causes less memory to be allocated than expected, leading to a buffer overflow.",,NATURE:StartsWith:CWE ID:190 VIEW ID:709:CHAIN ID:680 NATURE:ChildOf:CWE ID:190 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,#VALUE!,"SCOPE - Integrity SCOPE - Availability SCOPE - Confidentiality IMPACT - Modify Memory IMPACT - DoS -  Crash, Exit, or Restart IMPACT - Execute Unauthorized Code or Commands",,,"REFERENCE - CVE-2021-43537 DESCRIPTION - Chain: in a web browser, an unsigned 64-bit integer is forcibly cast to a 32-bit integer (CWE-681) and potentially leading to an integer overflow (CWE-190). If an integer overflow occurs, this can cause heap memory",,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:INT30-C:ENTRY NAME:Ensure that unsigned integer operations do not wrap:MAPPING FIT:Imprecise TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:INT32-C:ENTRY NAME:Ensure that operations on signed integers do not re,,Research Concept
644,Improper Neutralization of HTTP Headers for Scripting Syntax,Variant,Incomplete,"The product does not neutralize or incorrectly neutralizes web scripting syntax in HTTP headers that can be used by web browser components that can process raw headers, such as Flash.","An attacker may be able to conduct cross-site scripting and other attacks against users who have these components enabled. If a product does not neutralize user controlled data being placed in the header of an HTTP response coming from the server, the hea",NATURE:ChildOf:CWE ID:116 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Web Based TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands NOTE - Run arbitrary code.  SCOPE - Confidentiality IMPACT - Read Application Data NOTE - Attackers may be able to obtain sensitive information.,,PHASE - Architecture and Design DESCRIPTION - Perform output validation in order to filter/escape/encode unsafe data that is being passed from the server in an HTTP response header.  PHASE - Architecture and Design DESCRIPTION - Disable script execution f,"REFERENCE - CVE-2006-3918 DESCRIPTION - Web server does not remove the Expect header from an HTTP request when it is reflected back in an error message, allowing a Flash SWF file to perform XSS attacks. LINK - https://www.cve.org/CVERecord?id=CVE-2006-391",,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,Research Concept
56,Path Equivalence: 'filedir*' (Wildcard),Variant,Incomplete,"The product accepts path input in the form of asterisk wildcard ('filedir*') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",,NATURE:ChildOf:CWE ID:41 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:155 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same inpu,REFERENCE - CVE-2004-0696 DESCRIPTION - List directories using desired path and * LINK - https://www.cve.org/CVERecord?id=CVE-2004-0696  REFERENCE - CVE-2002-0433 DESCRIPTION - List files in web server using *.ext LINK - https://www.cve.org/CVERecord?id=C,,,TAXONOMY NAME - PLOVER:ENTRY NAME:filedir* (asterisk / wildcard) TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,,Research Concept
794,Incomplete Filtering of Multiple Instances of Special Elements,Variant,Incomplete,"The product receives data from an upstream component, but does not filter all instances of a special element before sending it to a downstream component.",Incomplete filtering of this nature may be applied to: sequential elements (special elements that appear next to each other) or non-sequential elements (special elements that appear multiple times in different locations).,NATURE:ChildOf:CWE ID:792 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Integrity IMPACT - Unexpected State,,,,,,,,Research Concept
469,Use of Pointer Subtraction to Determine Size,Base,Draft,"The product subtracts one pointer from another in order to determine size, but this calculation can be incorrect if the pointers do not exist in the same memory chunk.",,NATURE:ChildOf:CWE ID:682 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Access Control SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability IMPACT - Modify Memory IMPACT - Read Memory IMPACT - Execute Unauthorized Code or Commands IMPACT - Gain Privileges or Assume Identity NOTE - There is the potential for ,"METHOD - Fuzzing DESCRIPTION - Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often c","PHASE - Implementation DESCRIPTION - Save an index variable. This is the recommended solution. Rather than subtract pointers from one another, use an index variable of the same size as the pointers in question. Use this variable to walk from one pointer t",,,,TAXONOMY NAME - CLASP:ENTRY NAME:Improper pointer subtraction TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:ARR36-C:ENTRY NAME:Do not subtract or compare two pointers that do not refer to the same array:MAPPING FIT:Exact TAXONOMY NAME - Software Fault Pat,,"Software Development,Research Concept"
358,Improperly Implemented Security Check for Standard,Base,Draft,"The product does not implement or incorrectly implements one or more security-relevant checks as specified by the design of a standardized algorithm, protocol, or technique.",,NATURE:ChildOf:CWE ID:573 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:693 VIEW ID:1000 NATURE:CanAlsoBe:CWE ID:345 VIEW ID:1000 NATURE:CanAlsoBe:CWE ID:290 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,"PHASE - Architecture and Design PHASE - Implementation: NOTE - This is an implementation error, in which the algorithm/technique requires certain security-related behaviors or conditions that are not implemented or checked properly, thus causing a vulnera",SCOPE - Access Control IMPACT - Bypass Protection Mechanism,,,"REFERENCE - CVE-2002-0862 DESCRIPTION - Browser does not verify Basic Constraints of a certificate, even though it is required, allowing spoofing of trusted certificates. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0862  REFERENCE - CVE-2002-0970 DES",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Improperly Implemented Security Check for Standard::,"TYPE - Relationship NOTE - This is a missing step error on the product side, which can overlap weaknesses such as insufficient verification and spoofing. It is frequently found in cryptographic and authentication errors. It is sometimes resultant.::","Software Development,Research Concept"
538,Insertion of Sensitive Information into Externally-Accessible File or Directory,Base,Draft,"The product places sensitive information into files or directories that are accessible to actors who are allowed to have access to the files, but not to the sensitive information.",,NATURE:ChildOf:CWE ID:200 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase. PHASE - Operation: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and de,SCOPE - Confidentiality IMPACT - Read Files or Directories,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design Operation System Configuration DESCRIPTION - Do not expose file and directory information to the user.,REFERENCE - CVE-2018-1999036 DESCRIPTION - SSH password for private key stored in build log LINK - https://www.cve.org/CVERecord?id=CVE-2018-1999036,,,,"TYPE - Maintenance NOTE - Depending on usage, this could be a weakness or a category. Further study of all its children is needed, and the entire sub-tree may need to be clarified. The current organization is based primarily on the exposure of sensitive i","Software Development,Research Concept"
689,Permission Race Condition During Resource Copy,Compound,Draft,"The product, while copying or cloning a resource, does not set the resource's permissions or access control until the copy is complete, leaving the resource exposed to other spheres while the copy is taking place.",,NATURE:ChildOf:CWE ID:362 VIEW ID:1000 ORDINAL:Primary NATURE:Requires:CWE ID:362 VIEW ID:1000 NATURE:Requires:CWE ID:732 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Perl LANGUAGE PREVALENCE:Undetermined,,,"PHASE - Implementation: NOTE - Common examples occur in file archive extraction, in which the product begins the extraction with insecure default permissions, then only sets the final permissions (as specified in the archive) once the copy is complete. Th",SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Application Data IMPACT - Modify Application Data,,,"REFERENCE - CVE-2002-0760 DESCRIPTION - Archive extractor decompresses files with world-readable permissions, then later sets permissions to what the archive specified. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0760  REFERENCE - CVE-2005-2174 DESCR",,,,"TYPE - Research Gap NOTE - Under-studied. It seems likely that this weakness could occur in any situation in which a complex or large copy operation occurs, when the resource can be made available to other spheres as soon as it is created, but before its ",Research Concept
480,Use of Incorrect Operator,Base,Draft,"The product accidentally uses the wrong operator, which changes the logic in security-relevant ways.",These types of errors are generally the result of a typo by the programmer.,NATURE:ChildOf:CWE ID:670 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Sometimes LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Sometimes LANGUAGE NAME:Perl LANGUAGE PREVALENCE:Sometimes LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Alter Execution Logic NOTE - This weakness can cause unintended logic to be executed and other unexpected application behavior.,"METHOD - Automated Static Analysis DESCRIPTION - This weakness can be found easily using static analysis. However in some cases an operator might appear to be incorrect, but is actually correct and reflects unusual logic within the program.  METHOD - Manu",,"REFERENCE - CVE-2022-3979 DESCRIPTION - Chain: data visualization program written in PHP uses the != operator instead of the type-strict !== operator (CWE-480) when validating hash values, potentially leading to an incorrect type conversion (CWE-704) LINK",,,TAXONOMY NAME - CLASP:ENTRY NAME:Using the wrong operator TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:EXP45-C:ENTRY NAME:Do not perform assignments in selection statements:MAPPING FIT:CWE More Abstract TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:EXP46,,"Software Development,Research Concept"
1243,Sensitive Non-Volatile Information Not Protected During Debug,Base,Incomplete,Access to security-sensitive information stored in fuses is not limited during debug.,"Several security-sensitive values are programmed into fuses to be used during early-boot flows or later at runtime. Examples of these security-sensitive values include root keys, encryption keys, manufacturing-specific information, chip-manufacturer-speci",NATURE:ChildOf:CWE ID:1263 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality SCOPE - Access Control IMPACT - Modify Memory IMPACT - Bypass Protection Mechanism,,PHASE - Architecture and Design Implementation DESCRIPTION - Disable access to security-sensitive information stored in fuses directly and also reflected from temporary storage locations when in debug mode.,,,,,,"Hardware Development,Research Concept"
51,Path Equivalence: '/multiple//internal/slash',Variant,Incomplete,"The product accepts path input in the form of multiple internal slash ('/multiple//internal/slash/') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or a",,NATURE:ChildOf:CWE ID:41 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same inpu,REFERENCE - CVE-2002-1483 DESCRIPTION - Read files with full pathname using multiple internal slash. LINK - https://www.cve.org/CVERecord?id=CVE-2002-1483,,,TAXONOMY NAME - PLOVER:ENTRY NAME:/multiple//internal/slash ('multiple internal slash') TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,,Research Concept
648,Incorrect Use of Privileged APIs,Base,Incomplete,The product does not conform to the API requirements for a function call that requires extra privileges. This could allow attackers to gain privileges by causing the function to be called incorrectly.,"When a product contains certain functions that perform operations requiring an elevated level of privilege, the caller of a privileged API must be careful to: ensure that assumptions made by the APIs are valid, such as validity of arguments account for kn",NATURE:ChildOf:CWE ID:269 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation PHASE - Operation,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - An attacker may be able to elevate privileges.  SCOPE - Confidentiality IMPACT - Read Application Data NOTE - An attacker may be able to obtain sensitive information.  SCOPE - Integ,,"PHASE - Implementation DESCRIPTION - Before calling privileged APIs, always ensure that the assumptions made by the privileged code hold true prior to making the call.  PHASE - Architecture and Design DESCRIPTION - Know architecture and implementation wea","REFERENCE - CVE-2003-0645 DESCRIPTION - A Unix utility that displays online help files, if installed setuid, could allow a local attacker to gain privileges when a particular file-opening function is called. LINK - https://www.cve.org/CVERecord?id=CVE-200",,,,,"Software Development,Research Concept"
1115,Source Code Element without Standard Prologue,Base,Incomplete,The source code contains elements such as source files that do not consistently provide a prologue or header that has been standardized for the project.,"The lack of a prologue can make it more difficult to accurately and quickly understand the associated code. Standard prologues or headers may contain information such as module name, version number, author, date, purpose, function, assumptions, limitation",NATURE:ChildOf:CWE ID:1078 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,#VALUE!,,,,,,,,"Software Development,Research Concept"
47,Path Equivalence: ' filename' (Leading Space),Variant,Incomplete,"The product accepts path input in the form of leading space (' filedir') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or access arbitrary files.",,NATURE:ChildOf:CWE ID:41 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,,,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Leading Space - ' filedir' TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,,Research Concept
615,Inclusion of Sensitive Information in Source Code Comments,Variant,Incomplete,"While adding general comments is very useful, some programmers tend to leave important data, such as: filenames related to the web application, old links or links which were not meant to be browsed by users, old code fragments, etc.","An attacker who finds these comments can map the application's structure and files, expose hidden parts of the site, and study the fragments of code to reverse engineer the application, which may help develop further attacks against the site.",NATURE:ChildOf:CWE ID:540 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:546 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Application Data,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Distribution DESCRIPTION - Remove comments which have sensitive information about the design/implementation of the application. Some of the comments may be exposed to the user and affect the security posture of the application.,REFERENCE - CVE-2007-6197 DESCRIPTION - Version numbers and internal hostnames leaked in HTML comments. LINK - https://www.cve.org/CVERecord?id=CVE-2007-6197  REFERENCE - CVE-2007-4072 DESCRIPTION - CMS places full pathname of server in HTML comment. LINK,,,,,Research Concept
775,Missing Release of File Descriptor or Handle after Effective Lifetime,Variant,Incomplete,"The product does not release a file descriptor or handle after its effective lifetime has ended, i.e., after the file descriptor/handle is no longer needed.","When a file descriptor or handle is not released after use (typically by explicitly closing it), attackers can cause a denial of service by consuming all available file descriptors/handles, or otherwise preventing other system processes from obtaining the",NATURE:ChildOf:CWE ID:772 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:404 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:404 VIEW ID:1340 ORDINAL:Primary,,,,,PHASE - Implementation,SCOPE - Availability IMPACT - DoS -  Resource Consumption (Other) NOTE - An attacker that can influence the allocation of resources that are not properly released could deplete the available resource pool and prevent all other processes from accessing the,,"PHASE - Operation Architecture and Design STRATEGY - Resource Limitation DESCRIPTION - Use resource-limiting settings provided by the operating system or environment. For example, when managing system resources in POSIX, setrlimit() can be used to set lim",REFERENCE - CVE-2007-0897 DESCRIPTION - Chain: anti-virus product encounters a malformed file but returns from a function without closing a file descriptor (CWE-775) leading to file descriptor consumption (CWE-400) and failed scans. LINK - https://www.cve,,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FIO42-C:ENTRY NAME:Close files when they are no longer needed:MAPPING FIT:CWE More Abstract TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP14:ENTRY NAME:Failure to Release Resource::,,Research Concept
1334,Unauthorized Error Injection Can Degrade Hardware Redundancy,Base,Draft,An unauthorized agent can inject errors into a redundant block to deprive the system of redundancy or put the system in a degraded operating mode.,"To ensure the performance and functional reliability of certain components, hardware designers can implement hardware blocks for redundancy in the case that others fail. This redundant block can be prevented from performing as intended if the design allow",NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design: NOTE - Such issues could be introduced during hardware architecture and design and identified later during Testing or System Configuration phases. PHASE - Implementation: NOTE - Such issues could be introduced during imple,"SCOPE - Integrity SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart IMPACT - DoS -  Instability IMPACT - Quality Degradation IMPACT - DoS -  Resource Consumption (CPU) IMPACT - DoS -  Resource Consumption (Memory) IMPACT - DoS -  Resource Consu",,PHASE - Architecture and Design DESCRIPTION - Ensure the design does not allow error injection in modes intended for normal run-time operation. Provide access controls on interfaces for injecting errors.  PHASE - Implementation DESCRIPTION - Disallow erro,,,,,,"Hardware Development,Research Concept"
261,Weak Encoding for Password,Base,Incomplete,Obscuring a password with a trivial encoding does not protect the password.,"Password management issues occur when a password is stored in plaintext in an application's properties or configuration file. A programmer can attempt to remedy the password management problem by obscuring the password with an encoding function, such as b",NATURE:ChildOf:CWE ID:522 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - DESCRIPTION - Passwords should be encrypted with keys that are at least 128 bits in length for adequate security.,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Password Management: Weak Cryptography TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A8:ENTRY NAME:Insecure Storage:MAPPING FIT:CWE More Specific::,TYPE - Other NOTE - The crypt family of functions uses weak cryptographic algorithms and should be avoided. It may be present in some projects for compatibility.::,"Software Development,Research Concept"
295,Improper Certificate Validation,Base,Draft,"The product does not validate, or incorrectly validates, a certificate.","When a certificate is invalid or malicious, it might allow an attacker to spoof a trusted entity by interfering in the communication path between the host and client. The product might connect to a malicious host while believing it is a trusted host, or t",NATURE:ChildOf:CWE ID:287 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:287 VIEW ID:1003 ORDINAL:Primary NATURE:PeerOf:CWE ID:322 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Mobile TECHNOLOGY PREVALENCE:Undetermined,A certificate is a token that associates an identity (principal) to a cryptographic key. Certificates can be used to check if a public key belongs to the assumed owner.,,"PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. PHASE - Implementation: NOTE - When the product uses certificate pinning, the developer might no",SCOPE - Integrity SCOPE - Authentication IMPACT - Bypass Protection Mechanism IMPACT - Gain Privileges or Assume Identity,"METHOD - Automated Static Analysis - Binary or Bytecode DESCRIPTION - According to SOAR, the following detection techniques may be useful  Cost effective for partial coverage  Bytecode Weakness Analysis - including disassembler + source code weakness anal",PHASE - Architecture and Design Implementation DESCRIPTION - Certificates should be carefully managed and checked to assure that data are encrypted with the intended owner's public key.  PHASE - Implementation DESCRIPTION - If certificate pinning is being,"REFERENCE - CVE-2019-12496 DESCRIPTION - A Go framework for robotics, drones, and IoT devices skips verification of root CA certificates by default. LINK - https://www.cve.org/CVERecord?id=CVE-2019-12496  REFERENCE - CVE-2014-1266 DESCRIPTION - chain: inc",,,TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A10:ENTRY NAME:Insecure Configuration Management:MAPPING FIT:CWE More Specific::,,"Software Development,Research Concept"
1089,Large Data Table with Excessive Number of Indices,Base,Incomplete,The product uses a large data table that contains an excessively large number of indices.,"This issue can make the product perform more slowly. If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability. While the interpretation of large data table and excessively large number of indices may ",NATURE:ChildOf:CWE ID:405 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Performance,,,,,,TAXONOMY NAME - OMG ASCPEM:ENTRY ID:ASCPEM-PRF-6::,,"Software Development,Research Concept"
617,Reachable Assertion,Base,Draft,"The product contains an assert() or similar statement that can be triggered by an attacker, which leads to an application exit or other behavior that is more severe than necessary.","While assertion is good for catching logic errors and reducing the chances of reaching more serious vulnerability conditions, it can still lead to a denial of service. For example, if a server handles multiple simultaneous connections, and an assert() occ",NATURE:ChildOf:CWE ID:670 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:670 VIEW ID:1003 ORDINAL:Primary,: ORDINALITY:Resultant::,,,TERM - assertion failure::,PHASE - Implementation,"SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart NOTE - An attacker that can trigger an assert statement can still lead to a denial of service if the relevant code can be triggered by an attacker, and if the  SCOPE of the assert() extends beyo","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - Make sensitive open/close operation non reachable by directly user-controlled data (e.g. open/close resources)  PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Perform input validation on user data.,REFERENCE - CVE-2023-49286 DESCRIPTION - Chain: function in web caching proxy does not correctly check a return value (CWE-253) leading to a reachable assertion (CWE-617) LINK - https://www.cve.org/CVERecord?id=CVE-2023-49286  REFERENCE - CVE-2006-6767 DE,,,TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MET01-J:ENTRY NAME:Never use assertions to validate method arguments TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP3:ENTRY NAME:Use of an improper API::,,"Software Development,Research Concept"
144,Improper Neutralization of Line Delimiters,Variant,Draft,"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as line delimiters when they are sent to a downstream component.","As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.",NATURE:ChildOf:CWE ID:140 VIEW ID:1000 ORDINAL:Primary NATURE:CanAlsoBe:CWE ID:93 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,"PHASE - DESCRIPTION - Developers should anticipate that line delimiters will be injected/removed/manipulated in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appropriate i",REFERENCE - CVE-2002-0267 DESCRIPTION - Linebreak in field of PHP script allows admin privileges when written to data file. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0267,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Line Delimiter TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted,"TYPE - Relationship NOTE - Depending on the language and syntax being used, this could be the same as the record delimiter (CWE-143).::",Research Concept
599,Missing Validation of OpenSSL Certificate,Variant,Incomplete,The product uses OpenSSL and trusts or uses a certificate without using the SSL_get_verify_result() function to ensure that the certificate satisfies all necessary security requirements.,"This could allow an attacker to use an invalid certificate to claim to be a trusted host, use expired certificates, or conduct other attacks that could be detected if the certificate is properly validated.",NATURE:ChildOf:CWE ID:295 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation,"SCOPE - Confidentiality IMPACT - Read Application Data NOTE - The data read may not be properly secured, it might be viewed by an attacker.  SCOPE - Access Control IMPACT - Bypass Protection Mechanism IMPACT - Gain Privileges or Assume Identity NOTE - Tru",,PHASE - Architecture and Design DESCRIPTION - Ensure that proper authentication is included in the system design.  PHASE - Implementation DESCRIPTION - Understand and properly implement all checks necessary to ensure the identity of entities involved in e,,,,,"TYPE - Relationship NOTE - CWE-295 and CWE-599 are very similar, although CWE-599 has a more narrow scope that is only applied to OpenSSL certificates. As a result, other children of CWE-295 can be regarded as children of CWE-599 as well. CWE's use of one",Research Concept
923,Improper Restriction of Communication Channel to Intended Endpoints,Class,Incomplete,"The product establishes a communication channel to (or from) an endpoint for privileged or protected operations, but it does not properly ensure that it is communicating with the correct endpoint.","Attackers might be able to spoof the intended endpoint from a different system or process, thus gaining the same level of access as the intended endpoint. While this issue frequently involves authentication between network-based clients and servers, other",NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,"SCOPE - Integrity SCOPE - Confidentiality IMPACT - Gain Privileges or Assume Identity NOTE - If an attacker can spoof the endpoint, the attacker gains all the privileges that were intended for the original endpoint.","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,"REFERENCE - CVE-2022-30319 DESCRIPTION - S-bus functionality in a home automation product performs access control using an IP allowlist, which can be bypassed by a forged IP address. LINK - https://www.cve.org/CVERecord?id=CVE-2022-30319  REFERENCE - CVE-",,,,,Research Concept
553,Command Shell in Externally Accessible Directory,Variant,Incomplete,A possible shell file exists in /cgi-bin/ or other accessible directories. This is extremely dangerous and can be used by an attacker to execute commands on the web server.,,NATURE:ChildOf:CWE ID:552 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation PHASE - Operation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands,,PHASE - Installation System Configuration DESCRIPTION - Remove any Shells accessible under the web root folder and children directories.,,,,,,Research Concept
74,Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection'),Class,Incomplete,"The product constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpret",Software or other automated logic has certain assumptions about what constitutes data and control respectively. It is the lack of verification of these assumptions for user-controlled input that leads to injection problems. Injection problems encompass a ,NATURE:ChildOf:CWE ID:707 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Confidentiality IMPACT - Read Application Data NOTE - Many injection attacks involve the disclosure of important information -- in terms of both data sensitivity and usefulness in further exploitation.  SCOPE - Access Control IMPACT - Bypass Prote,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Requirements DESCRIPTION - Programming languages and supporting technologies might be chosen which are not subject to these issues.  PHASE - Implementation DESCRIPTION - Utilize an appropriate mix of allowlist and denylist parsing to filter contro,"REFERENCE - CVE-2022-36069 DESCRIPTION - Python-based dependency management tool avoids OS command injection when generating Git commands but allows injection of optional arguments with input beginning with a dash, potentially allowing for code execution.",,,TAXONOMY NAME - CLASP:ENTRY NAME:Injection problem ('data' used as something else) TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A6:ENTRY NAME:Injection Flaws:MAPPING FIT:CWE More Specific TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Ta,TYPE - Theoretical NOTE - Many people treat injection only as an input validation problem (CWE-20) because many people do not distinguish between the consequence/attack (injection) and the protection mechanism that prevents the attack from succeeding. How,Research Concept
454,External Initialization of Trusted Variables or Data Stores,Base,Draft,The product initializes critical internal variables or data stores using inputs that can be modified by untrusted actors.,"A product system should be reluctant to trust variables that have been initialized outside of its trust boundary, especially if they are initialized by users. The variables may have been initialized incorrectly. If an attacker can initialize the variable,",NATURE:ChildOf:CWE ID:1419 VIEW ID:1000 ORDINAL:Primary NATURE:CanAlsoBe:CWE ID:456 VIEW ID:1000,,LANGUAGE NAME:PHP LANGUAGE PREVALENCE:Sometimes LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Integrity IMPACT - Modify Application Data NOTE - An attacker could gain access to and modify sensitive data or system information.,,PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - A product system should be reluctant to trust variables that have been initialized outside of its trust boundary. Ensure adequate checking (e.g. input validation) is performed when relying o,"REFERENCE - CVE-2022-43468 DESCRIPTION - WordPress module sets internal variables based on external inputs, allowing false reporting of the number of views LINK - https://www.cve.org/CVERecord?id=CVE-2022-43468  REFERENCE - CVE-2000-0959 DESCRIPTION - Doe",,,TAXONOMY NAME - PLOVER:ENTRY NAME:External initialization of trusted variables or values TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP25:ENTRY NAME:Tainted input to variable::,"TYPE - Relationship NOTE - Overlaps Missing variable initialization, especially in PHP.  TYPE - Applicable Platform NOTE - This is often found in PHP due to register_globals and the common practice of storing library/include files under the web document r","Software Development,Research Concept"
146,Improper Neutralization of Expression/Command Delimiters,Variant,Incomplete,"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as expression or command delimiters when they are sent to a downstream component.","As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.",NATURE:ChildOf:CWE ID:140 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Other IMPACT - Execute Unauthorized Code or Commands IMPACT - Alter Execution Logic,,PHASE - DESCRIPTION - Developers should anticipate that inter-expression and inter-command delimiters will be injected/removed/manipulated in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensure only val,,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Delimiter between Expressions or Commands TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,TYPE - Relationship NOTE - A shell metacharacter (covered in CWE-150) is one example of a potential delimiter that may need to be neutralized.::,Research Concept
539,Use of Persistent Cookies Containing Sensitive Information,Variant,Incomplete,"The web application uses persistent cookies, but the cookies contain sensitive information.",Cookies are small bits of data that are sent by the web application but stored locally in the browser. This lets the application use the cookie to pass information between pages and store variable information. The web application controls what information,NATURE:ChildOf:CWE ID:552 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Application Data,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design DESCRIPTION - Do not store sensitive information in persistent cookies.,,,,,,Research Concept
282,Improper Ownership Management,Class,Draft,"The product assigns the wrong ownership, or does not properly verify the ownership, of an object or resource.",,NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Architecture and Design Operation DESCRIPTION - Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software.",REFERENCE - CVE-1999-1125 DESCRIPTION - Program runs setuid root but relies on a configuration file owned by a non-root user. LINK - https://www.cve.org/CVERecord?id=CVE-1999-1125,,File or Directory,TAXONOMY NAME - PLOVER:ENTRY NAME:Ownership errors::,"TYPE - Maintenance NOTE - The relationships between privileges, permissions, and actors (e.g. users and groups) need further refinement within the Research view. One complication is that these concepts apply to two different pillars, related to control of",Research Concept
26,Path Traversal: '/dir/../filename',Variant,Draft,"The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize /dir/../filename sequences that can resolve to a location that is outside of that directory.",This allows attackers to traverse the file system to access files or directories that are outside of the restricted directory. The '/dir/../filename' manipulation is useful for bypassing some path traversal protection schemes. Sometimes a program only che,NATURE:ChildOf:CWE ID:23 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY NAME:Web Server TECHNOLOGY PREVALENCE:Often,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,"PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n",,,,TAXONOMY NAME - PLOVER:ENTRY NAME:'/directory/../filename TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,,Research Concept
573,Improper Following of Specification by Caller,Class,Draft,"The product does not follow or incorrectly follows the specifications as required by the implementation language, environment, framework, protocol, or platform.","When leveraging external functionality, such as an API, it is important that the caller does so in accordance with the requirements of the external functionality or else unintended behaviors may result, possibly leaving the system vulnerable to any number",NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,,,,PHASE - Implementation,SCOPE - Other IMPACT - Quality Degradation IMPACT - Varies by Context,,,"REFERENCE - CVE-2006-7140 DESCRIPTION - Crypto implementation removes padding when it shouldn't, allowing forged signatures LINK - https://www.cve.org/CVERecord?id=CVE-2006-7140  REFERENCE - CVE-2006-4339 DESCRIPTION - Crypto implementation removes paddin",,,TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MET10-J:ENTRY NAME:Follow the general contract when implementing the compareTo() method::,,Research Concept
911,Improper Update of Reference Count,Base,Incomplete,"The product uses a reference count to manage a resource, but it does not update or incorrectly updates the reference count.","Reference counts can be used when tracking how many objects contain a reference to a particular resource, such as in memory management or garbage collection. When the reference count reaches zero, the resource can be de-allocated or reused because there a",NATURE:ChildOf:CWE ID:664 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:672 VIEW ID:1000 NATURE:CanPrecede:CWE ID:772 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Sometimes LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Sometimes LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,#VALUE!,,,"REFERENCE - CVE-2002-0574 DESCRIPTION - chain:  REFERENCE count is not decremented, leading to memory leak in OS by sending ICMP packets. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0574  REFERENCE - CVE-2004-0114 DESCRIPTION -  REFERENCE count for s",,,,,"Software Development,Research Concept"
368,Context Switching Race Condition,Base,Draft,"A product performs a series of non-atomic actions to switch between contexts that cross privilege or other security boundaries, but a race condition allows an attacker to modify or misrepresent the product's behavior during the switch.","This is commonly seen in web browser vulnerabilities in which the attacker can perform certain actions while the browser is transitioning from a trusted to an untrusted domain, or vice versa, and the browser performs the actions on one domain using the tr",NATURE:ChildOf:CWE ID:362 VIEW ID:1000 ORDINAL:Primary NATURE:CanAlsoBe:CWE ID:364 VIEW ID:1000,": ORDINALITY:Primary:DESCRIPTION:This weakness can be primary to almost anything, depending on the context of the race condition.: ORDINALITY:Resultant:DESCRIPTION:This weakness can be resultant from insufficient compartmentalization (CWE-653), incorrect",LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Integrity SCOPE - Confidentiality IMPACT - Modify Application Data IMPACT - Read Application Data,,,REFERENCE - CVE-2009-1837 DESCRIPTION - Chain: race condition (CWE-362) from improper handling of a page transition in web client while an applet is loading (CWE-368) leads to use after free (CWE-416) LINK - https://www.cve.org/CVERecord?id=CVE-2009-1837,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Context Switching Race Condition::,TYPE - Relationship NOTE - Can overlap signal handler race conditions.  TYPE - Research Gap NOTE - Under-studied as a concept. Frequency unknown; few vulnerability reports give enough detail to know when a context switching race condition is a factor.::,"Software Development,Research Concept"
224,Obscured Security-relevant Information by Alternate Name,Base,Incomplete,"The product records security-relevant information according to an alternate name of the affected entity, instead of the canonical name.",,NATURE:ChildOf:CWE ID:221 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. PHASE - Operation,SCOPE - Non-Repudiation SCOPE - Access Control IMPACT - Hide Activities IMPACT - Gain Privileges or Assume Identity,,,"REFERENCE - CVE-2002-0725 DESCRIPTION - Attacker performs malicious actions on a hard link to a file, obscuring the real target file. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0725",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Obscured Security-relevant Information by Alternate Name::,,"Software Development,Research Concept"
223,Omission of Security-relevant Information,Base,Draft,"The product does not record or display information that would be important for identifying the source or nature of an attack, or determining if an action is safe.",,NATURE:ChildOf:CWE ID:221 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase. PHASE - Implementation PHASE - Operation,SCOPE - Non-Repudiation IMPACT - Hide Activities NOTE - The source of an attack will be difficult or impossible to determine. This can allow attacks to the system to continue without notice.,,,REFERENCE - CVE-1999-1029 DESCRIPTION - Login attempts are not recorded if the user disconnects before the maximum number of tries. LINK - https://www.cve.org/CVERecord?id=CVE-1999-1029  REFERENCE - CVE-2002-1839 DESCRIPTION - Sender's IP address not reco,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Omission of Security-relevant Information::,,"Software Development,Research Concept"
576,EJB Bad Practices: Use of Java I/O,Variant,Draft,The product violates the Enterprise JavaBeans (EJB) specification by using the java.io package.,"The Enterprise JavaBeans specification requires that every bean provider follow a set of programming guidelines designed to ensure that the bean will be portable and behave consistently in any EJB container. In this case, the product violates the followin",NATURE:ChildOf:CWE ID:695 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Quality Degradation,,PHASE - Implementation DESCRIPTION - Do not use Java I/O when writing EJBs.,,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP3:ENTRY NAME:Use of an improper API::,,Research Concept
776,Improper Restriction of Recursive Entity References in DTDs ('XML Entity Expansion'),Base,Draft,"The product uses XML documents and allows their structure to be defined with a Document Type Definition (DTD), but it does not properly control the number of recursive definitions of entities.","If the DTD contains a large number of nested or recursive entities, this can lead to explosive growth of data when parsed, causing a denial of service.",NATURE:ChildOf:CWE ID:674 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:674 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:405 VIEW ID:1000,,LANGUAGE NAME:XML LANGUAGE PREVALENCE:Undetermined,,"TERM - XEE DESCRIPTION - XEE is the acronym commonly used for XML Entity Expansion. TERM - Billion Laughs Attack TERM - XML Bomb DESCRIPTION - While the XML Bomb term was used in the early years of knowledge of this issue, the XEE term seems to be more co",PHASE - Implementation PHASE - Operation,"SCOPE - Availability IMPACT - DoS -  Resource Consumption (Other) NOTE - If parsed, recursive entity references allow the attacker to expand data exponentially, quickly consuming all system resources.","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Operation DESCRIPTION - If possible, prohibit the use of DTDs or use an XML parser that limits the expansion of recursive DTD entities.  PHASE - Implementation DESCRIPTION - Before parsing XML files with associated DTDs, scan for recursive entity ",REFERENCE - CVE-2008-3281 DESCRIPTION - XEE in XML-parsing library. LINK - https://www.cve.org/CVERecord?id=CVE-2008-3281  REFERENCE - CVE-2011-3288 DESCRIPTION - XML bomb / XEE in enterprise communication product. LINK - https://www.cve.org/CVERecord?id=,,,TAXONOMY NAME - WASC:ENTRY ID:44:ENTRY NAME:XML Entity Expansion::,,"Software Development,Research Concept"
687,Function Call With Incorrectly Specified Argument Value,Variant,Draft,"The product calls a function, procedure, or routine, but the caller specifies an argument that contains the wrong value, which may lead to resultant weaknesses.",,NATURE:ChildOf:CWE ID:628 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,,,,PHASE - Implementation,SCOPE - Other IMPACT - Quality Degradation,METHOD - Manual Static Analysis DESCRIPTION - This might require an understanding of intended program behavior or design to determine whether the value is incorrect.,,,,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:MEM04-C:ENTRY NAME:Do not perform zero length allocations TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,"TYPE - Relationship NOTE - When primary, this weakness is most likely to occur in rarely-tested code, since the wrong value can change the semantic meaning of the program's execution and lead to obviously-incorrect behavior. It can also be resultant from ",Research Concept
304,Missing Critical Step in Authentication,Base,Draft,"The product implements an authentication technique, but it skips a step that weakens the technique.","Authentication techniques should follow the algorithms that define them exactly, otherwise authentication can be bypassed or more easily subjected to brute force attacks.",NATURE:ChildOf:CWE ID:303 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:573 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Access Control SCOPE - Integrity SCOPE - Confidentiality IMPACT - Bypass Protection Mechanism IMPACT - Gain Privileges or Assume Identity IMPACT - Read Application Data IMPACT - Execute Unauthorized Code or Commands NOTE - This weakness can lead t,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,"REFERENCE - CVE-2004-2163 DESCRIPTION - Shared secret not verified in a RADIUS response packet, allowing authentication bypass by spoofing server replies. LINK - https://www.cve.org/CVERecord?id=CVE-2004-2163  REFERENCE - CVE-2005-3327 DESCRIPTION - Chain",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Missing Critical Step in Authentication::,,Research Concept
1275,Sensitive Cookie with Improper SameSite Attribute,Variant,Incomplete,"The SameSite attribute for sensitive cookies is not set, or an insecure value is used.","The SameSite attribute controls how cookies are sent for cross-domain requests. This attribute may have three values: 'Lax', 'Strict', or 'None'. If the 'None' value is used, a website may create a cross-domain POST HTTP request to another website, and th",NATURE:ChildOf:CWE ID:923 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:352 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Web Ba,,,PHASE - Implementation: NOTE - This weakness occurs during implementation when the coder does not properly set the SameSite attribute.,"SCOPE - Confidentiality SCOPE - Integrity SCOPE - Non-Repudiation SCOPE - Access Control IMPACT - Modify Application Data LIKELIHOOD - Low NOTE - If the website does not impose additional defense against CSRF attacks, failing to use the 'Lax' or 'Strict' ","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation DESCRIPTION - Set the SameSite attribute of a sensitive cookie to 'Lax' or 'Strict'. This instructs the browser to apply this cookie only to same-domain requests, which provides a good Defense in Depth against CSRF attacks. When the","REFERENCE - CVE-2022-24045 DESCRIPTION - Web application for a room automation system has client-side JavaScript that sets a sensitive cookie without the SameSite security attribute, allowing the cookie to be sniffed LINK - https://www.cve.org/CVERecord?i",,,,,Research Concept
135,Incorrect Calculation of Multi-Byte String Length,Base,Draft,The product does not correctly calculate the length of strings that can contain wide or multi-byte characters.,,NATURE:ChildOf:CWE ID:682 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,,"PHASE - Implementation: NOTE - There are several ways in which improper string length checking may result in an exploitable condition. All of these, however, involve the introduction of buffer overflow conditions in order to reach an exploitable state. Th","SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands NOTE - This weakness may lead to a buffer overflow. Buffer overflows often can be used to execute arbitrary code, which is usually outside the  S","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Always verify the length of the string unit character.  PHASE - Implementation STRATEGY - Libraries or Frameworks DESCRIPTION - Use length computing functions (e.g. strlen, wcslen, etc.) app",,,,TAXONOMY NAME - CLASP:ENTRY NAME:Improper string length checking TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO10-J:ENTRY NAME:Ensure the array is filled when using read() to fill an array TAXONOMY NAME - Software Faul,,"Software Development,Research Concept"
562,Return of Stack Variable Address,Base,Draft,"A function returns the address of a stack variable, which will cause unintended program behavior, typically in the form of a crash.","Because local variables are allocated on the stack, when a program returns a pointer to a local variable, it is returning a stack address. A subsequent function call is likely to re-use this same stack address, thereby overwriting the value of the pointer",NATURE:ChildOf:CWE ID:758 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:672 VIEW ID:1000 NATURE:CanPrecede:CWE ID:825 VIEW ID:1000,: ORDINALITY:Indirect: ORDINALITY:Primary::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Availability SCOPE - Integrity SCOPE - Confidentiality IMPACT - Read Memory IMPACT - Modify Memory IMPACT - Execute Unauthorized Code or Commands IMPACT - DoS -  Crash, Exit, or Restart NOTE - If the returned stack buffer address is dereferenced a","METHOD - Fuzzing DESCRIPTION - Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often c",PHASE - Testing DESCRIPTION - Use static analysis tools to spot return of the address of a stack variable.,,,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:DCL30-C:ENTRY NAME:Declare objects with appropriate storage durations:MAPPING FIT:CWE More Specific TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:POS34-C:ENTRY NAME:Do not call putenv() with a pointer to an au,,"Software Development,Research Concept"
1420,Exposure of Sensitive Information during Transient Execution,Base,Incomplete,"A processor event or prediction may allow incorrect operations (or correct operations with incorrect data) to execute transiently, potentially exposing data over a covert channel.","When operations execute but do not commit to the processor's architectural state, this is commonly referred to as transient execution. This behavior can occur when the processor mis-predicts an outcome (such as a branch target), or when a processor event ",NATURE:ChildOf:CWE ID:669 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,"PHASE - Architecture and Design: NOTE - This weakness can be introduced when a computing unit (such as a CPU, GPU, accelerator, or any other processor) uses out-of-order execution, speculation, or any other microarchitectural feature that can allow microa",SCOPE - Confidentiality IMPACT - Read Memory LIKELIHOOD - Medium,"METHOD - Manual Analysis DESCRIPTION - This weakness can be detected in hardware by manually inspecting processor specifications. Features that exhibit this weakness may include microarchitectural predictors, access control checks that occur out-of-order,",PHASE - Architecture and Design DESCRIPTION - The hardware designer can attempt to prevent transient execution from causing observable discrepancies in specific covert channels. EFFECTIVENESS Limited  PHASE - Requirements DESCRIPTION - Processor designers,"REFERENCE - CVE-2017-5753 DESCRIPTION - Microarchitectural conditional branch predictors may allow operations to execute transiently after a misprediction, potentially exposing data over a covert channel. LINK - https://www.cve.org/CVERecord?id=CVE-2017-5",,,,,"Hardware Development,Research Concept"
29,Path Traversal: '..filename',Variant,Incomplete,"The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize '..filename' (leading backslash dot dot) sequences that can resolve to a location that is outside of that directory.","This allows attackers to traverse the file system to access files or directories that are outside of the restricted directory. This is similar to CWE-25, except using instead of /. Sometimes a program checks for .. at the beginning of the input, so a .. c",NATURE:ChildOf:CWE ID:23 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Windows OPERATING SYSTEM PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,"PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n",REFERENCE - CVE-2002-1987 DESCRIPTION - Protection mechanism checks for /.. but doesn't account for Windows-specific .. allowing read of arbitrary files. LINK - https://www.cve.org/CVERecord?id=CVE-2002-1987  REFERENCE - CVE-2005-2142 DESCRIPTION - Direct,,,TAXONOMY NAME - PLOVER:ENTRY NAME:'..filename' ('leading dot dot backslash') TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,,Research Concept
150,"Improper Neutralization of Escape, Meta, or Control Sequences",Variant,Incomplete,"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as escape, meta, or control character sequences when they are sent to a downstream component.","As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.",NATURE:ChildOf:CWE ID:138 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Integrity IMPACT - Unexpected State,,"PHASE - DESCRIPTION - Developers should anticipate that escape, meta and control characters/sequences will be injected/removed/manipulated in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensure only val",REFERENCE - CVE-2002-0542 DESCRIPTION - The mail program processes special ~ escape sequence even when not in interactive mode. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0542  REFERENCE - CVE-2000-0703 DESCRIPTION - Setuid program does not filter e,,,"TAXONOMY NAME - PLOVER:ENTRY NAME:Escape, Meta, or Control Character / Sequence TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsanitized user input TAXONOMY NAME - Software Fault Patterns:EN",,Research Concept
675,Multiple Operations on Resource in Single-Operation Context,Class,Draft,"The product performs the same operation on a resource two or more times, when the operation should only be applied once.",,NATURE:ChildOf:CWE ID:573 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:586 VIEW ID:1000 NATURE:PeerOf:CWE ID:102 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Other,,,"REFERENCE - CVE-2009-0935 DESCRIPTION - Attacker provides invalid address to a memory-reading function, causing a mutex to be unlocked twice LINK - https://www.cve.org/CVERecord?id=CVE-2009-0935  REFERENCE - CVE-2019-13351 DESCRIPTION - file descriptor do",,,,"TYPE - Relationship NOTE - This weakness is probably closely associated with other issues related to doubling, such as CWE-462 (duplicate key in alist) or CWE-102 (Struts duplicate validation forms). It's usually a case of an API contract violation (CWE-2",Research Concept
277,Insecure Inherited Permissions,Variant,Draft,A product defines a set of insecure permissions that are inherited by objects that are created by the program.,,NATURE:ChildOf:CWE ID:732 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. PHASE - Operation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Application Data IMPACT - Modify Application Data,,"PHASE - Architecture and Design Operation DESCRIPTION - Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software.  PHASE - Architecture and Design STRATEGY - Separation of Privilege DESCRIPTI",REFERENCE - CVE-2005-1841 DESCRIPTION - User's umask is used when creating temp files. LINK - https://www.cve.org/CVERecord?id=CVE-2005-1841  REFERENCE - CVE-2002-1786 DESCRIPTION - Insecure umask for core dumps [is the umask preserved or assigned?]. LINK,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Insecure inherited permissions::,,"Software Development,Research Concept"
1117,Callable with Insufficient Behavioral Summary,Base,Incomplete,"The code contains a function or method whose signature and/or associated inline documentation does not sufficiently describe the callable's inputs, outputs, side effects, assumptions, or return codes.","This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",NATURE:ChildOf:CWE ID:1078 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,,,"Software Development,Research Concept"
62,UNIX Hard Link,Variant,Incomplete,"The product, when opening a file or directory, does not sufficiently account for when the name is associated with a hard link to a target that is outside of the intended control sphere. This could allow an attacker to cause the product to operate on unaut","Failure for a system to check for hard links can result in vulnerability to different types of attacks. For example, an attacker can escalate their privileges if a file used by a privileged program is replaced with a hard link to a sensitive file (e.g. /e",NATURE:ChildOf:CWE ID:59 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Resultant::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Unix OPERATING SYSTEM PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,PHASE - Architecture and Design STRATEGY - Separation of Privilege DESCRIPTION - Follow the principle of least privilege when assigning access rights to entities in a software system. Denying access to a file can prevent an attacker from replacing that fi,"REFERENCE - CVE-2001-1494 DESCRIPTION - Hard link attack, file overwrite; interesting because program checks against soft links LINK - https://www.cve.org/CVERecord?id=CVE-2001-1494  REFERENCE - CVE-2002-0793 DESCRIPTION - Hard link and possibly symbolic",,,TAXONOMY NAME - PLOVER:ENTRY NAME:UNIX hard link TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FIO05-C:ENTRY NAME:Identify files using multiple file attributes TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP18:ENTRY NAME:Link in resource name resolut,,Research Concept
7,J2EE Misconfiguration: Missing Custom Error Page,Variant,Incomplete,The default error page of a web application should not display sensitive information about the product.,"A Web application must define a default error page for 4xx errors (e.g. 404), 5xx (e.g. 500) errors and catch java.lang.Throwable exceptions to prevent attackers from mining information from the application container's built-in error response. When an att",NATURE:ChildOf:CWE ID:756 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Confidentiality IMPACT - Read Application Data NOTE - A stack trace might show the attacker a malformed SQL query string, the type of database being used, and the version of the application container. This information enables the attacker to targe",,PHASE - Implementation DESCRIPTION - Handle exceptions appropriately in source code.  PHASE - Implementation System Configuration DESCRIPTION - Always define appropriate error pages. The application configuration should specify a default error page in ord,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:J2EE Misconfiguration: Missing Error Handling::,,Research Concept
390,Detection of Error Condition Without Action,Base,Draft,"The product detects a specific error, but takes no actions to handle the error.",,NATURE:ChildOf:CWE ID:755 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:401 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Integrity SCOPE - Other IMPACT - Varies by Context IMPACT - Unexpected State IMPACT - Alter Execution Logic NOTE - An attacker could utilize an ignored error condition to place the system in an unexpected state that could lead to the execution of ,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - Properly handle each exception. This is the recommended solution. Ensure that all exceptions are handled in such a way that you can be sure of the state of your system at any given moment.  PHASE - Implementation DESCR,"REFERENCE - CVE-2022-21820 DESCRIPTION - A GPU data center manager detects an error due to a malformed request but does not act on it, leading to memory corruption. LINK - https://www.cve.org/CVERecord?id=CVE-2022-21820",,,TAXONOMY NAME - CLASP:ENTRY NAME:Improper error handling TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:ERR00-J:ENTRY NAME:Do not suppress or ignore checked exceptions TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP4:,,"Software Development,Research Concept"
605,Multiple Binds to the Same Port,Variant,Draft,"When multiple sockets are allowed to bind to the same port, other services on that port may be stolen or spoofed.","On most systems, a combination of setting the SO_REUSEADDR socket option, and a call to bind() allows any process to bind to a port to which a previous process has bound with INADDR_ANY. This allows a user to bind to the specific address of a server bound",NATURE:ChildOf:CWE ID:675 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:666 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation PHASE - Operation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Application Data NOTE - Packets from a variety of network services may be stolen or the services spoofed.,,PHASE - Policy DESCRIPTION - Restrict server socket address to known local addresses.,,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP32:ENTRY NAME:Multiple binds to the same port::,,"Software Development,Research Concept"
581,Object Model Violation: Just One of Equals and Hashcode Defined,Variant,Draft,The product does not maintain equal hashcodes for equal objects.,"Java objects are expected to obey a number of invariants related to equality. One of these invariants is that equal objects must have equal hashcodes. In other words, if a.equals(b) == true then a.hashCode() == b.hashCode().",NATURE:ChildOf:CWE ID:573 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:697 VIEW ID:1000,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Integrity SCOPE - Other IMPACT - Other NOTE - If this invariant is not upheld, it is likely to cause trouble if objects of this class are stored in a collection. If the objects of the class in question are used as a key in a Hashtable or if they a","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - Both Equals() and Hashcode() should be defined.,,,,TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MET09-J:ENTRY NAME:Classes that define an equals() method must also define a hashCode() method::,,"Software Development,Research Concept"
1277,Firmware Not Updateable,Base,Draft,The product does not provide its users with the ability to update or patch its firmware to address any vulnerabilities or weaknesses that may be present.,"Without the ability to patch or update firmware, consumers will be left vulnerable to exploitation of any known vulnerabilities, or any vulnerabilities that are discovered in the future. This can expose consumers to permanent risk throughout the entire li",NATURE:ChildOf:CWE ID:1329 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,"PHASE - Requirements: NOTE - Requirements development might not consider the importance of updates over the lifetime of the product, or might not choose the ability due to concerns such as expense or speed to market. PHASE - Architecture and Design: NOTE",SCOPE - Confidentiality SCOPE - Integrity SCOPE - Access Control SCOPE - Authentication SCOPE - Authorization IMPACT - Gain Privileges or Assume Identity IMPACT - Bypass Protection Mechanism IMPACT - Execute Unauthorized Code or Commands IMPACT - DoS -  C,METHOD - Manual Analysis DESCRIPTION - Create a new installable boot image of the current build with a minor version number change. Use the standard installation  METHOD to update the boot image. Verify that the minor version number has changed. Create a ,PHASE - Requirements DESCRIPTION - Specify requirements to include the ability to update the firmware. Include integrity checks and authentication to ensure that untrusted firmware cannot be installed.  PHASE - Architecture and Design DESCRIPTION - Design,"REFERENCE - CVE-2020-9054 DESCRIPTION - Chain: network-attached storage (NAS) device has a critical OS command injection (CWE-78) vulnerability that is actively exploited to place IoT devices into a botnet, but some products are end-of-support and cannot",,,,"TYPE - Terminology NOTE - The firmware term does not have a single commonly-shared definition, so there may be variations in how this CWE entry is interpreted during mapping.::","Hardware Development,Research Concept"
377,Insecure Temporary File,Class,Incomplete,Creating and using insecure temporary files can leave application and system data vulnerable to attack.,,NATURE:ChildOf:CWE ID:668 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,REFERENCE - CVE-2022-41954 DESCRIPTION - A library uses the Java File.createTempFile() method which creates a file with -rw-r--r-- default permissions on Unix-like operating systems LINK - https://www.cve.org/CVERecord?id=CVE-2022-41954,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Insecure Temporary File TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:CON33-C:ENTRY NAME:Avoid race conditions when using library functions:MAPPING FIT:Imprecise TAXONOMY NAME - The CERT Oracle Secure Codin,TYPE - Other NOTE - Applications require temporary files so frequently that many different mechanisms exist for creating them in the C Library and Windows(R) API. Most of these functions are vulnerable to various forms of attacks. The functions designed t,Research Concept
370,Missing Check for Certificate Revocation after Initial Check,Variant,Draft,"The product does not check the revocation status of a certificate after its initial revocation check, which can cause the product to perform privileged actions even after the certificate is revoked at a later time.","If the revocation status of a certificate is not checked before each action that requires privileges, the system may be subject to a race condition. If a certificate is revoked after the initial check, all subsequent actions taken with the owner of the re",NATURE:ChildOf:CWE ID:299 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:296 VIEW ID:1000 NATURE:PeerOf:CWE ID:297 VIEW ID:1000 NATURE:PeerOf:CWE ID:298 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - Trust may be assigned to an entity who is not who it claims to be.  SCOPE - Integrity IMPACT - Modify Application Data NOTE - Data from an untrusted (and possibly malicious) source ,,"PHASE - Architecture and Design DESCRIPTION - Ensure that certificates are checked for revoked status before each use of a protected resource. If the certificate is checked before each access of a protected resource, the delay subject to a possible race c",,,,TAXONOMY NAME - CLASP:ENTRY NAME:Race condition in checking for certificate revocation TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP20:ENTRY NAME:Race Condition Window::,,Research Concept
1104,Use of Unmaintained Third Party Components,Base,Incomplete,The product relies on third-party components that are not actively supported or maintained by the original developer or a trusted proxy for the original developer.,"Reliance on components that are no longer maintained can make it difficult or impossible to fix significant bugs, vulnerabilities, or quality issues. In effect, unmaintained code can become obsolete. This issue makes it more difficult to maintain the prod",NATURE:ChildOf:CWE ID:1357 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Undetermined,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,,,"Software Development,Research Concept"
294,Authentication Bypass by Capture-replay,Base,Incomplete,A capture-replay flaw exists when the design of the product makes it possible for a malicious user to sniff network traffic and bypass authentication by replaying it to the server in question to the same effect as the original message (or with minor chang,"Capture-replay attacks are common and can be difficult to defeat without cryptography. They are a subset of network injection attacks that rely on observing previously-sent valid commands, then changing them slightly if necessary and resending the same co",NATURE:ChildOf:CWE ID:1390 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:287 VIEW ID:1003 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - Messages sent with a capture-relay attack allow access to resources which are not otherwise accessible without proper authentication.,,PHASE - Architecture and Design DESCRIPTION - Utilize some sequence or time stamping functionality along with a checksum which takes this into account in order to ensure that messages can be parsed only once.  PHASE - Architecture and Design DESCRIPTION -,REFERENCE - CVE-2005-3435 DESCRIPTION - product authentication succeeds if user-provided MD5 hash matches the hash in its database; this can be subjected to replay attacks. LINK - https://www.cve.org/CVERecord?id=CVE-2005-3435  REFERENCE - CVE-2007-4961 D,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Authentication bypass by replay TAXONOMY NAME - CLASP:ENTRY NAME:Capture-replay::,,"Software Development,Research Concept"
1325,Improperly Controlled Sequential Memory Allocation,Base,Incomplete,"The product manages a group of objects or resources and performs a separate memory allocation for each object, but it does not properly limit the total amount of memory that is consumed by all of the combined objects.","While the product might limit the amount of memory that is allocated in a single operation for a single object (such as a malloc of an array), if an attacker can cause multiple objects to be allocated in separate operations, then this might cause higher t",NATURE:ChildOf:CWE ID:770 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:789 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:476 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,"TERM - Stack Exhaustion DESCRIPTION - When a weakness allocates excessive memory on the stack, it is often described as stack exhaustion, which is a technical impact of the weakness. This technical impact is often encountered as a consequence of CWE-789 a",PHASE - Implementation,"SCOPE - Availability IMPACT - DoS -  Resource Consumption (Memory) NOTE - Not controlling memory allocation can result in a request for too much system memory, possibly leading to a crash of the application due to out-of-memory conditions, or the consumpt",,"PHASE - Implementation DESCRIPTION - Ensure multiple allocations of the same kind of object are properly tracked - possibly across multiple sessions, requests, or messages. Define an appropriate strategy for handling requests that exceed the limit, and co","REFERENCE - CVE-2020-36049 DESCRIPTION - JavaScript-based packet decoder uses concatenation of many small strings, causing out-of-memory (OOM) condition LINK - https://www.cve.org/CVERecord?id=CVE-2020-36049  REFERENCE - CVE-2019-20176 DESCRIPTION - Produ",,,,,Research Concept
1322,"Use of Blocking Code in Single-threaded, Non-blocking Context",Base,Incomplete,"The product uses a non-blocking model that relies on a single threaded process for features such as scalability, but it contains code that can block when it is invoked.","When an attacker can directly invoke the blocking code, or the blocking code can be affected by environmental conditions that can be influenced by an attacker, then this can lead to a denial of service by causing unexpected hang or freeze of the code. Exa",NATURE:ChildOf:CWE ID:834 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:835 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation,"SCOPE - Availability IMPACT - DoS -  Resource Consumption (CPU) NOTE - An unexpected call to blocking code can trigger an infinite loop, or a large loop that causes the software to pause and wait indefinitely.",,"PHASE - Implementation DESCRIPTION - Generally speaking, blocking calls should be replaced with non-blocking alternatives that can be used asynchronously. Expensive computations should be passed off to worker threads, although the correct approach depends",,,,,,"Software Development,Research Concept"
240,Improper Handling of Inconsistent Structural Elements,Base,Draft,"The product does not handle or incorrectly handles when two or more structural elements should be consistent, but are not.",,NATURE:ChildOf:CWE ID:237 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:707 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity SCOPE - Other IMPACT - Varies by Context IMPACT - Unexpected State,,,"REFERENCE - CVE-2014-0160 DESCRIPTION - Chain: Heartbleed bug receives an inconsistent length parameter (CWE-130) enabling an out-of-bounds read (CWE-126), returning memory that could include private cryptographic keys and other sensitive data. LINK - htt",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Inconsistent Elements::,,Research Concept
912,Hidden Functionality,Class,Incomplete,"The product contains functionality that is not documented, not part of the specification, and not accessible through an interface or command sequence that is obvious to the product's users or administrators.","Hidden functionality can take many forms, such as intentionally malicious code, Easter Eggs that contain extraneous functionality such as games, developer-friendly shortcuts that reduce maintenance or support costs such as hard-coded accounts, etc. From a",NATURE:ChildOf:CWE ID:684 VIEW ID:1000 ORDINAL:Primary,,TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Other -  SCOPE - Integrity IMPACT - Varies by Context IMPACT - Alter Execution Logic,,"PHASE - Installation DESCRIPTION - Always verify the integrity of the product that is being installed.  PHASE - Testing DESCRIPTION - Conduct a code coverage analysis using live testing, then closely inspect any code that is not covered.",REFERENCE - CVE-2022-31260 DESCRIPTION - Chain: a digital asset management program has an undisclosed backdoor in the legacy version of a PHP script (CWE-912) that could allow an unauthenticated user to export metadata (CWE-306) LINK - https://www.cve.org,,,,,Research Concept
669,Incorrect Resource Transfer Between Spheres,Class,Draft,"The product does not properly transfer a resource/behavior to another sphere, or improperly imports a resource/behavior from another sphere, in a manner that provides unintended control over that resource.",,NATURE:ChildOf:CWE ID:664 VIEW ID:1000 ORDINAL:Primary,,,"A control sphere is a set of resources and behaviors that are accessible to a single actor, or a group of actors. A product's security model will typically define multiple spheres, possibly implicitly. For example, a server might define one sphere for adm",,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. PHASE - Operation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Application Data IMPACT - Modify Application Data IMPACT - Unexpected State,,,"REFERENCE - CVE-2021-22909 DESCRIPTION - Chain: router's firmware update procedure uses curl with -k (insecure) option that disables certificate validation (CWE-295), allowing adversary-in-the-middle (AITM) compromise with a malicious firmware image (CWE-",,,,,Research Concept
1173,Improper Use of Validation Framework,Base,Draft,"The product does not use, or incorrectly uses, an input validation framework that is provided by the source language or an independent library.",Many modern coding languages provide developers with input validation frameworks to make the task of input validation easier and less error-prone. These frameworks will automatically check all input against specified criteria and direct execution to error,NATURE:ChildOf:CWE ID:20 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - This weakness may occur when software designers choose to not leverage input validation frameworks provided by the source language. PHASE - Implementation: NOTE - This weakness may occur when developers do not corre,"SCOPE - Integrity IMPACT - Unexpected State NOTE - Unchecked input leads to cross-site scripting, process control, and SQL injection vulnerabilities, among others.",METHOD - Automated Static Analysis DESCRIPTION - Some instances of improper input validation can be detected using automated static analysis. A static analysis tool might allow the user to specify which application-specific  METHODs or functions perform i,PHASE - Implementation DESCRIPTION - Properly use provided input validation frameworks.,,,,,,"Software Development,Research Concept"
470,Use of Externally-Controlled Input to Select Classes or Code ('Unsafe Reflection'),Base,Draft,"The product uses external input with reflection to select which classes or code to use, but it does not sufficiently prevent the input from selecting improper classes or code.","If the product uses external inputs to determine which class to instantiate or which method to invoke, then an attacker could supply values to select unexpected classes or methods. If this occurs, then the attacker could create control flow paths that wer",NATURE:ChildOf:CWE ID:913 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:913 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:610 VIEW ID:1000 NATURE:ChildOf:CWE ID:20 VIEW ID:700 ORDINAL:Primary,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:PHP LANGUAGE PREVALENCE:Undetermined LANGUAGE CLASS:Interpreted LANGUAGE PREVALENCE:Sometimes,,TERM - Reflection Injection::,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability SCOPE - Other IMPACT - Execute Unauthorized Code or Commands IMPACT - Alter Execution Logic NOTE - The attacker might be able to execute code that is not directly accessible to the attacker. A,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design DESCRIPTION - Refactor your code to avoid using reflection.  PHASE - Architecture and Design DESCRIPTION - Do not use user-controlled inputs to select and load classes or code.  PHASE - Implementation DESCRIPTION - Apply st,REFERENCE - CVE-2018-1000613 DESCRIPTION - Cryptography API uses unsafe reflection when deserializing a private key LINK - https://www.cve.org/CVERecord?id=CVE-2018-1000613  REFERENCE - CVE-2004-2331 DESCRIPTION - Database system allows attackers to bypas,,,"TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Unsafe Reflection TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SEC06-J:ENTRY NAME:Do not use reflection to increase accessibility of classes, methods, or fields::",,"Software Development,Research Concept"
175,Improper Handling of Mixed Encoding,Variant,Draft,The product does not properly handle when the same input uses several different (mixed) encodings.,,NATURE:ChildOf:CWE ID:172 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,PHASE - Architecture and Design STRATEGY - Input Validation DESCRIPTION - Avoid making decisions based on names of resources (e.g. files) if those resources can have alternate names.  PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume,,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Mixed Encoding::,,Research Concept
799,Improper Control of Interaction Frequency,Class,Incomplete,"The product does not properly limit the number or frequency of interactions that it has with an actor, such as the number of incoming requests.","This can allow the actor to perform actions more frequently than expected. The actor could be a human or an automated process such as a virus or bot. This could be used to cause a denial of service, compromise program logic (such as limiting humans to a s",NATURE:ChildOf:CWE ID:691 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,"TERM - Insufficient anti-automation DESCRIPTION - The term insufficient anti-automation focuses primarly on non-human actors such as viruses or bots, but the scope of this CWE entry is broader. TERM - Brute force DESCRIPTION - Vulnerabilities that can be",PHASE - Architecture and Design PHASE - Implementation PHASE - Operation,SCOPE - Availability SCOPE - Access Control SCOPE - Other IMPACT - DoS -  Resource Consumption (Other) IMPACT - Bypass Protection Mechanism IMPACT - Other,,,REFERENCE - CVE-2002-1876 DESCRIPTION - Mail server allows attackers to prevent other users from accessing mail by sending large number of rapid requests. LINK - https://www.cve.org/CVERecord?id=CVE-2002-1876,,,TAXONOMY NAME - WASC:ENTRY ID:21:ENTRY NAME:Insufficient Anti-Automation::,,Research Concept
804,Guessable CAPTCHA,Base,Incomplete,"The product uses a CAPTCHA challenge, but the challenge can be guessed or automatically recognized by a non-human actor.","An automated attacker could bypass the intended protection of the CAPTCHA challenge and perform actions at a higher frequency than humanly possible, such as launching spam attacks. There can be several different causes of a guessable CAPTCHA: An audio or ",NATURE:ChildOf:CWE ID:863 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:1390 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY NAME:Web Server TECHNOLOGY PREVALENCE:Sometimes,,,PHASE - Architecture and Design PHASE - Implementation,"SCOPE - Access Control SCOPE - Other IMPACT - Bypass Protection Mechanism IMPACT - Other NOTE - When authorization, authentication, or another protection mechanism relies on CAPTCHA entities to ensure that only human actors can access certain functionalit",,,"REFERENCE - CVE-2022-4036 DESCRIPTION - Chain: appointment booking app uses a weak hash (CWE-328) for generating a CAPTCHA, making it guessable (CWE-804) LINK - https://www.cve.org/CVERecord?id=CVE-2022-4036",,,TAXONOMY NAME - WASC:ENTRY ID:21:ENTRY NAME:Insufficient Anti-Automation::,,"Software Development,Research Concept"
260,Password in Configuration File,Base,Incomplete,The product stores a password in a configuration file that might be accessible to actors who do not know the password.,"This can result in compromise of the system for which the password is used. An attacker could gain access to this file and learn the stored password or worse yet, change the password to one of their choosing.",NATURE:ChildOf:CWE ID:522 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase. PHASE - Implementation,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design DESCRIPTION - Avoid storing passwords in easily accessible locations.  PHASE - Architecture and Design DESCRIPTION - Consider storing cryptographic hashes of passwords as an alternative to storing in plaintext.,REFERENCE - CVE-2022-38665 DESCRIPTION - A continuous delivery pipeline management tool stores an unencypted password in a configuration file. LINK - https://www.cve.org/CVERecord?id=CVE-2022-38665,,File or Directory,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Password Management: Password in Configuration File::,,"Software Development,Research Concept"
182,Collapse of Data into Unsafe Value,Base,Draft,The product filters data in a way that causes it to be reduced or collapsed into an unsafe value that violates an expected security property.,,NATURE:ChildOf:CWE ID:693 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:33 VIEW ID:1000 NATURE:CanPrecede:CWE ID:34 VIEW ID:1000 NATURE:CanPrecede:CWE ID:35 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Access Control IMPACT - Bypass Protection Mechanism,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design STRATEGY - Input Validation DESCRIPTION - Avoid making decisions based on names of resources (e.g. files) if those resources can have alternate names.  PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume,REFERENCE - CVE-2004-0815 DESCRIPTION - /.//// in pathname collapses to absolute path. LINK - https://www.cve.org/CVERecord?id=CVE-2004-0815  REFERENCE - CVE-2005-3123 DESCRIPTION - /.//..//////././ is collapsed into /.././ after .. and // sequences are r,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Collapse of Data into Unsafe Value TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS11-J:ENTRY NAME:Eliminate noncharacter code points before validation::,"TYPE - Relationship NOTE - Overlaps regular expressions, although an implementation might not necessarily use regexp's.::","Software Development,Research Concept"
1392,Use of Default Credentials,Base,Incomplete,The product uses default credentials (such as passwords or cryptographic keys) for potentially critical functionality.,"It is common practice for products to be designed to use default keys, passwords, or other mechanisms for authentication. The rationale is to simplify the manufacturing process or the system administrator's task of installation and deployment into an ente",NATURE:ChildOf:CWE ID:1391 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT,,,PHASE - Architecture and Design,SCOPE - Authentication IMPACT - Gain Privileges or Assume Identity,,"PHASE - Requirements DESCRIPTION - Prohibit use of default, hard-coded, or other values that do not vary for each installation of the product - especially for separate organizations. EFFECTIVENESS High  PHASE - Architecture and Design DESCRIPTION - Force ",REFERENCE - CVE-2022-30270 DESCRIPTION - Remote Terminal Unit (RTU) uses default credentials for some SSH accounts LINK - https://www.cve.org/CVERecord?id=CVE-2022-30270  REFERENCE - CVE-2021-41192 DESCRIPTION - data visualization/sharing package uses def,,,,,"Software Development,Research Concept"
403,Exposure of File Descriptor to Unintended Control Sphere ('File Descriptor Leak'),Base,Draft,"A process does not close sensitive file descriptors before invoking a child process, which allows the child to perform unauthorized I/O operations using those descriptors.","When a new process is forked or executed, the child process inherits any open file descriptors. When the child process has fewer privileges than the parent process, this might introduce a vulnerability if the child process can access the file descriptor b",NATURE:ChildOf:CWE ID:402 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Unix OPERATING SYSTEM PREVALENCE:Undetermined,,"TERM - File descriptor leak DESCRIPTION - While this issue is frequently called a file descriptor leak, the leak term is often used in two different ways - exposure of a resource, or consumption of a resource. Use of this term could cause confusion.::",PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Application Data IMPACT - Modify Application Data,,,"REFERENCE - CVE-2003-0740 DESCRIPTION - Server leaks a privileged file descriptor, allowing the server to be hijacked. LINK - https://www.cve.org/CVERecord?id=CVE-2003-0740  REFERENCE - CVE-2004-1033 DESCRIPTION - File descriptor leak allows read of restr",,System Process File or Directory,TAXONOMY NAME - PLOVER:ENTRY NAME:UNIX file descriptor leak TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FIO42-C:ENTRY NAME:Ensure files are properly closed when they are no longer needed TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:,,"Software Development,Research Concept"
676,Use of Potentially Dangerous Function,Base,Draft,"The product invokes a potentially dangerous function that could introduce a vulnerability if it is used incorrectly, but the function can also be used safely.",,NATURE:ChildOf:CWE ID:1177 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary: ORDINALITY:Indirect::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Other IMPACT - Varies by Context IMPACT - Quality Degradation IMPACT - Unexpected State NOTE - If the function is used incorrectly, then it could result in security problems.","METHOD - Automated Static Analysis - Binary or Bytecode DESCRIPTION - According to SOAR, the following detection techniques may be useful  Highly cost effective  Bytecode Weakness Analysis - including disassembler + source code weakness analysis Binary We","PHASE - Build and Compilation Implementation DESCRIPTION - Identify a list of prohibited API functions and prohibit developers from using these functions, providing safer alternatives. In some cases, automatic code analysis tools or the compiler can be in",REFERENCE - CVE-2007-1470 DESCRIPTION - Library has multiple buffer overflows using sprintf() and strcpy() LINK - https://www.cve.org/CVERecord?id=CVE-2007-1470  REFERENCE - CVE-2009-3849 DESCRIPTION - Buffer overflow using strcat() LINK - https://www.cve,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Dangerous Functions TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:CON33-C:ENTRY NAME:Avoid race conditions when using library functions:MAPPING FIT:CWE More Abstract TAXONOMY NAME - CERT C Secure Coding:ENT,"TYPE - Relationship NOTE - This weakness is different than CWE-242 (Use of Inherently Dangerous Function). CWE-242 covers functions with such significant security problems that they can never be guaranteed to be safe. Some functions, if used properly, do ","Software Development,Research Concept"
1242,Inclusion of Undocumented Features or Chicken Bits,Base,Incomplete,The device includes chicken bits or undocumented features that can create entry points for unauthorized actors.,A common design practice is to use undocumented bits on a device that can be used to disable certain functional security features. These bits are commonly referred to as chicken bits. They can facilitate quick identification and isolation of faulty compon,NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design PHASE - Implementation PHASE - Documentation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Access Control IMPACT - Modify Memory IMPACT - Read Memory IMPACT - Execute Unauthorized Code or Commands IMPACT - Gain Privileges or Assume Identity IMPACT - Bypass Protection Mechani,,"PHASE - Architecture and Design Implementation DESCRIPTION - The implementation of chicken bits in a released product is highly discouraged. If implemented at all, ensure that they are disabled in production devices. All interfaces to a device should be d",,,,TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-1:ENTRY NAME:Req SD-4 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-1:ENTRY NAME:Req SVV-3 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-2:ENTRY NAME:Req CR 2.12::,,"Hardware Development,Research Concept"
25,Path Traversal: '/../filedir',Variant,Incomplete,"The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize /../ sequences that can resolve to a location that is outside of that directory.","This allows attackers to traverse the file system to access files or directories that are outside of the restricted directory. Sometimes a program checks for ../ at the beginning of the input, so a /../ can bypass that check.",NATURE:ChildOf:CWE ID:23 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,"PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n",REFERENCE - CVE-2022-20775 DESCRIPTION - A cloud management tool allows attackers to bypass the restricted shell using path traversal sequences like /../ in the USER environment variable. LINK - https://www.cve.org/CVERecord?id=CVE-2022-20775,,,TAXONOMY NAME - PLOVER:ENTRY NAME:'/../filedir TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,,Research Concept
12,ASP.NET Misconfiguration: Missing Custom Error Page,Variant,Draft,An ASP .NET application must enable custom error pages in order to prevent attackers from mining information from the framework's built-in responses.,,NATURE:ChildOf:CWE ID:756 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:ASP.NET LANGUAGE PREVALENCE:Undetermined,The mode attribute of the<customErrors>  tag defines whether custom or default error pages are used.,,PHASE - Implementation PHASE - Operation,"SCOPE - Confidentiality IMPACT - Read Application Data NOTE - Default error pages gives detailed information about the error that occurred, and should not be used in production environments. Attackers can leverage the additional information provided by a ",,PHASE - System Configuration DESCRIPTION - Handle exceptions appropriately in source code. ASP .NET applications should be configured to use custom error pages instead of the framework default page.  PHASE - Architecture and Design DESCRIPTION - Do not at,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:ASP.NET Misconfiguration: Missing Custom Error Handling::,,Research Concept
579,J2EE Bad Practices: Non-serializable Object Stored in Session,Variant,Draft,"The product stores a non-serializable object as an HttpSession attribute, which can hurt reliability.","A J2EE application can make use of multiple JVMs in order to improve application reliability and performance. In order to make the multiple JVMs appear as a single application to the end user, the J2EE container can replicate an HttpSession object across ",NATURE:ChildOf:CWE ID:573 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Other IMPACT - Quality Degradation,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation DESCRIPTION - In order for session replication to work, the values the product stores as attributes in the session must implement the Serializable interface.",,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP1:ENTRY NAME:Glitch in computation::,,Research Concept
468,Incorrect Pointer Scaling,Base,Incomplete,"In C and C++, one may often accidentally refer to the wrong memory due to the semantics of when math operations are implicitly scaled.",,NATURE:ChildOf:CWE ID:682 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - Programmers may try to index from a pointer by adding a number of bytes. This is incorrect because C and C++ implicitly scale the operand by the size of the data type.,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Memory IMPACT - Modify Memory NOTE - Incorrect pointer scaling will often result in buffer overflow conditions. Confidentiality can be compromised if the weakness is in the context of a buffer over-r,,PHASE - Architecture and Design DESCRIPTION - Use a platform with high-level memory abstractions.  PHASE - Implementation DESCRIPTION - Always use array indexing instead of direct pointer manipulation.  PHASE - Architecture and Design DESCRIPTION - Use te,,,,TAXONOMY NAME - CLASP:ENTRY NAME:Unintentional pointer scaling TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:ARR39-C:ENTRY NAME:Do not add or subtract a scaled integer to a pointer:MAPPING FIT:Exact TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:EXP08-C:EN,,"Software Development,Research Concept"
586,Explicit Call to Finalize(),Base,Draft,The product makes an explicit call to the finalize() method from outside the finalizer.,"While the Java Language Specification allows an object's finalize() method to be called from outside the finalizer, doing so is usually a bad idea. For example, calling finalize() explicitly means that finalize() will be called more than once: the first t",NATURE:ChildOf:CWE ID:1076 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity SCOPE - Other IMPACT - Unexpected State IMPACT - Quality Degradation,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation Testing DESCRIPTION - Do not make explicit calls to finalize(). Use static analysis tools to spot such instances.,,,,TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MET12-J:ENTRY NAME:Do not use finalizers TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP3:ENTRY NAME:Use of an improper API::,,"Software Development,Research Concept"
394,Unexpected Status Code or Return Value,Base,Draft,"The product does not properly check when a function or operation returns a value that is legitimate for the function, but is not expected by the product.",,NATURE:ChildOf:CWE ID:754 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity SCOPE - Other IMPACT - Unexpected State IMPACT - Alter Execution Logic,,,REFERENCE - CVE-2004-1395 DESCRIPTION - Certain packets (zero byte and other lengths) cause a recvfrom call to produce an unexpected return code that causes a server's listening loop to exit. LINK - https://www.cve.org/CVERecord?id=CVE-2004-1395  REFERENC,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Unexpected Status Code or Return Value TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP4:ENTRY NAME:Unchecked Status Condition TAXONOMY NAME - SEI CERT Perl Coding Standard:ENTRY ID:EXP00-PL:ENTRY NAME:Do not return u,"TYPE - Relationship NOTE - Usually primary, but can be resultant from issues such as behavioral change or API abuse. This can produce resultant vulnerabilities.::","Software Development,Research Concept"
453,Insecure Default Variable Initialization,Variant,Draft,"The product, by default, initializes an internal variable with an insecure or less secure value than is possible.",,NATURE:ChildOf:CWE ID:1188 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:PHP LANGUAGE PREVALENCE:Sometimes LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Modify Application Data NOTE - An attacker could gain access to and modify sensitive data or system information.,,PHASE - System Configuration DESCRIPTION - Disable or change default settings when they can be used to abuse the system. Since those default settings are shipped with the product they are likely to be known by a potential attacker who is familiar with the,REFERENCE - CVE-2022-36349 DESCRIPTION - insecure default variable initialization in BIOS firmware for a hardware board allows DoS LINK - https://www.cve.org/CVERecord?id=CVE-2022-36349,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Insecure default variable initialization::,"TYPE - Maintenance NOTE - This overlaps other categories, probably should be split into separate items.::",Research Concept
1127,Compilation with Insufficient Warnings or Errors,Base,Incomplete,"The code is compiled without sufficient warnings enabled, which may prevent the detection of subtle bugs or quality issues.","This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,PHASE - Build and Compilation,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,,,"Software Development,Research Concept"
424,Improper Protection of Alternate Path,Class,Draft,The product does not sufficiently protect all possible paths that a user can take to access restricted functionality or resources.,,NATURE:ChildOf:CWE ID:693 VIEW ID:1000 NATURE:ChildOf:CWE ID:638 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design,SCOPE - Access Control IMPACT - Bypass Protection Mechanism IMPACT - Gain Privileges or Assume Identity,,PHASE - Architecture and Design DESCRIPTION - Deploy different layers of protection to implement security in depth.,"REFERENCE - CVE-2022-29238 DESCRIPTION - Access-control setting in web-based document collaboration tool is not properly implemented by the code, which prevents listing hidden directories but does not prevent direct requests to files in those directories.",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Alternate Path Errors TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP35:ENTRY NAME:Insecure resource access::,,Research Concept
1053,Missing Documentation for Design,Base,Incomplete,The product does not have documentation that represents how it is designed.,This issue can make it more difficult to understand and maintain the product. It can make it more difficult and time-consuming to detect and/or fix vulnerabilities.,NATURE:ChildOf:CWE ID:1059 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,#VALUE!,,,,,,,,"Hardware Development,Software Development,Research Concept"
140,Improper Neutralization of Delimiters,Base,Draft,The product does not neutralize or incorrectly neutralizes delimiters.,,NATURE:ChildOf:CWE ID:138 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Developers should anticipate that delimiters will be injected/removed/manipulated in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensure ,"REFERENCE - CVE-2003-0307 DESCRIPTION - Attacker inserts field separator into input to specify admin privileges. LINK - https://www.cve.org/CVERecord?id=CVE-2003-0307  REFERENCE - CVE-2000-0293 DESCRIPTION - Multiple internal space, insufficient quoting -",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Delimiter Problems TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,"Software Development,Research Concept"
1419,Incorrect Initialization of Resource,Class,Incomplete,"The product attempts to initialize a resource but does not correctly do so, which might leave the resource in an unexpected, incorrect, or insecure state when it is accessed.","This can have security implications when the associated resource is expected to have certain properties or values. Examples include a variable that determines whether a user has been authenticated or not, or a register or fuse value that determines the se",NATURE:ChildOf:CWE ID:665 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Implementation PHASE - Manufacturing PHASE - Installation PHASE - System Configuration PHASE - Operation,SCOPE - Confidentiality IMPACT - Read Memory IMPACT - Read Application Data IMPACT - Unexpected State LIKELIHOOD - Unknown  SCOPE - Authorization SCOPE - Integrity IMPACT - Gain Privileges or Assume Identity  SCOPE - Other IMPACT - Varies by Context NOTE ,,"PHASE - Implementation DESCRIPTION - Choose the safest-possible initialization for security-related resources.  PHASE - Implementation DESCRIPTION - Ensure that each resource (whether variable, memory buffer, register, etc.) is fully initialized.  PHASE -",REFERENCE - CVE-2020-27211 DESCRIPTION - Chain: microcontroller system-on-chip uses a register value stored in flash to set product protection state on the memory bus and does not contain protection against fault injection (CWE-1319) which leads to an inc,,,,,Research Concept
383,J2EE Bad Practices: Direct Use of Threads,Variant,Draft,Thread management in a Web application is forbidden in some circumstances and is always highly error prone.,Thread management in a web application is forbidden by the J2EE standard in some circumstances and is always highly error prone. Managing threads is difficult and is likely to interfere in unpredictable ways with the behavior of the application container.,NATURE:ChildOf:CWE ID:695 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Quality Degradation,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Architecture and Design DESCRIPTION - For EJB, use framework approaches for parallel execution, instead of using threads.",,,System Process,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:J2EE Bad Practices: Threads TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP3:ENTRY NAME:Use of an improper API::,,Research Concept
81,Improper Neutralization of Script in an Error Message Web Page,Variant,Incomplete,"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters that could be interpreted as web-scripting elements when they are sent to an error page.","Error pages may include customized 403 Forbidden or 404 Not Found pages. When an attacker can trigger an error that contains script syntax within the attacker's input, then cross-site scripting attacks may be possible.",NATURE:ChildOf:CWE ID:79 VIEW ID:1000 ORDINAL:Primary NATURE:CanAlsoBe:CWE ID:209 VIEW ID:1000 NATURE:CanAlsoBe:CWE ID:390 VIEW ID:1000,: ORDINALITY:Resultant::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation PHASE - Operation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Read Application Data IMPACT - Execute Unauthorized Code or Commands,,PHASE - Implementation DESCRIPTION - Do not write user-controlled input to error pages.  PHASE - Implementation DESCRIPTION - Carefully check each input parameter against a rigorous positive specification (allowlist) defining the specific characters and f,REFERENCE - CVE-2002-0840 DESCRIPTION - XSS in default error page from Host: header. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0840  REFERENCE - CVE-2002-1053 DESCRIPTION - XSS in error message. LINK - https://www.cve.org/CVERecord?id=CVE-2002-1053,,,TAXONOMY NAME - PLOVER:ENTRY NAME:XSS in error pages TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,Research Concept
1060,Excessive Number of Inefficient Server-Side Data Accesses,Base,Incomplete,The product performs too many data queries without using efficient data processing functionality such as stored procedures.,"This issue can make the product perform more slowly due to computational expense. If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability. While the interpretation of too many data queries may vary f",NATURE:ChildOf:CWE ID:1120 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Performance,,,,,,TAXONOMY NAME - OMG ASCPEM:ENTRY ID:ASCPEM-PRF-9::,,"Software Development,Research Concept"
645,Overly Restrictive Account Lockout Mechanism,Base,Incomplete,"The product contains an account lockout protection mechanism, but the mechanism is too restrictive and can be triggered too easily, which allows attackers to deny service to legitimate users by causing their accounts to be locked out.","Account lockout is a security feature often present in applications as a countermeasure to the brute force attack on the password based authentication mechanism of the system. After a certain number of failed login attempts, the users' account may be disa",NATURE:ChildOf:CWE ID:287 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.,SCOPE - Availability IMPACT - DoS -  Resource Consumption (Other) NOTE - Users could be locked out of accounts.,,"PHASE - Architecture and Design DESCRIPTION - Implement more intelligent password throttling mechanisms such as those which take IP address into account, in addition to the login name.  PHASE - Architecture and Design DESCRIPTION - Implement a lockout tim",,,,,,"Software Development,Research Concept"
210,Self-generated Error Message Containing Sensitive Information,Base,Draft,The product identifies an error condition and creates its own diagnostic or error messages that contain sensitive information.,,NATURE:ChildOf:CWE ID:209 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Confidentiality IMPACT - Read Application Data,,PHASE - Implementation Build and Compilation STRATEGY - Compilation or Build Hardening DESCRIPTION - Debugging information should not make its way into a production release.  PHASE - Implementation Build and Compilation STRATEGY - Environment Hardening DE,REFERENCE - CVE-2005-1745 DESCRIPTION - Infoleak of sensitive information in error message (physical access required). LINK - https://www.cve.org/CVERecord?id=CVE-2005-1745,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Product-Generated Error Message Infoleak TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::,,Research Concept
31,Path Traversal: 'dir....filename',Variant,Draft,"The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize 'dir....filename' (multiple internal backslash dot dot) sequences that can resolve to a location that is outside of t",This allows attackers to traverse the file system to access files or directories that are outside of the restricted directory. The 'dir....filename' manipulation is useful for bypassing some path traversal protection schemes. Sometimes a program only remo,NATURE:ChildOf:CWE ID:23 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Windows OPERATING SYSTEM PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,"PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n","REFERENCE - CVE-2002-0160 DESCRIPTION - The administration function in Access Control Server allows remote attackers to read HTML, Java class, and image files outside the web root via a .... sequence in the URL to port 2002. LINK - https://www.cve.org/CVE",,,TAXONOMY NAME - PLOVER:ENTRY NAME:8 - 'directory....filename TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,,Research Concept
564,SQL Injection: Hibernate,Variant,Incomplete,Using Hibernate to execute a dynamic SQL statement built with user-controlled input can allow an attacker to modify the statement's meaning or to execute arbitrary SQL commands.,,NATURE:ChildOf:CWE ID:89 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:89 VIEW ID:928 ORDINAL:Primary NATURE:ChildOf:CWE ID:89 VIEW ID:1305 ORDINAL:Primary,,,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Application Data IMPACT - Modify Application Data,,PHASE - Requirements DESCRIPTION - A non-SQL style database which is not subject to this flaw may be chosen.  PHASE - Architecture and Design DESCRIPTION - Follow the principle of least privilege when creating user accounts to a SQL database. Users should,,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,Research Concept
649,Reliance on Obfuscation or Encryption of Security-Relevant Inputs without Integrity Checking,Base,Incomplete,"The product uses obfuscation or encryption of inputs that should not be mutable by an external actor, but the product does not use integrity checks to detect if those inputs have been modified.","When an application relies on obfuscation or incorrectly applied / weak encryption to protect client-controllable tokens or parameters, that may have an effect on the user state, system state, or some decision made on the server. Without protecting the to",NATURE:ChildOf:CWE ID:345 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase. PHASE - Implementation,"SCOPE - Integrity IMPACT - Unexpected State NOTE - The inputs could be modified without detection, causing the product to have unexpected system state or make incorrect security decisions.",,"PHASE - Architecture and Design DESCRIPTION - Protect important client controllable tokens/parameters for integrity using PKI methods (i.e. digital signatures) or other means, and checks for integrity on the server side.  PHASE - Architecture and Design D","REFERENCE - CVE-2005-0039 DESCRIPTION - An IPSec configuration does not perform integrity checking of the IPSec packet as the result of either not configuring ESP properly to support the integrity service or using AH improperly. In either case, the securi",,,,,"Software Development,Research Concept"
523,Unprotected Transport of Credentials,Base,Incomplete,Login pages do not use adequate measures to protect the user name and password while they are in transit from the client to the server.,,NATURE:ChildOf:CWE ID:522 VIEW ID:1000 ORDINAL:Primary NATURE:CanAlsoBe:CWE ID:312 VIEW ID:1000,,,"SSL (Secure Socket Layer) provides data confidentiality and integrity to HTTP. By encrypting HTTP messages, SSL protects from attackers eavesdropping or altering message contents.",,PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Operation System Configuration DESCRIPTION - Enforce SSL use for the login page or any page used to transmit user credentials or other sensitive information. Even if the entire site does not use SSL, it MUST use SSL for login. Additionally, to hel",,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::,,"Software Development,Research Concept"
259,Use of Hard-coded Password,Variant,Draft,"The product contains a hard-coded password, which it uses for its own inbound authentication or for outbound communication to external components.","A hard-coded password typically leads to a significant authentication failure that can be difficult for the system administrator to detect. Once detected, it can be difficult to fix, so the administrator may be forced into disabling the product entirely. ",NATURE:ChildOf:CWE ID:798 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:798 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:798 VIEW ID:1340 ORDINAL:Primary NATURE:PeerOf:CWE ID:321 VIEW ID:1000 NATURE:PeerOf:CWE ID:257 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. PHASE - Architecture and Design,"SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - If hard-coded passwords are used, it is almost certain that malicious users will gain access through the account in question.","METHOD - Manual Analysis DESCRIPTION - This weakness can be detected using tools and techniques that require manual (human) analysis, such as penetration testing, threat modeling, and interactive tools that allow the tester to record and modify an active ","PHASE - Architecture and Design DESCRIPTION - For outbound authentication  store passwords outside of the code in a strongly-protected, encrypted configuration file or database that is protected from access by all outsiders, including other local users on",REFERENCE - CVE-2022-29964 DESCRIPTION - Distributed Control System (DCS) has hard-coded passwords for local shell access LINK - https://www.cve.org/CVERecord?id=CVE-2022-29964  REFERENCE - CVE-2021-37555 DESCRIPTION - Telnet service for IoT feeder for do,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Password Management: Hard-Coded Password TAXONOMY NAME - CLASP:ENTRY NAME:Use of hard-coded password TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MA,TYPE - Maintenance NOTE - This entry could be split into multiple variants: an inbound variant (as seen in the second demonstrative example) and an outbound variant (as seen in the first demonstrative example). These variants are likely to have different ,Research Concept
758,"Reliance on Undefined, Unspecified, or Implementation-Defined Behavior",Class,Incomplete,"The product uses an API function, data structure, or other entity in a way that relies on properties that are not always guaranteed to hold for that entity.","This can lead to resultant weaknesses when the required properties change, such as when the product is ported to a different platform or if an interaction error (CWE-435) occurs.",NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect: ORDINALITY:Primary::,,,,#VALUE!,SCOPE - Other IMPACT - Other,"METHOD - Fuzzing DESCRIPTION - Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often c",,REFERENCE - CVE-2006-1902 DESCRIPTION - Change in C compiler behavior causes resultant buffer overflows in programs that depend on behaviors that were undefined in the C standard. LINK - https://www.cve.org/CVERecord?id=CVE-2006-1902,,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:ARR32-C:ENTRY NAME:Ensure size arguments for variable length arrays are in a valid range:MAPPING FIT:CWE More Abstract TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:ERR34-C:ENTRY NAME:Detect errors when conver,,Research Concept
591,Sensitive Data Storage in Improperly Locked Memory,Variant,Draft,"The product stores sensitive data in memory that is not locked, or that has been incorrectly locked, which might cause the memory to be written to swap files on disk by the virtual memory manager. This can make the data more accessible to external actors.","On Windows systems the VirtualLock function can lock a page of memory to ensure that it will remain present in memory and not be swapped to disk. However, on older versions of Windows, such as 95, 98, or Me, the VirtualLock() function is only a stub and p",NATURE:ChildOf:CWE ID:413 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Application Data IMPACT - Read Memory NOTE - Sensitive data that is written to a swap file may be exposed.,,PHASE - Architecture and Design DESCRIPTION - Identify data that needs to be protected from swapping and choose platform-appropriate protection mechanisms.  PHASE - Implementation DESCRIPTION - Check return values to ensure locking operations are successf,,,Memory,TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A8:ENTRY NAME:Insecure Storage:MAPPING FIT:CWE More Specific TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:MEM06-C:ENTRY NAME:Ensure that sensitive data is not written out to disk TAXONOMY NAME - Software Fault,,Research Concept
23,Relative Path Traversal,Base,Draft,"The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize sequences such as .. that can resolve to a location that is outside of that directory.",This allows attackers to traverse the file system to access files or directories that are outside of the restricted directory.,NATURE:ChildOf:CWE ID:22 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:22 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:22 VIEW ID:1340 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,"TERM - Zip Slip DESCRIPTION - Zip slip is an attack that uses file archives (e.g., ZIP, tar, rar, etc.) that contain filenames with path traversal sequences that cause the files to be written outside of the directory under which the archive is expected to",PHASE - Implementation,"SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands NOTE - The attacker may be able to create or overwrite critical files that are used to execute code, such as programs or libraries.  SCOPE - Inte","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n","REFERENCE - CVE-2022-45918 DESCRIPTION - Chain: a learning management tool debugger uses external input to locate previous session logs (CWE-73) and does not properly validate the given path (CWE-20), allowing for filesystem path traversal using ../ seque",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Relative Path Traversal TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,,Research Concept
1078,Inappropriate Source Code Style or Formatting,Class,Incomplete,"The source code does not follow desired style or formatting for indentation, white space, comments, etc.",,NATURE:ChildOf:CWE ID:1076 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,#VALUE!,,,,,,,,Research Concept
421,Race Condition During Access to Alternate Channel,Base,Draft,"The product opens an alternate channel to communicate with an authorized user, but the channel is accessible to other actors.",This creates a race condition that allows an attacker to access the channel before the authorized user does.,NATURE:ChildOf:CWE ID:420 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:362 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity IMPACT - Bypass Protection Mechanism,,,REFERENCE - CVE-1999-0351 DESCRIPTION - FTP Pizza Thief vulnerability. Attacker can connect to a port that was intended for use by another client. LINK - https://www.cve.org/CVERecord?id=CVE-1999-0351  REFERENCE - CVE-2003-0230 DESCRIPTION - Product creat,,System Process,TAXONOMY NAME - PLOVER:ENTRY NAME:Alternate Channel Race Condition::,,"Software Development,Research Concept"
340,Generation of Predictable Numbers or Identifiers,Class,Incomplete,The product uses a scheme that generates numbers or identifiers that are more predictable than required.,,NATURE:ChildOf:CWE ID:330 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Other IMPACT - Varies by Context,,,REFERENCE - CVE-2022-29330 DESCRIPTION - Product for administering PBX systems uses predictable identifiers and timestamps for filenames (CWE-340) which allows attackers to access files via direct request (CWE-425). LINK - https://www.cve.org/CVERecord?id,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Predictability problems TAXONOMY NAME - WASC:ENTRY ID:11:ENTRY NAME:Brute Force::,"TYPE - Maintenance NOTE - As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, randomness is used heavily. However, within cryptography, entropy is distinct, typically i",Research Concept
278,Insecure Preserved Inherited Permissions,Variant,Incomplete,"A product inherits a set of insecure permissions for an object, e.g. when copying from an archive file, without user awareness or involvement.",,NATURE:ChildOf:CWE ID:732 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Operation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Application Data IMPACT - Modify Application Data,,"PHASE - Architecture and Design Operation DESCRIPTION - Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software.  PHASE - Architecture and Design STRATEGY - Separation of Privilege DESCRIPTI",REFERENCE - CVE-2005-1724 DESCRIPTION - Does not obey specified permissions when exporting. LINK - https://www.cve.org/CVERecord?id=CVE-2005-1724,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Insecure preserved inherited permissions::,,"Software Development,Research Concept"
410,Insufficient Resource Pool,Base,Incomplete,"The product's resource pool is not large enough to handle peak demand, which allows an attacker to prevent others from accessing the resource by using a (relatively) large number of requests for resources.",Frequently the consequence is a flood of connection or sessions.,NATURE:ChildOf:CWE ID:664 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:400 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation PHASE - Operation,"SCOPE - Availability SCOPE - Integrity SCOPE - Other IMPACT - DoS -  Crash, Exit, or Restart IMPACT - Other NOTE - Floods often cause a crash or other problem besides denial of the resource itself; these are likely examples of *other* vulnerabilities, not",,PHASE - Architecture and Design DESCRIPTION - Do not perform resource-intensive transactions for unauthenticated users and/or invalid requests.  PHASE - Architecture and Design DESCRIPTION - Consider implementing a velocity check mechanism which would det,REFERENCE - CVE-1999-1363 DESCRIPTION - Large number of locks on file exhausts the pool and causes crash. LINK - https://www.cve.org/CVERecord?id=CVE-1999-1363  REFERENCE - CVE-2001-1340 DESCRIPTION - Product supports only one connection and does not disc,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Insufficient Resource Pool TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:TPS00-J:,,"Software Development,Research Concept"
284,Improper Access Control,Pillar,Incomplete,The product does not restrict or incorrectly restricts access to a resource from an unauthorized actor.,"Access control involves the use of several protection mechanisms such as: Authentication (proving the identity of an actor) Authorization (ensuring that a given actor can access a resource), and Accountability (tracking of activities that were performed) ",#VALUE!,,TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Undetermined,,"TERM - Authorization DESCRIPTION - The terms access control and authorization are often used interchangeably, although many people have distinct definitions. The CWE usage of access control is intended as a general term for the various mechanisms that res",PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. PHASE - Operation,SCOPE - Other IMPACT - Varies by Context,,"PHASE - Architecture and Design Operation DESCRIPTION - Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software.  PHASE - Architecture and Design STRATEGY - Separation of Privilege DESCRIPTI","REFERENCE - CVE-2022-24985 DESCRIPTION - A form hosting website only checks the session authentication status for a single form, making it possible to bypass authentication when there are multiple forms LINK - https://www.cve.org/CVERecord?id=CVE-2022-249",,File or Directory,TAXONOMY NAME - PLOVER:ENTRY NAME:Access Control List (ACL) errors TAXONOMY NAME - WASC:ENTRY ID:2:ENTRY NAME:Insufficient Authorization TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Missing Access Control::,TYPE - Maintenance NOTE - This entry needs more work. Possible sub-categories include: Trusted group includes undesired entities (partially covered by CWE-286) Group can perform undesired actions ACL parse error does not fail closed::,Research Concept
1103,Use of Platform-Dependent Third Party Components,Base,Incomplete,The product relies on third-party components that do not provide equivalent functionality across all desirable platforms.,"This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",NATURE:ChildOf:CWE ID:758 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,,,"Software Development,Research Concept"
152,Improper Neutralization of Macro Symbols,Variant,Draft,"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as macro symbols when they are sent to a downstream component.",,NATURE:ChildOf:CWE ID:138 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Developers should anticipate that macro symbols will be injected/removed/manipulated in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensu,"REFERENCE - CVE-2002-0770 DESCRIPTION - Server trusts client to expand macros, allows macro characters to be expanded to trigger resultant information exposure. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0770  REFERENCE - CVE-2008-2018 DESCRIPTION -",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Macro Symbol TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,TYPE - Research Gap NOTE - Under-studied.::,Research Concept
784,Reliance on Cookies without Validation and Integrity Checking in a Security Decision,Variant,Draft,"The product uses a protection mechanism that relies on the existence or values of a cookie, but it does not properly ensure that the cookie is valid for the associated user.","Attackers can easily modify cookies, within the browser or by implementing the client-side code outside of the browser. Attackers can bypass protection mechanisms such as authorization and authentication by modifying the cookie to contain an expected valu",NATURE:ChildOf:CWE ID:807 VIEW ID:1000 NATURE:ChildOf:CWE ID:565 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Web Based TECHNOLOGY PREVALENCE:Often,,,PHASE - Implementation,"SCOPE - Access Control IMPACT - Bypass Protection Mechanism IMPACT - Gain Privileges or Assume Identity NOTE - It is dangerous to use cookies to set a user's privileges. The cookie can be manipulated to claim a high level of authorization, or to claim tha",,PHASE - Architecture and Design DESCRIPTION - Avoid using cookie data for a security-related decision.  PHASE - Implementation DESCRIPTION - Perform thorough input validation (i.e.  server side validation) on the cookie data if you're going to use it for ,REFERENCE - CVE-2009-1549 DESCRIPTION - Attacker can bypass authentication by setting a cookie to a specific value. LINK - https://www.cve.org/CVERecord?id=CVE-2009-1549  REFERENCE - CVE-2009-1619 DESCRIPTION - Attacker can bypass authentication and gain,,,,"TYPE - Maintenance NOTE - A new parent might need to be defined for this entry. This entry is specific to cookies, which reflects the significant number of vulnerabilities being reported for cookie-based authentication in CVE during 2008 and 2009. However",Research Concept
153,Improper Neutralization of Substitution Characters,Variant,Draft,"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as substitution characters when they are sent to a downstream component.",,NATURE:ChildOf:CWE ID:138 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,"PHASE - DESCRIPTION - Developers should anticipate that substitution characters will be injected/removed/manipulated in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appro","REFERENCE - CVE-2002-0770 DESCRIPTION - Server trusts client to expand macros, allows macro characters to be expanded to trigger resultant information exposure. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0770",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Substitution Character TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,TYPE - Research Gap NOTE - Under-studied.::,Research Concept
359,Exposure of Private Personal Information to an Unauthorized Actor,Base,Incomplete,"The product does not properly prevent a person's private, personal information from being accessed by actors who either (1) are not explicitly authorized to access the information or (2) do not have the implicit consent of the person about whom the inform","There are many types of sensitive information that products must protect from attackers, including system data, communications, configuration, business secrets, intellectual property, and an individual's personal (private) information. Private personal in",NATURE:ChildOf:CWE ID:200 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Mobile TECHNOLOGY PREVALENCE:Undetermined,,TERM - Privacy violation TERM - Privacy leak TERM - Privacy leakage::,PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase. PHASE - Implementation PHASE - Operation,SCOPE - Confidentiality IMPACT - Read Application Data,METHOD - Architecture or Design Review DESCRIPTION - Private personal data can enter a program in a variety of ways  Directly from the user in the form of a password or personal information Accessed from a database or other data store by the application I,"PHASE - Requirements DESCRIPTION - Identify and consult all relevant regulations for personal privacy. An organization may be required to comply with certain federal and state regulations, depending on its location, the type of business it conducts, and t",,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Privacy Violation TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO13-J:ENTRY NAME:Do not log sensitive information outside a trust boundary::,"TYPE - Maintenance NOTE - This entry overlaps many other entries that are not organized around the kind of sensitive information that is exposed. However, because privacy is treated with such importance due to regulations and other factors, and it may be ","Software Development,Research Concept"
662,Improper Synchronization,Class,Draft,"The product utilizes multiple threads or processes to allow temporary access to a shared resource that can only be exclusive to one process at a time, but it does not properly synchronize these actions, which might cause simultaneous accesses of this reso",Synchronization refers to a variety of behaviors and mechanisms that allow two or more independently-operating processes or threads to ensure that they operate on shared resources in predictable ways that do not interfere with each other. Some shared reso,NATURE:ChildOf:CWE ID:664 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:691 VIEW ID:1000 NATURE:CanPrecede:CWE ID:362 VIEW ID:1000,,,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Integrity SCOPE - Confidentiality SCOPE - Other IMPACT - Modify Application Data IMPACT - Read Application Data IMPACT - Alter Execution Logic,,PHASE - Implementation DESCRIPTION - Use industry standard APIs to synchronize your code.,"REFERENCE - CVE-2021-1782 DESCRIPTION - Chain: improper locking (CWE-667) leads to race condition (CWE-362), as exploited in the wild per CISA KEV. LINK - https://www.cve.org/CVERecord?id=CVE-2021-1782  REFERENCE - CVE-2009-0935 DESCRIPTION - Attacker pro",,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:SIG00-C:ENTRY NAME:Mask signals handled by noninterruptible signal handlers TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:SIG31-C:ENTRY NAME:Do not access shared objects in signal handlers:MAPPING FIT:CWE More,"TYPE - Maintenance NOTE - Deeper research is necessary for synchronization and related mechanisms, including locks, mutexes, semaphores, and other mechanisms. Multiple entries are dependent on this research, which includes relationships to concurrency, ra",Research Concept
435,Improper Interaction Between Multiple Correctly-Behaving Entities,Pillar,Draft,"An interaction error occurs when two entities have correct behavior when running independently of each other, but when they are integrated as components in a larger system or process, they introduce incorrect behaviors that may cause resultant weaknesses.","When a system or process combines multiple independent components, this often produces new, emergent behaviors at the system level. However, if the interactions between these components are not fully accounted for, some of the emergent behaviors can be in",#VALUE!,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined,,TERM - Interaction Error TERM - Emergent Fault::,PHASE - Architecture and Design PHASE - Implementation PHASE - Operation,SCOPE - Integrity IMPACT - Unexpected State IMPACT - Varies by Context,,,"REFERENCE - CVE-2002-0485 DESCRIPTION - Anti-virus product allows bypass via Content-Type and Content-Disposition headers that are mixed case, which are still processed by some clients. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0485  REFERENCE - CV",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Interaction Errors::,"TYPE - Research Gap NOTE - Weaknesses related to this Pillar appear to be under-studied, especially with respect to classification schemes. Input from academic and other communities could help identify and resolve gaps or organizational difficulties withi",Research Concept
1055,Multiple Inheritance from Concrete Classes,Base,Incomplete,The product contains a class with inheritance from more than one concrete class.,"This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",NATURE:ChildOf:CWE ID:1093 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,TAXONOMY NAME - OMG ASCMM:ENTRY ID:ASCMM-MNT-2::,,"Software Development,Research Concept"
209,Generation of Error Message Containing Sensitive Information,Base,Draft,"The product generates an error message that includes sensitive information about its environment, users, or associated data.","The sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more serious attacks. The error message may be created in different ways: self-generated: the source code explicitly constructs",NATURE:ChildOf:CWE ID:200 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:200 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:755 VIEW ID:1000,: ORDINALITY:Primary: ORDINALITY:Resultant::,LANGUAGE NAME:PHP LANGUAGE PREVALENCE:Often LANGUAGE NAME:Java LANGUAGE PREVALENCE:Often LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. PHASE - System Configuration PHASE - Operation,SCOPE - Confidentiality IMPACT - Read Application Data NOTE - Often this will either reveal sensitive information which may be used for a later attack or private information stored in the server.,"METHOD - Manual Analysis DESCRIPTION - This weakness generally requires domain-specific interpretation using manual analysis. However, the number of potential error conditions may be too large to cover completely within limited time constraints. EFFECTIVE",PHASE - Implementation DESCRIPTION - Ensure that error messages only contain minimal details that are useful to the intended audience and no one else. The messages need to strike the balance between being too cryptic (which can confuse users) or being too,REFERENCE - CVE-2008-2049 DESCRIPTION - POP3 server reveals a password in an error message after multiple APOP commands are sent. Might be resultant from another weakness. LINK - https://www.cve.org/CVERecord?id=CVE-2008-2049  REFERENCE - CVE-2007-5172 DE,,,TAXONOMY NAME - CLASP:ENTRY NAME:Accidental leaking of sensitive information through error messages TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A6:ENTRY NAME:Information Leakage and Improper Error Handling:MAPPING FIT:CWE More Specific TAXONOMY NAME - OWA,,"Software Development,Research Concept"
94,Improper Control of Generation of Code ('Code Injection'),Base,Draft,"The product constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment","When a product allows a user's input to contain code syntax, it might be possible for an attacker to craft the code in such a way that it will alter the intended control flow of the product. Such an alteration could lead to arbitrary code execution. Injec",NATURE:ChildOf:CWE ID:74 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:74 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:913 VIEW ID:1000,,LANGUAGE CLASS:Interpreted LANGUAGE PREVALENCE:Sometimes,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,"SCOPE - Access Control IMPACT - Bypass Protection Mechanism NOTE - In some cases, injectable code controls authentication; this may lead to a remote vulnerability.  SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - Injected code ca","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design DESCRIPTION - Refactor your program so that you do not have to dynamically generate code.  PHASE - Architecture and Design DESCRIPTION - Run your code in a jail or similar sandbox environment that enforces strict boundaries,REFERENCE - CVE-2022-2054 DESCRIPTION - Python compiler uses eval() to execute malicious strings as Python code. LINK - https://www.cve.org/CVERecord?id=CVE-2022-2054  REFERENCE - CVE-2021-22204 DESCRIPTION - Chain: regex in EXIF processor code does not c,,,TAXONOMY NAME - PLOVER:ENTRY ID:CODE:ENTRY NAME:Code Evaluation and Injection TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-2:ENTRY NAME:Req CR 3.5 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 3-3:ENTRY NAME:Req SR 3.5 TAXONOMY NAME - ISA/IEC 62443:ENTRY I,,"Software Development,Research Concept"
80,Improper Neutralization of Script-Related HTML Tags in a Web Page (Basic XSS),Variant,Incomplete,"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special characters such as<, > , and & that could be interpreted as web-scripting elements when they are sent to a downstream component that proce","This may allow such characters to be treated as control characters, which are executed client-side in the context of the user's session. Although this can be classified as an injection problem, the more pertinent issue is the improper conversion of such s",NATURE:ChildOf:CWE ID:79 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Read Application Data IMPACT - Execute Unauthorized Code or Commands,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation DESCRIPTION - Carefully check each input parameter against a rigorous positive specification (allowlist) defining the specific characters and format allowed. All input should be neutralized, not just parameters that the user is supp",REFERENCE - CVE-2002-0938 DESCRIPTION - XSS in parameter in a link. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0938  REFERENCE - CVE-2002-1495 DESCRIPTION - XSS in web-based email product via attachment filenames. LINK - https://www.cve.org/CVERecor,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Basic XSS TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,Research Concept
415,Double Free,Variant,Draft,"The product calls free() twice on the same memory address, potentially leading to modification of unexpected memory locations.","When a program calls free() twice with the same argument, the program's memory management data structures become corrupted. This corruption can cause the program to crash or, in some circumstances, cause two later calls to malloc() to return the same poin",NATURE:ChildOf:CWE ID:825 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:1341 VIEW ID:1000 NATURE:ChildOf:CWE ID:672 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:672 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:672 VIEW ID:1340 ORDINAL:Pri,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,TERM - Double-free::,PHASE - Implementation,"SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability IMPACT - Modify Memory IMPACT - Execute Unauthorized Code or Commands NOTE - Doubly freeing memory may result in a write-what-where condition, allowing an attacker to execute arbitrary code.","METHOD - Fuzzing DESCRIPTION - Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often c","PHASE - Architecture and Design DESCRIPTION - Choose a language that provides automatic memory management.  PHASE - Implementation DESCRIPTION - Ensure that each allocation is freed only once. After freeing a chunk, set the pointer to NULL to ensure the p","REFERENCE - CVE-2006-5051 DESCRIPTION - Chain: Signal handler contains too much functionality (CWE-828), introducing a race condition (CWE-362) that leads to a double free (CWE-415). LINK - https://www.cve.org/CVERecord?id=CVE-2006-5051  REFERENCE - CVE-2",,Memory,TAXONOMY NAME - PLOVER:ENTRY NAME:DFREE - Double-Free Vulnerability TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Double Free TAXONOMY NAME - CLASP:ENTRY NAME:Doubly freeing memory TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:MEM00-C:ENTRY NAME:Alloca,"TYPE - Relationship NOTE - This is usually resultant from another weakness, such as an unhandled error or race condition between threads. It could also be primary to weaknesses such as buffer overflows.  TYPE - Theoretical NOTE - It could be argued that D",Research Concept
1174,ASP.NET Misconfiguration: Improper Model Validation,Variant,Draft,"The ASP.NET application does not use, or incorrectly uses, the model validation framework.",,NATURE:ChildOf:CWE ID:1173 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,LANGUAGE NAME:ASP.NET LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,"SCOPE - Integrity IMPACT - Unexpected State NOTE - Unchecked input leads to cross-site scripting, process control, and SQL injection vulnerabilities, among others.",,,,,,,,Research Concept
337,Predictable Seed in Pseudo-Random Number Generator (PRNG),Variant,Draft,"A Pseudo-Random Number Generator (PRNG) is initialized from a predictable seed, such as the process ID or system time.",The use of predictable seeds significantly reduces the number of possible seeds that an attacker would need to test in order to predict which random numbers will be generated by the PRNG.,NATURE:ChildOf:CWE ID:335 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Other IMPACT - Varies by Context,,PHASE - DESCRIPTION - Use non-predictable inputs for seed generation.  PHASE - Architecture and Design Requirements STRATEGY - Libraries or Frameworks DESCRIPTION - Use products or modules that conform to FIPS 140-2 [REF-267] to avoid obvious entropy prob,REFERENCE - CVE-2020-7010 DESCRIPTION - Cloud application on Kubernetes generates passwords using a weak random number generator based on deployment time. LINK - https://www.cve.org/CVERecord?id=CVE-2020-7010  REFERENCE - CVE-2019-11495 DESCRIPTION - serv,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Predictable Seed in PRNG TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MSC02-J:ENTRY NAME:Generate strong random numbers::,"TYPE - Maintenance NOTE - As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, randomness is used heavily. However, within cryptography, entropy is distinct, typically i",Research Concept
515,Covert Storage Channel,Base,Incomplete,A covert storage channel transfers information through the setting of bits by one program and the reading of those bits by another. What distinguishes this case from that of ordinary operation is that the bits are used to convey encoded information.,Covert storage channels occur when out-of-band data is stored in messages for the purpose of memory reuse. Covert channels are frequently classified as either storage or timing channels. Examples would include using a file intended to hold only audit info,NATURE:ChildOf:CWE ID:514 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Application Data NOTE - Covert storage channels may provide attackers with important information about the system in question.  SCOPE - Integrity SCOPE - Confidentiality IMPACT - Read Application Data NOTE - If these ,,PHASE - Implementation DESCRIPTION - Ensure that all reserved fields are set to zero before messages are sent and that no unnecessary information is included.,,,,TAXONOMY NAME - Landwehr:ENTRY NAME:Storage TAXONOMY NAME - CLASP:ENTRY NAME:Covert storage channel::,"TYPE - Maintenance NOTE - As of CWE 4.9, members of the CWE Hardware SIG are working to improve CWE's coverage of transient execution weaknesses, which include issues related to Spectre, Meltdown, and other attacks that create or exploit covert channels. ","Software Development,Research Concept"
439,Behavioral Change in New Version or Environment,Base,Draft,"A's behavior or functionality changes with a new version of A, or a new environment, which is not known (or manageable) by B.",,NATURE:ChildOf:CWE ID:435 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,TERM - Functional change::,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Other IMPACT - Quality Degradation IMPACT - Varies by Context,,,"REFERENCE - CVE-2002-1976 DESCRIPTION - Linux kernel 2.2 and above allow promiscuous mode using a different method than previous versions, and ifconfig is not aware of the new method (alternate path property). LINK - https://www.cve.org/CVERecord?id=CVE-2",,,TAXONOMY NAME - PLOVER:ENTRY NAME:CHANGE Behavioral Change::,,"Software Development,Research Concept"
279,Incorrect Execution-Assigned Permissions,Variant,Draft,"While it is executing, the product sets the permissions of an object in a way that violates the intended permissions that have been specified by the user.",,NATURE:ChildOf:CWE ID:732 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. PHASE - Architecture and Design PHASE - Operation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Application Data IMPACT - Modify Application Data,,"PHASE - Architecture and Design Operation DESCRIPTION - Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software.  PHASE - Architecture and Design STRATEGY - Separation of Privilege DESCRIPTI",REFERENCE - CVE-2002-0265 DESCRIPTION - Log files opened read/write. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0265  REFERENCE - CVE-2003-0876 DESCRIPTION - Log files opened read/write. LINK - https://www.cve.org/CVERecord?id=CVE-2003-0876  REFEREN,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Insecure execution-assigned permissions TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FIO06-C:ENTRY NAME:Create files with appropriate access permissions TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (20,,"Software Development,Research Concept"
122,Heap-based Buffer Overflow,Variant,Draft,"A heap overflow condition is a buffer overflow, where the buffer that can be overwritten is allocated in the heap portion of memory, generally meaning that the buffer was allocated using a routine such as malloc().",,NATURE:ChildOf:CWE ID:788 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:787 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart IMPACT - DoS -  Resource Consumption (CPU) IMPACT - DoS -  Resource Consumption (Memory) NOTE - Buffer overflows generally lead to crashes. Other attacks leading to lack of availability are poss","METHOD - Fuzzing DESCRIPTION - Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often c",PHASE - DESCRIPTION - Pre-design  Use a language or compiler that performs automatic bounds checking.  PHASE - Architecture and Design DESCRIPTION - Use an abstraction library to abstract away risky APIs. Not a complete solution.  PHASE - Operation Build ,"REFERENCE - CVE-2021-43537 DESCRIPTION - Chain: in a web browser, an unsigned 64-bit integer is forcibly cast to a 32-bit integer (CWE-681) and potentially leading to an integer overflow (CWE-190). If an integer overflow occurs, this can cause heap memory",,Memory,TAXONOMY NAME - CLASP:ENTRY NAME:Heap overflow TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP8:ENTRY NAME:Faulty Buffer Access TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:STR31-C:ENTRY NAME:Guarantee that storage for strings has sufficient space f,TYPE - Relationship NOTE - Heap-based buffer overflows are usually just as dangerous as stack-based buffer overflows.::,Research Concept
1384,Improper Handling of Physical or Environmental Conditions,Class,Incomplete,The product does not properly handle unexpected physical or environmental conditions that occur naturally or are artificially induced.,"Hardware products are typically only guaranteed to behave correctly within certain physical limits or environmental conditions. Such products cannot necessarily control the physical or external conditions to which they are subjected. However, the inabilit",NATURE:ChildOf:CWE ID:703 VIEW ID:1000 ORDINAL:Primary,,TECHNOLOGY CLASS:System on Chip TECHNOLOGY PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Undetermined,,,"PHASE - Architecture and Design: NOTE - The product's design might not consider checking and handling extreme conditions. PHASE - Manufacturing: NOTE - For hardware manufacturing, sub-par components might be chosen that are not able to handle the expected",SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Varies by Context IMPACT - Unexpected State NOTE - Consequences of this weakness are highly dependent on the role of affected components within the larger product.,,"PHASE - Requirements DESCRIPTION - In requirements, be specific about expectations for how the product will perform when it exceeds physical and environmental boundary conditions, e.g., by shutting down.  PHASE - Architecture and Design Implementation DES",REFERENCE - CVE-2019-17391 DESCRIPTION - Lack of anti-glitch protections allows an attacker to launch a physical attack to bypass the secure boot and read protected eFuses. LINK - https://www.cve.org/CVERecord?id=CVE-2019-17391,,,,,"Hardware Development,Research Concept"
1269,Product Released in Non-Release Configuration,Base,Incomplete,The product released to market is released in pre-production or manufacturing configuration.,"Products in the pre-production or manufacturing stages are configured to have many debug hooks and debug capabilities, including but not limited to: Ability to override/bypass various cryptographic checks (including authentication, authorization, and inte",NATURE:ChildOf:CWE ID:693 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:VHDL LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Verilog LANGUAGE PREVALENCE:Undetermined LANGUAGE CLASS:Compiled LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTUR,,,PHASE - Implementation PHASE - Integration PHASE - Manufacturing,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Access Control SCOPE - Accountability SCOPE - Authentication SCOPE - Authorization SCOPE - Non-Repudiation IMPACT - Other LIKELIHOOD - High,,"PHASE - Implementation DESCRIPTION - Ensure that there exists a marker for denoting the Manufacturing Complete stage and that the Manufacturing Complete marker gets updated at the Manufacturing Complete stage (i.e., the Manufacturing Complete fuse gets bl","REFERENCE - CVE-2019-13945 DESCRIPTION - Regarding SSA-686531, a hardware based manufacturing access on S7-1200 and S7-200 SMART has occurred. A vulnerability has been identified in SIMATIC S7-1200 CPU family (incl. SIPLUS variants) (All versions), SIMATI",,,,,"Hardware Development,Research Concept"
1336,Improper Neutralization of Special Elements Used in a Template Engine,Base,Incomplete,"The product uses a template engine to insert or process externally-influenced input, but it does not neutralize or incorrectly neutralizes special elements or syntax that can be interpreted as template expressions or other code directives when processed b","Many web applications use template engines that allow developers to insert externally-influenced values into free text or messages in order to generate a full web page, document, message, etc. Such engines include Twig, Jinja2, Pug, Java Server Pages, Fre",NATURE:ChildOf:CWE ID:94 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:PHP LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Python LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:JavaScript LANGUAGE PREVALENCE:Undetermined LANGUAGE CLASS:Interpreted LANGUAGE PREV,,TERM - Server-Side Template Injection / SSTI DESCRIPTION - This term is used for injection into template engines being used by a server. TERM - Client-Side Template Injection / CSTI DESCRIPTION - This term is used for injection into template engines being,PHASE - Architecture and Design: NOTE - The developer might choose a template engine that makes it easier for programmers to write vulnerable code. PHASE - Implementation: NOTE - The programmer might not use engine's built-in sandboxes or other capabiliti,SCOPE - Integrity IMPACT - Execute Unauthorized Code or Commands,,"PHASE - Architecture and Design DESCRIPTION - Choose a template engine that offers a sandbox or restricted mode, or at least limits the power of any available expressions, function calls, or commands.  PHASE - Implementation DESCRIPTION - Use the template",REFERENCE - CVE-2017-16783 DESCRIPTION - server-side template injection in content management server LINK - https://www.cve.org/CVERecord?id=CVE-2017-16783  REFERENCE - CVE-2020-9437 DESCRIPTION - authentication / identity management product has client-si,,,,"TYPE - Relationship NOTE - Since expression languages are often used in templating languages, there may be some overlap with CWE-917 (Expression Language Injection). XSS (CWE-79) is also co-located with template injection.  TYPE - Maintenance NOTE - The i",Research Concept
1068,Inconsistency Between Implementation and Documented Design,Base,Incomplete,The implementation of the product is not consistent with the design as described within the relevant documentation.,"This issue makes it more difficult to maintain the product due to inconsistencies, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilitie",NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Implementation,#VALUE!,,,,,,,,"Software Development,Research Concept"
473,PHP External Variable Modification,Variant,Draft,"A PHP application does not properly protect against the modification of variables from external sources, such as query parameters or cookies. This can expose the application to numerous weaknesses that would not exist otherwise.",,NATURE:ChildOf:CWE ID:471 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:98 VIEW ID:1000,,LANGUAGE NAME:PHP LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Integrity IMPACT - Modify Application Data,,"PHASE - Requirements Implementation DESCRIPTION - Carefully identify which variables can be controlled or influenced by an external user, and consider adopting a naming convention to emphasize when externally modifiable variables are being used. An applic",REFERENCE - CVE-2000-0860 DESCRIPTION - File upload allows arbitrary file read by setting hidden form variables to match internal variable names. LINK - https://www.cve.org/CVERecord?id=CVE-2000-0860  REFERENCE - CVE-2001-0854 DESCRIPTION - Mistakenly tru,,,TAXONOMY NAME - PLOVER:ENTRY NAME:PHP External Variable Modification::,"TYPE - Relationship NOTE - This is a language-specific instance of Modification of Assumed-Immutable Data (MAID). This can be resultant from direct request (alternate path) issues. It can be primary to weaknesses such as PHP file inclusion, SQL injection,",Research Concept
656,Reliance on Security Through Obscurity,Class,Draft,"The product uses a protection mechanism whose strength depends heavily on its obscurity, such that knowledge of its algorithms or key data is sufficient to defeat the mechanism.","This reliance on security through obscurity can produce resultant weaknesses if an attacker is able to reverse engineer the inner workings of the mechanism. Note that obscurity can be one small part of defense in depth, since it can create more work for a",NATURE:ChildOf:CWE ID:657 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:693 VIEW ID:1000 NATURE:CanPrecede:CWE ID:259 VIEW ID:1000 NATURE:CanPrecede:CWE ID:321 VIEW ID:1000 NATURE:CanPrecede:CWE ID:472 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,TERM - Never Assuming your secrets are safe::,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Other IMPACT - Other NOTE - The security mechanism can be bypassed easily.,,"PHASE - Architecture and Design DESCRIPTION - Always consider whether knowledge of your code or design is sufficient to break it. Reverse engineering is a highly successful discipline, and financially feasible for motivated adversaries. Black-box techniqu",REFERENCE - CVE-2006-6588 DESCRIPTION - Reliance on hidden form fields in a web application. Many web application vulnerabilities exist because the developer did not consider that hidden form fields can be processed using a modified client. LINK - https:/,,,,"TYPE - Relationship NOTE - Note that there is a close relationship between this weakness and CWE-603 (Use of Client-Side Authentication). If developers do not believe that a user can reverse engineer a client, then they are more likely to choose client-si","Software Development,Research Concept"
1282,Assumed-Immutable Data is Stored in Writable Memory,Base,Incomplete,"Immutable data, such as a first-stage bootloader, device identifiers, and write-once configuration settings are stored in writable memory that can be re-programmed or updated in the field.","Security services such as secure boot, authentication of code and data, and device attestation all require assets such as the first stage bootloader, public keys, golden hash digests, etc. which are implicitly trusted. Storing these assets in read-only me",NATURE:ChildOf:CWE ID:668 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:471 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,"PHASE - Implementation: NOTE - Keys, code, configuration settings, and other data should be programmed in write-once or read-only memory instead of writable memory.",SCOPE - Integrity IMPACT - Varies by Context,,PHASE - Implementation DESCRIPTION - All immutable code or data should be programmed into ROM or write-once memory.,,,,,"TYPE - Maintenance NOTE - This entry is still under development and will continue to see updates and content improvements.  TYPE - Maintenance NOTE - As of CWE 4.3, CWE-1282 and CWE-1233 are being investigated for potential duplication or overlap.::","Hardware Development,Research Concept"
274,Improper Handling of Insufficient Privileges,Base,Draft,"The product does not handle or incorrectly handles when it has insufficient privileges to perform an operation, leading to resultant weaknesses.",,NATURE:ChildOf:CWE ID:755 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:269 VIEW ID:1000 NATURE:PeerOf:CWE ID:271 VIEW ID:1000 NATURE:CanAlsoBe:CWE ID:280 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. PHASE - Operation,SCOPE - Other IMPACT - Other IMPACT - Alter Execution Logic,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,REFERENCE - CVE-2001-1564 DESCRIPTION - System limits are not properly enforced after privileges are dropped. LINK - https://www.cve.org/CVERecord?id=CVE-2001-1564  REFERENCE - CVE-2005-3286 DESCRIPTION - Firewall crashes when it can't read a critical mem,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Insufficient privileges::,"TYPE - Maintenance NOTE - CWE-280 and CWE-274 are too similar. It is likely that CWE-274 will be deprecated in the future.  TYPE - Relationship NOTE - Overlaps dropped privileges, insufficient permissions.  TYPE - Theoretical NOTE - This has a layering re","Software Development,Research Concept"
448,Obsolete Feature in UI,Base,Draft,A UI function is obsolete and the product does not warn the user.,,NATURE:ChildOf:CWE ID:446 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Quality Degradation IMPACT - Varies by Context,,PHASE - Architecture and Design DESCRIPTION - Remove the obsolete feature from the UI. Warn the user that the feature is no longer supported.,,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Obsolete feature in UI::,,"Software Development,Research Concept"
404,Improper Resource Shutdown or Release,Class,Draft,The product does not release or incorrectly releases a resource before it is made available for re-use.,"When a resource is created or allocated, the developer is responsible for properly releasing the resource as well as accounting for all potential paths of expiration or invalidation, such as a set period of time or revocation.",NATURE:ChildOf:CWE ID:664 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:405 VIEW ID:1000 NATURE:CanPrecede:CWE ID:619 VIEW ID:1000,": ORDINALITY:Primary:DESCRIPTION:Improper release or shutdown of resources can be primary to resource exhaustion, performance, and information confidentiality problems to name a few.: ORDINALITY:Resultant:DESCRIPTION:Improper release or shutdown of resour",LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Availability SCOPE - Other IMPACT - DoS -  Resource Consumption (Other) IMPACT - Varies by Context NOTE - Most unreleased resource issues result in general software reliability problems, but if an attacker can intentionally trigger a resource leak","METHOD - Automated Dynamic Analysis DESCRIPTION - This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fa","PHASE - Requirements STRATEGY - Language Selection DESCRIPTION - Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, languages such as Java, Ruby, and Lisp perform automati",REFERENCE - CVE-1999-1127 DESCRIPTION - Does not shut down named pipe connections if malformed data is sent. LINK - https://www.cve.org/CVERecord?id=CVE-1999-1127  REFERENCE - CVE-2001-0830 DESCRIPTION - Sockets not properly closed when attacker repeatedl,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Improper resource shutdown or release TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Unreleased Resource TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A9:ENTRY NAME:Denial of Service:MAPPING FIT:CWE More Specific TAXONOMY,"TYPE - Relationship NOTE - Overlaps memory leaks, asymmetric resource consumption, malformed input errors.::",Research Concept
203,Observable Discrepancy,Base,Incomplete,"The product behaves differently or sends different responses under different circumstances in a way that is observable to an unauthorized actor, which exposes security-relevant information about the state of the product, such as whether a particular opera","Discrepancies can take many forms, and variations may be detectable in timing, control flow, communications such as replies or requests, or general behavior. These discrepancies can reveal information about the product's operation or internal state to an ",NATURE:ChildOf:CWE ID:200 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:200 VIEW ID:1003 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined,,TERM - Side Channel Attack DESCRIPTION - Observable Discrepancies are at the root of side channel attacks.::,PHASE - Architecture and Design PHASE - Implementation,"SCOPE - Confidentiality SCOPE - Access Control IMPACT - Read Application Data IMPACT - Bypass Protection Mechanism NOTE - An attacker can gain access to sensitive information about the system, including authentication information that may allow an attacke",,PHASE - Architecture and Design STRATEGY - Separation of Privilege DESCRIPTION - Compartmentalize the system to have safe areas where trust boundaries can be unambiguously drawn. Do not allow sensitive data to go outside of the trust boundary and always b,REFERENCE - CVE-2020-8695 DESCRIPTION - Observable discrepancy in the RAPL interface for some Intel processors allows information disclosure. LINK - https://www.cve.org/CVERecord?id=CVE-2020-8695  REFERENCE - CVE-2019-14353 DESCRIPTION - Crypto hardware w,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Discrepancy Information Leaks TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A6:ENTRY NAME:Information Leakage and Improper Error Handling:MAPPING FIT:CWE More Specific TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A7:ENTRY NA,,"Hardware Development,Research Concept"
918,Server-Side Request Forgery (SSRF),Base,Incomplete,"The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.","By providing URLs to unexpected hosts or ports, attackers can make it appear that the server is sending the request, possibly bypassing access controls such as firewalls that prevent the attackers from accessing the URLs directly. The server can be used a",NATURE:ChildOf:CWE ID:441 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:610 VIEW ID:1003 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY NAME:Web Server TECHNOLOGY PREVALENCE:Undetermined,,TERM - XSPA DESCRIPTION - Cross Site Port Attack::,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Application Data  SCOPE - Integrity IMPACT - Execute Unauthorized Code or Commands,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,"REFERENCE - CVE-2021-26855 DESCRIPTION - Server Side Request Forgery (SSRF) in mail server, as exploited in the wild per CISA KEV. LINK - https://www.cve.org/CVERecord?id=CVE-2021-26855  REFERENCE - CVE-2021-21973 DESCRIPTION - Server Side Request Forgery",,,,"TYPE - Relationship NOTE - CWE-918 (SSRF) and CWE-611 (XXE) are closely related, because they both involve web-related technologies and can launch outbound requests to unexpected destinations. However, XXE can be performed client-side, or in other context","Software Development,Research Concept"
272,Least Privilege Violation,Base,Incomplete,The elevated privilege level required to perform operations such as chroot() should be dropped immediately after the operation is performed.,,NATURE:ChildOf:CWE ID:271 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. PHASE - Operation,SCOPE - Access Control SCOPE - Confidentiality IMPACT - Gain Privileges or Assume Identity IMPACT - Read Application Data IMPACT - Read Files or Directories NOTE - An attacker may be able to access resources with the elevated privilege that could not be a,"METHOD - Automated Static Analysis - Binary or Bytecode DESCRIPTION - According to SOAR, the following detection techniques may be useful  Cost effective for partial coverage  Compare binary / bytecode to application permission manifest EFFECTIVENESS - SO","PHASE - Architecture and Design Operation DESCRIPTION - Very carefully manage the setting, management, and handling of privileges. Explicitly manage trust zones in the software.  PHASE - Architecture and Design STRATEGY - Separation of Privilege DESCRIPTI",,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Least Privilege Violation TAXONOMY NAME - CLASP:ENTRY NAME:Failure to drop privileges when reasonable TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:POS02-C:ENTRY NAME:Follow the principle of least privilege,"TYPE - Maintenance NOTE - CWE-271, CWE-272, and CWE-250 are all closely related and possibly overlapping. CWE-271 is probably better suited as a category.  TYPE - Other NOTE - If system privileges are not dropped when it is reasonable to do so, this is no","Software Development,Research Concept"
1116,Inaccurate Comments,Base,Incomplete,The source code contains comments that do not accurately describe or explain aspects of the portion of the code with which the comment is associated.,"When a comment does not accurately reflect the associated code elements, this can introduce confusion to a reviewer (due to inconsistencies) or make it more difficult and less efficient to validate that the code is implementing the intended behavior corre",NATURE:ChildOf:CWE ID:1078 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,PHASE - Implementation DESCRIPTION - Verify that each comment accurately reflects what is intended to happen during execution of the code.,,,,,,"Software Development,Research Concept"
220,Storage of File With Sensitive Data Under FTP Root,Variant,Draft,"The product stores sensitive data under the FTP server root with insufficient access control, which might make it accessible to untrusted parties.",,NATURE:ChildOf:CWE ID:552 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,"Various Unix FTP servers require a password file that is under the FTP root, due to use of chroot.",,PHASE - Operation PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.,SCOPE - Confidentiality IMPACT - Read Application Data,,PHASE - Implementation System Configuration DESCRIPTION - Avoid storing information under the FTP root directory.  PHASE - System Configuration DESCRIPTION - Access control permissions should be set to prevent reading/writing of sensitive files inside/out,,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Sensitive Data Under FTP Root::,,Research Concept
522,Insufficiently Protected Credentials,Class,Incomplete,"The product transmits or stores authentication credentials, but it uses an insecure method that is susceptible to unauthorized interception and/or retrieval.",,NATURE:ChildOf:CWE ID:1390 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:287 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:668 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic. PHASE - Implementation,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - An attacker could gain access to user accounts and access sensitive data used by the user accounts.,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design DESCRIPTION - Use an appropriate security mechanism to protect the credentials.  PHASE - Architecture and Design DESCRIPTION - Make appropriate use of cryptography to protect the credentials.  PHASE - Implementation DESCRIP,"REFERENCE - CVE-2022-30018 DESCRIPTION - A messaging platform serializes all elements of User/Group objects, making private information available to adversaries LINK - https://www.cve.org/CVERecord?id=CVE-2022-30018  REFERENCE - CVE-2022-29959 DESCRIPTION",,,TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A7:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE Mor,,Research Concept
1280,Access Control Check Implemented After Asset is Accessed,Base,Incomplete,A product's hardware-based access control check occurs after the asset has been accessed.,"The product implements a hardware-based access control check. The asset should be accessible only after the check is successful. If, however, this operation is not atomic and the asset is accessed before the check is complete, the security of the system m",NATURE:ChildOf:CWE ID:696 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:284 VIEW ID:1000,,LANGUAGE NAME:Verilog LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:VHDL LANGUAGE PREVALENCE:Undetermined LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermine,,,PHASE - Implementation,SCOPE - Access Control SCOPE - Confidentiality SCOPE - Integrity IMPACT - Modify Memory IMPACT - Read Memory IMPACT - Modify Application Data IMPACT - Read Application Data IMPACT - Gain Privileges or Assume Identity IMPACT - Bypass Protection Mechanism,,PHASE - Implementation DESCRIPTION - Implement the access control check first. Access should only be given to asset if agent is authorized.,,,,,,"Hardware Development,Research Concept"
6,J2EE Misconfiguration: Insufficient Session-ID Length,Variant,Incomplete,The J2EE application is configured to use an insufficient session ID length.,"If an attacker can guess or steal a session ID, then they may be able to take over the user's session (called session hijacking). The number of possible session IDs increases with increased session ID length, making it more difficult to guess or steal a s",NATURE:ChildOf:CWE ID:334 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,Session ID's can be used to identify communicating parties in a web environment. The expected number of seconds required to guess a valid session identifier is given by the equation: (2^B+1)/(2*A*S) Where: - B is the number of bits of entropy in the sessi,,PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic. PHASE - Implementation,"SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - If an attacker can guess an authenticated user's session identifier, they can take over the user's session.",,PHASE - Implementation DESCRIPTION - Session identifiers should be at least 128 bits long to prevent brute-force session guessing. A shorter session identifier leaves the application open to brute-force session guessing attacks.  PHASE - Implementation DE,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:J2EE Misconfiguration: Insufficient Session-ID Length::,,Research Concept
1070,Serializable Data Element Containing non-Serializable Item Elements,Base,Incomplete,"The product contains a serializable, storable data element such as a field or member, but the data element contains member elements that are not serializable.","This issue can prevent the product from running reliably. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability. As examples, the serializable nature of a data element comes from a serializable Ser",NATURE:ChildOf:CWE ID:1076 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Reliability,,,,,,TAXONOMY NAME - OMG ASCRM:ENTRY ID:ASCRM-RLB-3::,,"Software Development,Research Concept"
105,Struts: Form Field Without Validator,Variant,Draft,"The product has a form field that is not validated by a corresponding validation form, which can introduce other weaknesses related to insufficient input validation.","Omitting validation for even a single input field may give attackers the leeway they need to compromise the product. Although J2EE applications are not generally susceptible to memory corruption attacks, if a J2EE application interfaces with native code t",NATURE:ChildOf:CWE ID:1173 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:20 VIEW ID:700 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,"PHASE - Implementation: NOTE - Some products use the same ActionForm for more than one purpose. In situations like this, some fields may go unused under some action mappings.","SCOPE - Integrity IMPACT - Unexpected State  SCOPE - Integrity IMPACT - Bypass Protection Mechanism NOTE - If unused fields are not validated, shared business logic in an action may allow attackers to bypass the validation checks that are performed for ot",,"PHASE - Implementation DESCRIPTION - Validate all form fields. If a field is unused, it is still important to constrain it so that it is empty or undefined.",,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Struts: Form Field Without Validator TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,Research Concept
230,Improper Handling of Missing Values,Variant,Draft,"The product does not handle or incorrectly handles when a parameter, field, or argument name is specified, but the associated value is missing, i.e. it is empty, blank, or null.",,NATURE:ChildOf:CWE ID:229 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,,REFERENCE - CVE-2002-0422 DESCRIPTION - Blank Host header triggers resultant infoleak. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0422  REFERENCE - CVE-2000-1006 DESCRIPTION - Blank charset attribute in MIME header triggers crash. LINK - https://www,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Missing Value Error TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:ERR08-J:ENTRY NAME:Do not catch NullPointerException or any of its ancestors::,"TYPE - Research Gap NOTE - Some crash by port scan bugs are probably due to this, but lack of diagnosis makes it difficult to be certain.::",Research Concept
622,Improper Validation of Function Hook Arguments,Variant,Draft,"The product adds hooks to user-accessible API functions, but it does not properly validate the arguments. This could lead to resultant vulnerabilities.","Such hooks can be used in defensive software that runs with privileges, such as anti-virus or firewall, which hooks kernel calls. When the arguments are not validated, they could be used to bypass the protection scheme or attack the product itself.",NATURE:ChildOf:CWE ID:20 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,"PHASE - Architecture and Design DESCRIPTION - Ensure that all arguments are verified, as defined by the API you are protecting.  PHASE - Architecture and Design DESCRIPTION - Drop privileges before invoking such functions, if possible.",REFERENCE - CVE-2007-0708 DESCRIPTION - DoS in firewall using standard Microsoft functions LINK - https://www.cve.org/CVERecord?id=CVE-2007-0708  REFERENCE - CVE-2006-7160 DESCRIPTION - DoS in firewall using standard Microsoft functions LINK - https://www,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP27:ENTRY NAME:Tainted input to environment::,,Research Concept
829,Inclusion of Functionality from Untrusted Control Sphere,Base,Incomplete,"The product imports, requires, or includes executable functionality (such as a library) from a source that is outside of the intended control sphere.","When including third-party functionality, such as a web widget, library, or other source of functionality, the product must effectively trust that functionality. Without sufficient protection mechanisms, the functionality could be malicious in nature (eit",NATURE:ChildOf:CWE ID:669 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:669 VIEW ID:1003 ORDINAL:Primary,,,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands NOTE - An attacker could insert malicious functionality into the program by causing the program to download code that the attacker has placed int,"METHOD - Automated Static Analysis - Binary or Bytecode DESCRIPTION - According to SOAR, the following detection techniques may be useful  Cost effective for partial coverage  Bytecode Weakness Analysis - including disassembler + source code weakness anal",PHASE - Architecture and Design STRATEGY - Libraries or Frameworks DESCRIPTION - Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.  PHASE - Architecture and Design ,"REFERENCE - CVE-2010-2076 DESCRIPTION - Product does not properly reject DTDs in SOAP messages, which allows remote attackers to read arbitrary files, send HTTP requests to intranet servers, or cause a denial of service. LINK - https://www.cve.org/CVEReco",,,,,"Software Development,Research Concept"
456,Missing Initialization of a Variable,Variant,Draft,"The product does not initialize critical variables, which causes the execution environment to use unexpected values.",,NATURE:ChildOf:CWE ID:909 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:665 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:665 VIEW ID:1340 ORDINAL:Primary NATURE:CanPrecede:CWE ID:89 VIEW ID:1000 NATURE:CanPrecede:CWE ID:120 VIEW ID:1000 NATURE:,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Integrity SCOPE - Other IMPACT - Unexpected State IMPACT - Quality Degradation IMPACT - Varies by Context NOTE - The uninitialized data may be invalid, causing logic errors within the program. In some cases, this could result in a security problem","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - Check that critical variables are initialized.  PHASE - Testing DESCRIPTION - Use a static analysis tool to spot non-initialized variables.,REFERENCE - CVE-2020-6078 DESCRIPTION - Chain: The return value of a function returning a pointer is not checked for success (CWE-252) resulting in the later use of an uninitialized variable (CWE-456) and a null pointer de REFERENCE (CWE-476) LINK - https,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Missing Initialization TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP1:ENTRY NAME:Glitch in computation TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:ERR30-C:ENTRY NAME:Set errno to zero before calling a library fun,"TYPE - Relationship NOTE - This weakness is a major factor in a number of resultant weaknesses, especially in web applications that allow global variable initialization (such as PHP) with libraries that can be directly requested.  TYPE - Research Gap NOTE",Research Concept
527,Exposure of Version-Control Repository to an Unauthorized Control Sphere,Variant,Incomplete,"The product stores a CVS, git, or other repository in a directory, archive, or other resource that is stored, transferred, or otherwise made accessible to unauthorized actors.","Version control repositories such as CVS or git store version-specific metadata and other details within subdirectories. If these subdirectories are stored on a web server or added to an archive, then these could be used by an attacker. This information m",NATURE:ChildOf:CWE ID:552 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Operation: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.,SCOPE - Confidentiality IMPACT - Read Application Data IMPACT - Read Files or Directories,,"PHASE - Operation Distribution System Configuration DESCRIPTION - Recommendations include removing any CVS directories and repositories from the production server, disabling the use of remote CVS repositories, and ensuring that the latest CVS patches and ",,,,,,Research Concept
578,EJB Bad Practices: Use of Class Loader,Variant,Draft,The product violates the Enterprise JavaBeans (EJB) specification by using the class loader.,"The Enterprise JavaBeans specification requires that every bean provider follow a set of programming guidelines designed to ensure that the bean will be portable and behave consistently in any EJB container. In this case, the product violates the followin",NATURE:ChildOf:CWE ID:573 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Other IMPACT - Execute Unauthorized Code or Commands IMPACT - Varies by Context,,PHASE - Architecture and Design Implementation DESCRIPTION - Do not use the Class Loader when writing EJBs.,,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP3:ENTRY NAME:Use of an improper API::,,Research Concept
318,Cleartext Storage of Sensitive Information in Executable,Variant,Draft,The product stores sensitive information in cleartext in an executable.,"Attackers can reverse engineer binary code to obtain secret data. This is especially easy when the cleartext is plain ASCII. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being",NATURE:ChildOf:CWE ID:312 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Application Data,,,"REFERENCE - CVE-2005-1794 DESCRIPTION - Product stores RSA private key in a DLL and uses it to sign a certificate, allowing spoofing of servers and Adversary-in-the-Middle (AITM) attacks. LINK - https://www.cve.org/CVERecord?id=CVE-2005-1794  REFERENCE -",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Plaintext Storage in Executable::,"TYPE - Terminology NOTE - Different people use cleartext and plaintext to mean the same thing: the lack of encryption. However, within cryptography, these have more precise meanings. Plaintext is the information just before it is fed into a cryptographic ",Research Concept
1315,Improper Setting of Bus Controlling Capability in Fabric End-point,Base,Incomplete,The bus controller enables bits in the fabric end-point to allow responder devices to control transactions on the fabric.,"To support reusability, certain fabric interfaces and end points provide a configurable register bit that allows IP blocks connected to the controller to access other peripherals connected to the fabric. This allows the end point to be used with devices t",NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design PHASE - Implementation PHASE - System Configuration,SCOPE - Access Control IMPACT - Modify Memory IMPACT - Read Memory IMPACT - Bypass Protection Mechanism,,"PHASE - Architecture and Design DESCRIPTION - For responder devices, the register bit in the fabric end-point that enables the bus controlling capability must be set to 0 by default. This bit should not be set during secure-boot flows. Also, writes to thi",,,,,,"Hardware Development,Research Concept"
27,Path Traversal: 'dir/../../filename',Variant,Draft,"The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize multiple internal ../ sequences that can resolve to a location that is outside of that directory.",This allows attackers to traverse the file system to access files or directories that are outside of the restricted directory. The 'directory/../../filename' manipulation is useful for bypassing some path traversal protection schemes. Sometimes a program ,NATURE:ChildOf:CWE ID:23 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,"PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n","REFERENCE - CVE-2002-0298 DESCRIPTION - Server allows remote attackers to cause a denial of service via certain HTTP GET requests containing a %2e%2e (encoded dot-dot), several /../ sequences, or several ../ in a URI. LINK - https://www.cve.org/CVERecord?",,,TAXONOMY NAME - PLOVER:ENTRY NAME:'directory/../../filename TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,,Research Concept
567,Unsynchronized Access to Shared Data in a Multithreaded Context,Base,Draft,"The product does not properly synchronize shared data, such as static variables across threads, which can lead to undefined behavior and unpredictable data changes.","Within servlets, shared static variables are not protected from concurrent access, but servlets are multithreaded. This is a typical programming mistake in J2EE applications, since the multithreading is handled by the framework. When a shared variable can",NATURE:ChildOf:CWE ID:820 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:662 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:662 VIEW ID:1340 ORDINAL:Primary NATURE:CanPrecede:CWE ID:488 VIEW ID:1000,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Read Application Data IMPACT - Modify Application Data IMPACT - DoS -  Instability IMPACT - DoS -  Crash, Exit, or Restart NOTE - If the shared variable contains sensitive data, it ma","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation DESCRIPTION - Remove the use of static variables used between servlets. If this cannot be avoided, use synchronized access for these variables.",,,,TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:VNA00-J:ENTRY NAME:Ensure visibility when accessing shared primitive variables TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:VNA02-J:ENTRY NA,,Research Concept
1391,Use of Weak Credentials,Class,Incomplete,"The product uses weak credentials (such as a default key or hard-coded password) that can be calculated, derived, reused, or guessed by an attacker.","By design, authentication protocols try to ensure that attackers must perform brute force attacks if they do not know the credentials such as a key or password. However, when these credentials are easily predictable or even fixed (as with default or hard-",NATURE:ChildOf:CWE ID:1390 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT,,,PHASE - Requirements PHASE - Architecture and Design PHASE - Installation PHASE - Operation,#VALUE!,,,"REFERENCE - [REF-1374] DESCRIPTION - Chain: JavaScript-based cryptocurrency library can fall back to the insecure Math.random() function instead of reporting a failure (CWE-392), thus reducing the entropy (CWE-332) and leading to generation of non-unique",,,TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 2-4:ENTRY NAME:Req SP.09.02 RE(1) TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-1:ENTRY NAME:Req SR-3 b) TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-1:ENTRY NAME:Req SI-2 b) TAXONOMY NAME - ISA/IEC 62443:ENTRY,,Research Concept
384,Session Fixation,Compound,Incomplete,"Authenticating a user, or otherwise establishing a new user session, without invalidating any existing session identifier gives an attacker the opportunity to steal authenticated sessions.","Such a scenario is commonly observed when: A web application authenticates a user without first invalidating the existing session, thereby continuing to use the session already associated with the user. An attacker is able to force a known session identif",NATURE:ChildOf:CWE ID:610 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:610 VIEW ID:1003 ORDINAL:Primary NATURE:Requires:CWE ID:346 VIEW ID:1000 NATURE:Requires:CWE ID:472 VIEW ID:1000 NATURE:Requires:CWE ID:441 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity,,PHASE - Architecture and Design DESCRIPTION - Invalidate any existing session identifiers prior to authorizing a new user session.  PHASE - Architecture and Design DESCRIPTION - For platforms such as ASP that do not generate new values for sessionid cooki,"REFERENCE - CVE-2022-2820 DESCRIPTION - Website software for game servers does not proprerly terminate user sessions, allowing for possible session fixation LINK - https://www.cve.org/CVERecord?id=CVE-2022-2820",,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Session Fixation TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific TAXONOMY NAME - WASC:ENTRY ID:37:ENTRY NAME:Session Fixa,TYPE - Other NOTE - Other attack vectors include DNS poisoning and related network based attacks where an attacker causes the user to visit a malicious site by redirecting a request for a valid site. Network based attacks typically involve a physical pres,Research Concept
262,Not Using Password Aging,Base,Draft,The product does not have a mechanism in place for managing password aging.,"Password aging (or password rotation) is a policy that forces users to change their passwords after a defined time period passes, such as every 30 or 90 days. Without mechanisms such as aging, users might not change their passwords in a timely manner. Not",NATURE:ChildOf:CWE ID:1390 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:309 VIEW ID:1000 NATURE:PeerOf:CWE ID:324 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.,"SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - As passwords age, the probability that they are compromised grows.",,"PHASE - Architecture and Design DESCRIPTION - As part of a product's design, require users to change their passwords regularly and avoid reusing previous passwords.  PHASE - Implementation DESCRIPTION - Developers might disable clipboard paste operations ",,,,TAXONOMY NAME - CLASP:ENTRY NAME:Not allowing password aging::,,"Software Development,Research Concept"
263,Password Aging with Long Expiration,Base,Draft,"The product supports password aging, but the expiration period is too long.","Password aging (or password rotation) is a policy that forces users to change their passwords after a defined time period passes, such as every 30 or 90 days. A long expiration provides more time for attackers to conduct password cracking before users are",NATURE:ChildOf:CWE ID:1390 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic.,"SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - As passwords age, the probability that they are compromised grows.",,"PHASE - Architecture and Design DESCRIPTION - Ensure that password aging is limited so that there is a defined maximum age for passwords. Note that if the expiration window is too short, it can cause users to generate poor or predictable passwords.  PHASE",,,,TAXONOMY NAME - CLASP:ENTRY NAME:Allowing password aging::,,"Software Development,Research Concept"
788,Access of Memory Location After End of Buffer,Base,Incomplete,The product reads or writes to a buffer using an index or pointer that references a memory location after the end of the buffer.,This typically occurs when a pointer or its index is incremented to a position after the buffer; or when pointer arithmetic results in a position after the buffer.,NATURE:ChildOf:CWE ID:119 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:119 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:119 VIEW ID:1340 ORDINAL:Primary,,,,,#VALUE!,"SCOPE - Confidentiality IMPACT - Read Memory NOTE - For an out-of-bounds read, the attacker may have access to sensitive information. If the sensitive information contains system details, such as the current buffers position in memory, this knowledge can ","METHOD - Fuzzing DESCRIPTION - Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often c",,REFERENCE - CVE-2009-2550 DESCRIPTION - Classic stack-based buffer overflow in media player using a long entry in a playlist LINK - https://www.cve.org/CVERecord?id=CVE-2009-2550  REFERENCE - CVE-2009-2403 DESCRIPTION - Heap-based buffer overflow in media,,,TAXONOMY NAME - OMG ASCRM:ENTRY ID:ASCRM-CWE-788::,,"Software Development,Research Concept"
1045,Parent Class with a Virtual Destructor and a Child Class without a Virtual Destructor,Base,Incomplete,"A parent class has a virtual destructor method, but the parent has a child class that does not have a virtual destructor.","This issue can prevent the product from running reliably, since the child might not perform essential destruction operations. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability, such as a memory",NATURE:ChildOf:CWE ID:1076 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Reliability,,,,,,TAXONOMY NAME - OMG ASCRM:ENTRY ID:ASCRM-RLB-17::,,"Software Development,Research Concept"
109,Struts: Validator Turned Off,Variant,Draft,"Automatic filtering via a Struts bean has been turned off, which disables the Struts Validator and custom validation logic. This exposes the application to other weaknesses related to insufficient input validation.",,NATURE:ChildOf:CWE ID:1173 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:20 VIEW ID:700 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Access Control IMPACT - Bypass Protection Mechanism,,PHASE - Implementation DESCRIPTION - Ensure that an action form mapping enables validation. Set the validate field to true.,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Struts: Validator Turned Off TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,"TYPE - Other NOTE - The Action Form mapping in the demonstrative example disables the form's validate() method. The Struts bean: write tag automatically encodes special HTML characters, replacing a < with < and a > with >. This action can be disabled by s",Research Concept
84,Improper Neutralization of Encoded URI Schemes in a Web Page,Variant,Draft,The web application improperly neutralizes user-controlled input for executable script disguised with URI encodings.,,NATURE:ChildOf:CWE ID:79 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Resolve all URIs to absolute or canonical representations before processing.  PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Carefully check each input parameter against a ,REFERENCE - CVE-2005-0563 DESCRIPTION - Cross-site scripting (XSS) vulnerability in Microsoft Outlook Web Access (OWA) component in Exchange Server 5.5 allows remote attackers to inject arbitrary web script or HTML via an email message with an encoded jav,,,TAXONOMY NAME - PLOVER:ENTRY NAME:XSS using Script Via Encoded URI Schemes TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,Research Concept
1311,Improper Translation of Security Attributes by Fabric Bridge,Base,Draft,The bridge incorrectly translates security attributes from either trusted to untrusted or from untrusted to trusted when converting from one fabric protocol to another.,"A bridge allows IP blocks supporting different fabric protocols to be integrated into the system. Fabric end-points or interfaces usually have dedicated signals to transport security attributes. For example, HPROT signals in AHB, AxPROT signals in AXI, an",NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Verilog LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:VHDL LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Access Control IMPACT - Modify Memory IMPACT - Read Memory IMPACT - Gain Privileges or Assume Identity IMPACT - Bypass Protection Mechanism IMPACT - Execute Unauthorized Code or Commands,,PHASE - Architecture and Design DESCRIPTION - The translation must map signals in such a way that untrusted agents cannot map to trusted agents or vice-versa.  PHASE - Implementation DESCRIPTION - Ensure that the translation maps signals in such a way tha,,,,,,"Hardware Development,Research Concept"
183,Permissive List of Allowed Inputs,Base,Draft,"The product implements a protection mechanism that relies on a list of inputs (or properties of inputs) that are explicitly allowed by policy because the inputs are assumed to be safe, but the list is too permissive - that is, it allows an input that is u",,NATURE:ChildOf:CWE ID:697 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:434 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,"TERM - Allowlist / Allow List DESCRIPTION - This is used by CWE and CAPEC instead of other commonly-used terms. Its counterpart is denylist. TERM - Safelist / Safe List DESCRIPTION - This is often used by security tools such as firewalls, email or web gat",PHASE - Implementation,SCOPE - Access Control IMPACT - Bypass Protection Mechanism,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,REFERENCE - CVE-2019-12799 DESCRIPTION - chain: bypass of untrusted deserialization issue (CWE-502) by using an assumed-trusted class (CWE-183) LINK - https://www.cve.org/CVERecord?id=CVE-2019-12799  REFERENCE - CVE-2019-10458 DESCRIPTION - sandbox bypass,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Permissive Whitelist::,,"Software Development,Research Concept"
665,Improper Initialization,Class,Draft,"The product does not initialize or incorrectly initializes a resource, which might leave the resource in an unexpected state when it is accessed or used.","This can have security implications when the associated resource is expected to have certain properties or values, such as a variable that determines whether a user has been authenticated or not.",NATURE:ChildOf:CWE ID:664 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary: ORDINALITY:Resultant::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,"PHASE - Implementation: NOTE - This weakness can occur in code paths that are not well-tested, such as rare error conditions. This is because the use of uninitialized data would be noticed as a bug during frequently-used functionality. PHASE - Operation","SCOPE - Confidentiality IMPACT - Read Memory IMPACT - Read Application Data NOTE - When reusing a resource such as memory or a program variable, the original contents of that resource may not be cleared before it is sent to an untrusted party.  SCOPE - Ac","METHOD - Automated Dynamic Analysis DESCRIPTION - This weakness can be detected using dynamic tools and techniques that interact with the software using large test suites with many diverse inputs, such as fuzz testing (fuzzing), robustness testing, and fa","PHASE - Requirements STRATEGY - Language Selection DESCRIPTION - Use a language that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid. For example, in Java, if the programmer does not explicitly initiali","REFERENCE - CVE-2001-1471 DESCRIPTION - chain: an invalid value prevents a library file from being included, skipping initialization of key variables, leading to resultant eval injection. LINK - https://www.cve.org/CVERecord?id=CVE-2001-1471  REFERENCE -",,,"TAXONOMY NAME - PLOVER:ENTRY NAME:Incorrect initialization TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:ARR02-C:ENTRY NAME:Explicitly specify array bounds, even if implicitly defined by an initializer TAXONOMY NAME - The CERT Oracle Secure Coding Standar",,Research Concept
300,Channel Accessible by Non-Endpoint,Class,Draft,"The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an end","In order to establish secure communication between two parties, it is often important to adequately verify the identity of entities at each end of the communication channel. Inadequate or inconsistent verification may result in insufficient or incorrect i",NATURE:ChildOf:CWE ID:923 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,TERM - Adversary-in-the-Middle / AITM TERM - Man-in-the-Middle / MITM TERM - Person-in-the-Middle / PITM TERM - Monkey-in-the-Middle TERM - Monster-in-the-Middle TERM - On-path attack TERM - Interception attack::,PHASE - Architecture and Design: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Access Control IMPACT - Read Application Data IMPACT - Modify Application Data IMPACT - Gain Privileges or Assume Identity NOTE - An attacker could pose as one of the entities and read or possibly modify t,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - Always fully authenticate both ends of any communications channel.  PHASE - Architecture and Design DESCRIPTION - Adhere to the principle of complete mediation.  PHASE - Implementation DESCRIPTION - A certificate binds,"REFERENCE - CVE-2014-1266 DESCRIPTION - chain: incorrect goto in Apple SSL product bypasses certificate validation, allowing Adversry-in-the-Middle (AITM) attack (Apple goto fail bug). CWE-705 (Incorrect Control Flow Scoping) -> CWE-561 (Dead Code) -> CWE",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Man-in-the-middle (MITM) TAXONOMY NAME - WASC:ENTRY ID:32:ENTRY NAME:Routing Detour TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SEC06-J:ENTRY NAME:Do not rely on the default automatic s,"TYPE - Maintenance NOTE - The summary identifies multiple distinct possibilities, suggesting that this is a category that must be broken into more specific weaknesses.::",Research Concept
467,Use of sizeof() on a Pointer Type,Variant,Draft,"The code calls sizeof() on a malloced pointer type, which always returns the wordsize/8. This can produce an unexpected result if the programmer intended to determine how much memory has been allocated.","The use of sizeof() on a pointer can sometimes generate useful information. An obvious case is to find out the wordsize on a platform. More often than not, the appearance of sizeof(pointer) indicates a bug.",NATURE:ChildOf:CWE ID:131 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Integrity SCOPE - Confidentiality IMPACT - Modify Memory IMPACT - Read Memory NOTE - This error can often cause one to allocate a buffer that is much smaller than what is needed, leading to resultant weaknesses such as buffer overflows.","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation DESCRIPTION - Use expressions such as sizeof(*pointer) instead of sizeof(pointer), unless you intend to run sizeof() on a pointer type to gain some platform independence or if you are allocating a variable on the stack.",,,,TAXONOMY NAME - CLASP:ENTRY NAME:Use of sizeof() on a pointer type TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:ARR01-C:ENTRY NAME:Do not apply the sizeof operator to a pointer when taking the size of an array TAXONOMY NAME - CERT C Secure Coding:ENTRY I,,Research Concept
1296,Incorrect Chaining or Granularity of Debug Components,Base,Incomplete,The product's debug components contain incorrect chaining or granularity of debug components.,"For debugging and troubleshooting a chip, several hardware design elements are often implemented, including: Various Test Access Ports (TAPs) allow boundary scan commands to be executed. For scanning the internal components of a chip, there are scan cells",NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Verilog LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:VHDL LANGUAGE PREVALENCE:Undetermined LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermine,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Access Control SCOPE - Authentication SCOPE - Authorization SCOPE - Availability SCOPE - Accountability IMPACT - Gain Privileges or Assume Identity IMPACT - Bypass Protection Mechanism IMPACT - Execute Una,METHOD - Architecture or Design Review DESCRIPTION - Appropriate Post-Si tests should be carried out at various authorization levels to ensure that debug components are properly chained and accessible only to users with appropriate credentials. EFFECTIVEN,PHASE - Implementation DESCRIPTION - Ensure that debug components are properly chained and their granularity is maintained at different authentication levels.,REFERENCE - CVE-2017-18347 DESCRIPTION - Incorrect access control in RDP Level 1 on STMicroelectronics STM32F0 series devices allows physically present attackers to extract the device's protected firmware via a special sequence of Serial Wire Debug (SWD),,,,TYPE - Maintenance NOTE - This entry is still under development and will continue to see updates and content improvements.::,"Hardware Development,Research Concept"
695,Use of Low-Level Functionality,Base,Incomplete,The product uses low-level functionality that is explicitly prohibited by the framework or specification under which the product is supposed to operate.,"The use of low-level functionality can violate the specification in unexpected ways that effectively disable built-in protection mechanisms, introduce exploitable inconsistencies, or otherwise expose the functionality to attack.",NATURE:ChildOf:CWE ID:573 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation,SCOPE - Other IMPACT - Other,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,,,,,,"Software Development,Research Concept"
397,Declaration of Throws for Generic Exception,Base,Draft,Throwing overly broad exceptions promotes complex error handling code that is more likely to contain security vulnerabilities.,"Declaring a method to throw Exception or Throwable makes it difficult for callers to perform proper error handling and error recovery. Java's exception mechanism, for example, is set up to make it easy for callers to anticipate what can go wrong and write",NATURE:ChildOf:CWE ID:705 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:221 VIEW ID:1000 NATURE:ChildOf:CWE ID:703 VIEW ID:1000,,LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C# LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Non-Repudiation SCOPE - Other IMPACT - Hide Activities IMPACT - Alter Execution Logic,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,,,,"TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Overly-Broad Throws Declaration TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:ERR07-J:ENTRY NAME:Do not throw RuntimeException, Exception, or Throwable TAXONOMY NAME - Soft","TYPE - Applicable Platform NOTE - For C++, this weakness only applies to C++98, C++03, and C++11. It relies on a feature known as Dynamic Exception Specification, which was part of early versions of C++ but was deprecated in C++11. It has been removed for","Software Development,Research Concept"
1289,Improper Validation of Unsafe Equivalence in Input,Base,Incomplete,"The product receives an input value that is used as a resource identifier or other type of reference, but it does not validate or incorrectly validates that the input is equivalent to a potentially-unsafe value.","Attackers can sometimes bypass input validation schemes by finding inputs that appear to be safe, but will be dangerous when processed at a lower layer or by a downstream component. For example, a simple XSS protection mechanism might try to validate that",NATURE:ChildOf:CWE ID:20 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:41 VIEW ID:1000 NATURE:PeerOf:CWE ID:178 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Often,,,PHASE - Implementation,SCOPE - Other IMPACT - Varies by Context,,"PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n","REFERENCE - CVE-2021-39155 DESCRIPTION - Chain: A microservice integration and management platform compares the hostname in the HTTP Host header in a case-sensitive way (CWE-178, CWE-1289), allowing bypass of the authorization policy (CWE-863) using a hos",,,,TYPE - Maintenance NOTE - This entry is still under development and will continue to see updates and content improvements.::,"Software Development,Research Concept"
128,Wrap-around Error,Base,Incomplete,"Wrap around errors occur whenever a value is incremented past the maximum value for its type and therefore wraps around to a very small, negative, or undefined value.",,NATURE:ChildOf:CWE ID:682 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:119 VIEW ID:1000 NATURE:PeerOf:CWE ID:190 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Often LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Often,"Due to how addition is performed by computers, if a primitive is incremented past the maximum value possible for its storage space, the system will not recognize this, and therefore increment each bit as if it still had extra space. Because of how negativ",,PHASE - Implementation,"SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart IMPACT - DoS -  Resource Consumption (CPU) IMPACT - DoS -  Resource Consumption (Memory) IMPACT - DoS -  Instability NOTE - This weakness will generally lead to undefined behavior and therefore ",,PHASE - DESCRIPTION - Requirements specification  The choice could be made to use a language that is not susceptible to these issues.  PHASE - Architecture and Design DESCRIPTION - Provide clear upper and lower bounds on the scale of any protocols designe,,,,"TAXONOMY NAME - CLASP:ENTRY NAME:Wrap-around error TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:MEM07-C:ENTRY NAME:Ensure that the arguments to calloc(), when multiplied, can be represented as a size_t TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP","TYPE - Relationship NOTE - The relationship between overflow and wrap-around needs to be examined more closely, since several entries (including CWE-190) are closely related.::","Software Development,Research Concept"
554,ASP.NET Misconfiguration: Not Using Input Validation Framework,Variant,Draft,The ASP.NET application does not use an input validation framework.,,NATURE:ChildOf:CWE ID:1173 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,LANGUAGE NAME:ASP.NET LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,"SCOPE - Integrity IMPACT - Unexpected State NOTE - Unchecked input leads to cross-site scripting, process control, and SQL injection vulnerabilities, among others.",,PHASE - Architecture and Design DESCRIPTION - Use the ASP.NET validation framework to check all program input before it is processed by the application. Example uses of the validation framework include checking to ensure that  Phone number fields contain ,,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,Research Concept
1262,Improper Access Control for Register Interface,Base,Stable,"The product uses memory-mapped I/O registers that act as an interface to hardware functionality from software, but there is improper access control to those registers.",Software commonly accesses peripherals in a System-on-Chip (SoC) or other device through a memory-mapped register interface. Malicious software could tamper with any security-critical hardware data that is accessible directly or indirectly through the reg,NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design: NOTE - This weakness may be exploited if the register interface design does not adequately protect hardware assets from software. PHASE - Implementation: NOTE - Mis-implementation of access control policies may inadvertent,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Memory IMPACT - Read Application Data IMPACT - Modify Memory IMPACT - Modify Application Data IMPACT - Gain Privileges or Assume Identity IMPACT - Bypass Protection Mechanism IMPACT - Unexpected Stat,METHOD - Manual Analysis DESCRIPTION - This is applicable in the Architecture phase before implementation started. Make sure access policy is specified for the entire memory map. Manual analysis may not ensure the implementation is correct. EFFECTIVENESS ,PHASE - Architecture and Design DESCRIPTION - Design proper policies for hardware register access from software.  PHASE - Implementation DESCRIPTION - Ensure that access control policies for register access are implemented in accordance with the specified,"REFERENCE - CVE-2014-2915 DESCRIPTION - virtualization product does not restrict access to debug and other processor registers in the hardware, allowing a crash of the host or guest OS LINK - https://www.cve.org/CVERecord?id=CVE-2014-2915  REFERENCE - CVE",,,,,"Hardware Development,Research Concept"
312,Cleartext Storage of Sensitive Information,Base,Draft,The product stores sensitive information in cleartext within a resource that might be accessible to another control sphere.,"Because the information is stored in cleartext (i.e., unencrypted), attackers could potentially read it. Even if the information is encoded in a way that is not human-readable, certain techniques could determine which encoding is being used, then decode t",NATURE:ChildOf:CWE ID:311 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:311 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:922 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Cloud Computing TECHNOLOGY PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Undetermined TECHNOLOGY CLASS:Mobile TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.,SCOPE - Confidentiality IMPACT - Read Application Data NOTE - An attacker with access to the system could read sensitive information stored in cleartext.,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation System Configuration Operation DESCRIPTION - When storing data in the cloud (e.g., S3 buckets, Azure blobs, Google Cloud Storage, etc.), use the provider's controls to encrypt the data at rest. [REF-1297] [REF-1299] [REF-1301]",REFERENCE - CVE-2022-30275 DESCRIPTION - Remote Terminal Unit (RTU) uses a driver that relies on a password stored in plaintext. LINK - https://www.cve.org/CVERecord?id=CVE-2022-30275  REFERENCE - CVE-2009-2272 DESCRIPTION - password and username stored i,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Plaintext Storage of Sensitive Information TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-2:ENTRY NAME:Req CR 4.1 a) TAXONOMY NAME - ISA/IEC 62,"TYPE - Terminology NOTE - Different people use cleartext and plaintext to mean the same thing: the lack of encryption. However, within cryptography, these have more precise meanings. Plaintext is the information just before it is fed into a cryptographic ","Software Development,Research Concept"
321,Use of Hard-coded Cryptographic Key,Variant,Draft,The use of a hard-coded cryptographic key significantly increases the possibility that encrypted data may be recovered.,,NATURE:ChildOf:CWE ID:798 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:798 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:798 VIEW ID:1340 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,"SCOPE - Access Control IMPACT - Bypass Protection Mechanism IMPACT - Gain Privileges or Assume Identity NOTE - If hard-coded cryptographic keys are used, it is almost certain that malicious users will gain access through the account in question.","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design DESCRIPTION - Prevention schemes mirror that of hard-coded password storage.,REFERENCE - CVE-2022-29960 DESCRIPTION - Engineering Workstation uses hard-coded cryptographic keys that could allow for unathorized filesystem access and privilege escalation LINK - https://www.cve.org/CVERecord?id=CVE-2022-29960  REFERENCE - CVE-2022-30,,,TAXONOMY NAME - CLASP:ENTRY NAME:Use of hard-coded cryptographic key TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A8:ENTRY NAME:Insecure Cryptographic Storage:MAPPING FIT:CWE More Specific TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A9:ENTRY NAME:Insecure,TYPE - Other NOTE - The main difference between the use of hard-coded passwords and the use of hard-coded cryptographic keys is the false sense of security that the former conveys. Many people believe that simply hashing a hard-coded password before stora,Research Concept
40,Path Traversal: 'UNCsharename' (Windows UNC Share),Variant,Draft,The product accepts input that identifies a Windows UNC share ('UNCsharename') that potentially redirects access to an unintended location or arbitrary file.,,NATURE:ChildOf:CWE ID:36 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,"PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n",REFERENCE - CVE-2001-0687 DESCRIPTION - FTP server allows a remote attacker to retrieve privileged web server system information by specifying arbitrary paths in the UNC format (computernamesharename). LINK - https://www.cve.org/CVERecord?id=CVE-2001-0687,,,TAXONOMY NAME - PLOVER:ENTRY NAME:'UNCsharename' (Windows UNC share) TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,,Research Concept
552,Files or Directories Accessible to External Parties,Base,Draft,"The product makes files or directories accessible to unauthorized actors, even though they should not be.","Web servers, FTP servers, and similar servers may store a set of files underneath a root directory that is accessible to the server's users. Applications may store sensitive files underneath this root without also using access control to limit which users",NATURE:ChildOf:CWE ID:668 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:668 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:285 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined TECHNOLOGY CLASS:Cloud Computing TECHNOLOGY PREVALENCE:Often,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase. PHASE - Operation: NOTE - OMISSION: This weakness is caused by missing a security tacti,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation System Configuration Operation DESCRIPTION - When storing data in the cloud (e.g., S3 buckets, Azure blobs, Google Cloud Storage, etc.), use the provider's controls to disable public access.",REFERENCE - CVE-2005-1835 DESCRIPTION - Data file under web root. LINK - https://www.cve.org/CVERecord?id=CVE-2005-1835,,File or Directory,TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A10:ENTRY NAME:Insecure Configuration Management:MAPPING FIT:CWE More Specific TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FIO15-C:ENTRY NAME:Ensure that file operations are performed in a secure directory::,,"Software Development,Research Concept"
568,finalize() Method Without super.finalize(),Variant,Draft,The product contains a finalize() method that does not call super.finalize().,The Java Language Specification states that it is a good practice for a finalize() method to call super.finalize().,NATURE:ChildOf:CWE ID:573 VIEW ID:1000 NATURE:ChildOf:CWE ID:459 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Quality Degradation,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - Call the super.finalize() method.  PHASE - Testing DESCRIPTION - Use static analysis tools to spot such issues in your code.,,,,TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MET12-J:ENTRY NAME:Do not use finalizers TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP28:ENTRY NAME:Unexpected access points::,,Research Concept
457,Use of Uninitialized Variable,Variant,Draft,"The code uses a variable that has not been initialized, leading to unpredictable or unintended results.","In some languages such as C and C++, stack variables are not initialized by default. They generally contain junk data with the contents of stack memory before the function was invoked. An attacker can sometimes control or read these contents. In other lan",NATURE:ChildOf:CWE ID:908 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:665 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:665 VIEW ID:1340 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Sometimes LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Sometimes LANGUAGE NAME:Perl LANGUAGE PREVALENCE:Often LANGUAGE NAME:PHP LANGUAGE PREVALENCE:Often LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,"PHASE - Implementation: NOTE - In C, using an uninitialized char * in some string libraries will return incorrect results, as the libraries expect the null terminator to always be at the end of a string, even if the string is empty.","SCOPE - Availability SCOPE - Integrity SCOPE - Other IMPACT - Other NOTE - Initial variables usually contain junk, which can not be trusted for consistency. This can lead to denial of service conditions, or modify control flow in unexpected ways. In some ","METHOD - Fuzzing DESCRIPTION - Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often c",PHASE - Implementation STRATEGY - Attack Surface Reduction DESCRIPTION - Assign all variables to an initial value.  PHASE - Build and Compilation STRATEGY - Compilation or Build Hardening DESCRIPTION - Most compilers will complain about the use of uniniti,"REFERENCE - CVE-2019-15900 DESCRIPTION - Chain: sscanf() call is used to check if a username and group exists, but the return value of sscanf() call is not checked (CWE-252), causing an uninitialized variable to be checked (CWE-457), returning success to",,,TAXONOMY NAME - CLASP:ENTRY NAME:Uninitialized variable TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Uninitialized Variable TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP1:ENTRY NAME:Glitch in computation TAXONOMY NAME - SEI CERT Perl Coding Sta,,Research Concept
354,Improper Validation of Integrity Check Value,Base,Draft,The product does not validate or incorrectly validates the integrity check values or checksums of a message. This may prevent it from detecting if the data has been modified or corrupted in transmission.,Improper validation of checksums before use results in an unnecessary risk that can easily be mitigated. The protocol specification describes the algorithm used for calculating the checksum. It is then a simple matter of implementing the calculation and v,NATURE:ChildOf:CWE ID:345 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:345 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:754 VIEW ID:1000 NATURE:PeerOf:CWE ID:353 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Integrity SCOPE - Other IMPACT - Modify Application Data IMPACT - Other NOTE - Integrity checks usually use a secret key that helps authenticate the data origin. Skipping integrity checking generally opens up the possibility that new data from an ,,PHASE - Implementation DESCRIPTION - Ensure that the checksums present in messages are properly checked in accordance with the protocol specification before they are parsed and used.,,,,TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 3-3:ENTRY NAME:Req SR 3.1 TAXONOMY NAME - CLASP:ENTRY NAME:Failure to check integrity check value::,,"Software Development,Research Concept"
762,Mismatched Memory Management Routines,Variant,Incomplete,"The product attempts to return a memory resource to the system, but it calls a release function that is not compatible with the function that was originally used to allocate that resource.","This weakness can be generally described as mismatching memory management routines, such as: The memory was allocated on the stack (automatically), but it was deallocated using the memory management routine free() (CWE-590), which is intended for explicit",NATURE:ChildOf:CWE ID:763 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:404 VIEW ID:1340 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Integrity SCOPE - Availability SCOPE - Confidentiality IMPACT - Modify Memory IMPACT - DoS -  Crash, Exit, or Restart IMPACT - Execute Unauthorized Code or Commands",,"PHASE - Implementation DESCRIPTION - Only call matching memory management functions. Do not mix and match routines. For example, when you allocate a buffer with malloc(), dispose of the original pointer with free().  PHASE - Implementation STRATEGY - Libr",,,Memory,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:WIN30-C:ENTRY NAME:Properly pair allocation and deallocation functions:MAPPING FIT:Exact TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP12:ENTRY NAME:Faulty Memory Release::,TYPE - Applicable Platform NOTE - This weakness is possible in any programming language that allows manual management of memory.::,Research Concept
103,Struts: Incomplete validate() Method Definition,Variant,Draft,"The product has a validator form that either does not define a validate() method, or defines a validate() method but does not call super.validate().","If the code does not call super.validate(), the Validation Framework cannot check the contents of the form against a validation form. In other words, the validation framework will be disabled for the given form.",NATURE:ChildOf:CWE ID:573 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:20 VIEW ID:700 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,The Struts Validator uses a form's validate() method to check the contents of the form properties against the constraints specified in the associated validation form. That means the following classes have a validate() method that is part of the validation,,PHASE - Implementation,"SCOPE - Other IMPACT - Other NOTE - Disabling the validation framework for a form exposes the product to numerous types of attacks. Unchecked input is the root cause of vulnerabilities like cross-site scripting, process control, and SQL injection.  SCOPE ","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - Implement the validate() method and call super.validate() within that method.,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Struts: Erroneous validate() Method TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,"TYPE - Relationship NOTE - This could introduce other weaknesses related to missing input validation.  TYPE - Maintenance NOTE - The current description implies a loose composite of two separate weaknesses, so this node might need to be split or converted",Research Concept
160,Improper Neutralization of Leading Special Elements,Variant,Incomplete,"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes leading special elements that could be interpreted in unexpected ways when they are sent to a downstream component.","As data is parsed, improperly handled leading special elements may cause the process to take unexpected actions that result in an attack.",NATURE:ChildOf:CWE ID:138 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,"PHASE - DESCRIPTION - Developers should anticipate that leading special elements will be injected/removed/manipulated in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appr",REFERENCE - CVE-2002-1345 DESCRIPTION - Multiple FTP clients write arbitrary files via absolute paths in server responses LINK - https://www.cve.org/CVERecord?id=CVE-2002-1345,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Leading Special Element TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,Research Concept
112,Missing XML Validation,Base,Draft,The product accepts XML from an untrusted source but does not validate the XML against the proper schema.,"Most successful attacks begin with a violation of the programmer's assumptions. By accepting an XML document without validating it against a DTD or XML schema, the programmer leaves a door open for attackers to provide unexpected, unreasonable, or malicio",NATURE:ChildOf:CWE ID:1286 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:20 VIEW ID:700 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design STRATEGY - Input Validation DESCRIPTION - Always validate XML input against a known XML Schema or DTD. It is not possible for an XML parser to validate all aspects of a document's content because a parser cannot understand ,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Missing XML Validation TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,"Software Development,Research Concept"
1108,Excessive Reliance on Global Variables,Base,Incomplete,"The code is structured in a way that relies too much on using or setting global variables throughout various points in the code, instead of preserving the associated information in a narrower, more local context.","This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",NATURE:ChildOf:CWE ID:1076 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,,,,,,"Software Development,Research Concept"
231,Improper Handling of Extra Values,Variant,Draft,The product does not handle or incorrectly handles when more values are provided than expected.,,NATURE:ChildOf:CWE ID:229 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:120 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - This typically occurs in situations when only one value is expected.,SCOPE - Integrity IMPACT - Unexpected State,,,,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Extra Value Error::,TYPE - Relationship NOTE - This can overlap buffer overflows.::,Research Concept
117,Improper Output Neutralization for Logs,Base,Draft,The product does not neutralize or incorrectly neutralizes output that is written to logs.,This can allow an attacker to forge log entries or inject malicious content into logs. Log forging vulnerabilities occur when: Data enters an application from an untrusted source. The data is written to an application or system log file.,NATURE:ChildOf:CWE ID:116 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:20 VIEW ID:700 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,"Applications typically use log files to store a history of events or transactions for later review, statistics gathering, or debugging. Depending on the nature of the application, the task of reviewing log files may be performed manually on an as-needed b",,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability SCOPE - Non-Repudiation IMPACT - Modify Application Data IMPACT - Hide Activities IMPACT - Execute Unauthorized Code or Commands NOTE - Interpretation of the log files may be hindered or misdi,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n",REFERENCE - CVE-2006-4624 DESCRIPTION - Chain: inject fake log entries with fake timestamps using CRLF injection LINK - https://www.cve.org/CVERecord?id=CVE-2006-4624,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Log Forging TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS03-J:ENTRY NAME:Do not log unsan,,"Software Development,Research Concept"
540,Inclusion of Sensitive Information in Source Code,Base,Incomplete,Source code on a web server or repository often contains sensitive information and should generally not be accessible to users.,"There are situations where it is critical to remove source code from an area or server. For example, obtaining Perl source code on a system allows an attacker to understand the logic of the script and extract extremely useful information such as code bugs",NATURE:ChildOf:CWE ID:538 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Application Data,,PHASE - Architecture and Design System Configuration DESCRIPTION - Recommendations include removing this script from the web server and moving it to a location not accessible from the Internet.,REFERENCE - CVE-2022-25512 DESCRIPTION - Server for Team Awareness Kit (TAK) application includes sensitive tokens in the JavaScript source code. LINK - https://www.cve.org/CVERecord?id=CVE-2022-25512  REFERENCE - CVE-2022-24867 DESCRIPTION - The LDAP pas,,,,,Research Concept
613,Insufficient Session Expiration,Base,Incomplete,"According to WASC, Insufficient Session Expiration is when a web site permits an attacker to reuse old session credentials or session IDs for authorization.",,NATURE:ChildOf:CWE ID:672 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:672 VIEW ID:1003 ORDINAL:Primary NATURE:CanPrecede:CWE ID:287 VIEW ID:1000,,,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Access Control IMPACT - Bypass Protection Mechanism,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - Set sessions/credentials expiration date.,,,,TAXONOMY NAME - WASC:ENTRY ID:47:ENTRY NAME:Insufficient Session Expiration::,"TYPE - Other NOTE - The lack of proper session expiration may improve the likely success of certain attacks. For example, an attacker may intercept a session ID, possibly via a network sniffer or Cross-site Scripting attack. Although short session expirat","Software Development,Research Concept"
1084,Invokable Control Element with Excessive File or Data Access Operations,Base,Incomplete,A function or method contains too many operations that utilize a data manager or file resource.,"This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities. While the interpreta",NATURE:ChildOf:CWE ID:405 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,TAXONOMY NAME - OMG ASCMM:ENTRY ID:ASCMM-MNT-14::,,"Software Development,Research Concept"
798,Use of Hard-coded Credentials,Base,Draft,"The product contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data.","Hard-coded credentials typically create a significant hole that allows an attacker to bypass the authentication that has been configured by the product administrator. This hole might be difficult for the system administrator to detect. Even if detected, i",NATURE:ChildOf:CWE ID:1391 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:287 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:344 VIEW ID:1000 NATURE:ChildOf:CWE ID:671 VIEW ID:1000 NATURE:PeerOf:CWE ID:257 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Mobile TECHNOLOGY PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Often,,,PHASE - Architecture and Design: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,"SCOPE - Access Control IMPACT - Bypass Protection Mechanism NOTE - If hard-coded passwords are used, it is almost certain that malicious users will gain access to the account in question.  SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability SCO","METHOD - Black Box DESCRIPTION - Credential storage in configuration files is findable using black box  METHODs, but the use of hard-coded credentials for an incoming authentication routine typically involves an account that is not visible outside of the ","PHASE - Architecture and Design DESCRIPTION - For outbound authentication  store passwords, keys, and other credentials outside of the code in a strongly-protected, encrypted configuration file or database that is protected from access by all outsiders, i",REFERENCE - CVE-2022-29953 DESCRIPTION - Condition Monitor firmware has a maintenance interface with hard-coded credentials LINK - https://www.cve.org/CVERecord?id=CVE-2022-29953  REFERENCE - CVE-2022-29960 DESCRIPTION - Engineering Workstation uses hard-,,,TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MSC03-J:ENTRY NAME:Never hard code sensitive information TAXONOMY NAME - OMG ASCSM:ENTRY ID:ASCSM-CWE-798 TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 3-3:ENTRY NAME:Req SR 1.5,"TYPE - Maintenance NOTE - The Taxonomy_Mappings to ISA/IEC 62443 were added in CWE 4.10, but they are still under review and might change in future CWE versions. These draft mappings were performed by members of the Mapping CWE to 62443 subgroup of the CW","Software Development,Research Concept"
940,Improper Verification of Source of a Communication Channel,Base,Incomplete,"The product establishes a communication channel to handle an incoming request that has been initiated by an actor, but it does not properly verify that the request is coming from the expected origin.","When an attacker can successfully establish a communication channel from an untrusted origin, the attacker may be able to gain privileges and access unexpected functionality.",NATURE:ChildOf:CWE ID:923 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:346 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Mobile TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Access Control SCOPE - Other IMPACT - Gain Privileges or Assume Identity IMPACT - Varies by Context NOTE - An attacker can access any functionality that is inadvertently accessible to the source.,,"PHASE - Architecture and Design DESCRIPTION - Use a mechanism that can validate the identity of the source, such as a certificate, and validate the integrity of data to ensure that it cannot be modified in transit using an Adversary-in-the-Middle (AITM) a","REFERENCE - CVE-2000-1218 DESCRIPTION - DNS server can accept DNS updates from hosts that it did not query, leading to cache poisoning LINK - https://www.cve.org/CVERecord?id=CVE-2000-1218  REFERENCE - CVE-2005-0877 DESCRIPTION - DNS server can accept DNS",,,,"TYPE - Relationship NOTE - While many access control issues involve authenticating the user, this weakness is more about authenticating the actual source of the communication channel itself; there might not be any user in such cases.::","Software Development,Research Concept"
672,Operation on a Resource after Expiration or Release,Class,Draft,"The product uses, accesses, or otherwise operates on a resource after that resource has been expired, released, or revoked.",,NATURE:ChildOf:CWE ID:666 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Mobile TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Implementation PHASE - Operation,"SCOPE - Integrity SCOPE - Confidentiality IMPACT - Modify Application Data IMPACT - Read Application Data NOTE - If a released resource is subsequently reused or reallocated, then an attempt to use the original resource might allow access to sensitive dat",,,"REFERENCE - CVE-2009-3547 DESCRIPTION - Chain: race condition (CWE-362) might allow resource to be released before operating on it, leading to NULL de REFERENCE (CWE-476) LINK - https://www.cve.org/CVERecord?id=CVE-2009-3547",,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP15:ENTRY NAME:Faulty Resource Use TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FIO46-C:ENTRY NAME:Do not access a closed file:MAPPING FIT:CWE More Abstract TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:,,Research Concept
1232,Improper Lock Behavior After Power State Transition,Base,Incomplete,"Register lock bit protection disables changes to system configuration once the bit is set. Some of the protected registers or lock bits become programmable after power state transitions (e.g., Entry and wake from low power sleep modes) causing the system ",Devices may allow device configuration controls which need to be programmed after device power reset via a trusted firmware or software module (commonly set by BIOS/bootloader) and then locked from any further modification. This action is commonly impleme,NATURE:ChildOf:CWE ID:667 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Access Control IMPACT - Modify Memory LIKELIHOOD - High,,PHASE - Architecture and Design Implementation Testing DESCRIPTION - Security Lock bit protections should be reviewed for behavior across supported power state transitions. Security lock programming flow and lock properties should be tested in pre-silicon,,,,,,"Hardware Development,Research Concept"
1393,Use of Default Password,Base,Incomplete,The product uses default passwords for potentially critical functionality.,"It is common practice for products to be designed to use default passwords for authentication. The rationale is to simplify the manufacturing process or the system administrator's task of installation and deployment into an enterprise. However, if admins ",NATURE:ChildOf:CWE ID:1392 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design,SCOPE - Authentication IMPACT - Gain Privileges or Assume Identity,,"PHASE - Requirements DESCRIPTION - Prohibit use of default, hard-coded, or other values that do not vary for each installation of the product - especially for separate organizations. EFFECTIVENESS High  PHASE - Documentation DESCRIPTION - Ensure that prod",REFERENCE - CVE-2022-30270 DESCRIPTION - Remote Terminal Unit (RTU) uses default credentials for some SSH accounts LINK - https://www.cve.org/CVERecord?id=CVE-2022-30270  REFERENCE - CVE-2022-2336 DESCRIPTION - OPC Unified Architecture (OPC UA) industrial,,,,,Research Concept
125,Out-of-bounds Read,Base,Draft,"The product reads data past the end, or before the beginning, of the intended buffer.","Typically, this can allow attackers to read sensitive information from other memory locations or cause a crash. A crash can occur when the code reads a variable amount of data and assumes that a sentinel exists to stop the read operation, such as a NUL in",NATURE:ChildOf:CWE ID:119 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:119 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:119 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:119 VIEW ID:1340 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Often,,,PHASE - Implementation,"SCOPE - Confidentiality IMPACT - Read Memory  SCOPE - Confidentiality IMPACT - Bypass Protection Mechanism NOTE - By reading out-of-bounds memory, an attacker might be able to get secret values, such as memory addresses, which can be bypass protection mec","METHOD - Fuzzing DESCRIPTION - Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often c","PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n","REFERENCE - CVE-2020-11899 DESCRIPTION - Out-of-bounds read in IP stack used in embedded systems, as exploited in the wild per CISA KEV. LINK - https://www.cve.org/CVERecord?id=CVE-2020-11899  REFERENCE - CVE-2014-0160 DESCRIPTION - Chain: Heartbleed bug",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Out-of-bounds Read TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:ARR30-C:ENTRY NAME:Do not form or use out-of-bounds pointers or array subscripts:MAPPING FIT:Imprecise TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:ARR38-C,,"Software Development,Research Concept"
611,Improper Restriction of XML External Entity Reference,Base,Draft,"The product processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.","XML documents optionally contain a Document Type Definition (DTD), which, among other features, enables the definition of XML entities. It is possible to define an entity by providing a substitution string in the form of a URI. The XML parser can access t",NATURE:ChildOf:CWE ID:610 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:610 VIEW ID:1003 ORDINAL:Primary NATURE:PeerOf:CWE ID:441 VIEW ID:1000,,LANGUAGE NAME:XML LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Web Based TECHNOLOGY PREVALENCE:Undetermined,,TERM - XXE DESCRIPTION - An acronym used for the term XML eXternal Entities::,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,"SCOPE - Confidentiality IMPACT - Read Application Data IMPACT - Read Files or Directories NOTE - If the attacker is able to include a crafted DTD and a default entity resolver is enabled, the attacker may be able to access arbitrary files on the system.  ","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation System Configuration DESCRIPTION - Many XML parsers and validators can be configured to disable external entity expansion.,REFERENCE - CVE-2022-42745 DESCRIPTION - Recruiter software allows reading arbitrary files using XXE LINK - https://www.cve.org/CVERecord?id=CVE-2022-42745  REFERENCE - CVE-2005-1306 DESCRIPTION - A browser control can allow remote attackers to determine,,,TAXONOMY NAME - WASC:ENTRY ID:43:ENTRY NAME:XML External Entities TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,"TYPE - Relationship NOTE - CWE-918 (SSRF) and CWE-611 (XXE) are closely related, because they both involve web-related technologies and can launch outbound requests to unexpected destinations. However, XXE can be performed client-side, or in other context","Software Development,Research Concept"
1119,Excessive Use of Unconditional Branching,Base,Incomplete,The code uses too many unconditional branches (such as goto).,"This issue makes it more difficult to understand and/or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",NATURE:ChildOf:CWE ID:1120 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,,,"Software Development,Research Concept"
168,Improper Handling of Inconsistent Special Elements,Base,Draft,The product does not properly handle input in which an inconsistency exists between two or more special characters or reserved words.,"An example of this problem would be if paired characters appear in the wrong order, or if the special characters are not properly nested.",NATURE:ChildOf:CWE ID:159 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:228 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Availability SCOPE - Access Control SCOPE - Non-Repudiation IMPACT - DoS -  Crash, Exit, or Restart IMPACT - Bypass Protection Mechanism IMPACT - Hide Activities",,"PHASE - DESCRIPTION - Developers should anticipate that inconsistent special elements will be injected/manipulated in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appropr",,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Inconsistent Special Elements::,,"Software Development,Research Concept"
626,Null Byte Interaction Error (Poison Null Byte),Variant,Draft,The product does not properly handle null bytes or NUL characters when passing data between different representations or components.,"A null byte (NUL character) can have different meanings across representations or languages. For example, it is a string terminator in standard C libraries, but Perl and PHP strings do not treat it as a terminator. When two representations are crossed - s",NATURE:ChildOf:CWE ID:147 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:436 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE NAME:PHP LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Perl LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:ASP.NET LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,PHASE - Implementation DESCRIPTION - Remove null bytes from all incoming strings.,"REFERENCE - CVE-2005-4155 DESCRIPTION - NUL byte bypasses PHP regular expression check LINK - https://www.cve.org/CVERecord?id=CVE-2005-4155  REFERENCE - CVE-2005-3153 DESCRIPTION - inserting SQL after a NUL byte bypasses allowlist regexp, enabling SQL in",,,,"TYPE - Terminology NOTE - Current usage of poison null byte is typically related to this C/Perl/PHP interaction error, but the original term in 1998 was applied to an off-by-one buffer overflow involving a null byte.  TYPE - Research Gap NOTE - There are ",Research Concept
408,Incorrect Behavior Order: Early Amplification,Base,Draft,The product allows an entity to perform a legitimate but expensive operation before authentication or authorization has taken place.,,NATURE:ChildOf:CWE ID:405 VIEW ID:1000 NATURE:ChildOf:CWE ID:696 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,"SCOPE - Availability IMPACT - DoS -  Amplification IMPACT - DoS -  Crash, Exit, or Restart IMPACT - DoS -  Resource Consumption (CPU) IMPACT - DoS -  Resource Consumption (Memory) NOTE - System resources, CPU and memory, can be quickly consumed. This can ",,,REFERENCE - CVE-2004-2458 DESCRIPTION - Tool creates directories before authenticating user. LINK - https://www.cve.org/CVERecord?id=CVE-2004-2458,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Early Amplification::,TYPE - Relationship NOTE - Overlaps authentication errors.::,"Software Development,Research Concept"
493,Critical Public Variable Without Final Modifier,Variant,Draft,"The product has a critical public variable that is not final, which allows the variable to be modified to contain unexpected values.","If a field is non-final and public, it can be changed once the value is set by any function that has access to the class which contains the field. This could lead to a vulnerability if other parts of the program make assumptions about the contents of that",NATURE:ChildOf:CWE ID:668 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,"Mobile code, such as a Java Applet, is code that is transmitted across a network and executed on a remote machine. Because mobile code developers have little if any control of the environment in which their code will execute, special security concerns bec",,PHASE - Implementation,SCOPE - Integrity IMPACT - Modify Application Data NOTE - The object could potentially be tampered with.  SCOPE - Confidentiality IMPACT - Read Application Data NOTE - The object could potentially allow the object to be read.,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation DESCRIPTION - Declare all public fields as final when possible, especially if it is used to maintain internal state of an Applet or of classes used by an Applet. If a field must be public, then perform all appropriate sanity checks ",,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Mobile Code: Non-Final Public Field TAXONOMY NAME - CLASP:ENTRY NAME:Failure to provide confidentiality for stored data TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:OBJ10-,,Research Concept
915,Improperly Controlled Modification of Dynamically-Determined Object Attributes,Base,Incomplete,"The product receives input from an upstream component that specifies multiple attributes, properties, or fields that are to be initialized or updated in an object, but it does not properly control which attributes can be modified.","If the object contains attributes that were only intended for internal use, then their unexpected modification could lead to a vulnerability. This weakness is sometimes known by the language-specific mechanisms that make it possible, such as mass assignme",NATURE:ChildOf:CWE ID:913 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:502 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE NAME:Ruby LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:ASP.NET LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:PHP LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Python LANGUAGE PREVALENCE:Undetermined LANGUAGE CLASS:Not Language-Specific LANGUA,,TERM - Mass Assignment DESCRIPTION - Mass assignment is the name of a feature in Ruby on Rails that allows simultaneous modification of multiple object attributes. TERM - AutoBinding DESCRIPTION - The Autobinding term is used in frameworks such as Spring,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Integrity IMPACT - Modify Application Data NOTE - An attacker could modify sensitive data or program variables.  SCOPE - Integrity IMPACT - Execute Unauthorized Code or Commands  SCOPE - Other -  SCOPE - Integrity IMPACT - Varies by Context IMPACT,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation DESCRIPTION - If available, use features of the language or framework that allow specification of allowlists of attributes or fields that are allowed to be modified. If possible, prefer allowlists over denylists. For applications wr",REFERENCE - CVE-2012-2054 DESCRIPTION - Mass assignment allows modification of arbitrary attributes using modified URL. LINK - https://www.cve.org/CVERecord?id=CVE-2012-2054  REFERENCE - CVE-2012-2055 DESCRIPTION - Source version control product allows mo,,,,"TYPE - Maintenance NOTE - The relationships between CWE-502 and CWE-915 need further exploration. CWE-915 is more narrowly scoped to object modification, and is not necessarily used for deserialization.::","Software Development,Research Concept"
499,Serializable Class Containing Sensitive Data,Variant,Draft,"The code contains a class with sensitive data, but the class does not explicitly deny serialization. The data can be accessed by serializing the class through another class.","Serializable classes are effectively open classes since data cannot be hidden in them. Classes that do not explicitly deny serialization can be serialized by any other class, which can then in turn use the data stored inside it.",NATURE:ChildOf:CWE ID:668 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:200 VIEW ID:1000,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Confidentiality IMPACT - Read Application Data NOTE - an attacker can write out the class to a byte stream, then extract the important data from it.","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation DESCRIPTION - In Java, explicitly define final writeObject() to prevent serialization. This is the recommended solution. Define the writeObject() function to throw an exception explicitly denying serialization.  PHASE - Implementati",,,,"TAXONOMY NAME - CLASP:ENTRY NAME:Information leak through serialization TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SER03-J:ENTRY NAME:Do not serialize unencrypted, sensitive data TAXONOMY NAME - The CERT Oracle Secure",,Research Concept
789,Memory Allocation with Excessive Size Value,Variant,Draft,"The product allocates memory based on an untrusted, large size value, but it does not ensure that the size is within expected limits, allowing arbitrary amounts of memory to be allocated.",,NATURE:ChildOf:CWE ID:770 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:476 VIEW ID:1000,: ORDINALITY:Primary: ORDINALITY:Resultant::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,"TERM - Stack Exhaustion DESCRIPTION - When a weakness allocates excessive memory on the stack, it is often described as stack exhaustion, which is a technical impact of the weakness. This technical impact is often encountered as a consequence of CWE-789 a",PHASE - Implementation,"SCOPE - Availability IMPACT - DoS -  Resource Consumption (Memory) NOTE - Not controlling memory allocation can result in a request for too much system memory, possibly leading to a crash of the application due to out-of-memory conditions, or the consumpt","METHOD - Fuzzing DESCRIPTION - Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often c","PHASE - Implementation Architecture and Design DESCRIPTION - Perform adequate input validation against any value that influences the amount of memory that is allocated. Define an appropriate strategy for handling requests that exceed the limit, and consid","REFERENCE - CVE-2022-21668 DESCRIPTION - Chain: Python library does not limit the resources used to process images that specify a very large number of bands (CWE-1284), leading to excessive memory consumption (CWE-789) or an integer overflow (CWE-190). LI",,,TAXONOMY NAME - WASC:ENTRY ID:35:ENTRY NAME:SOAP Array Abuse TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:MEM35-C:ENTRY NAME:Allocate sufficient memory for an object:MAPPING FIT:Imprecise TAXONOMY NAME - SEI CERT Perl Coding Standard:ENTRY ID:IDS32-PL:EN,TYPE - Relationship NOTE - This weakness can be closely associated with integer overflows (CWE-190). Integer overflow attacks would concentrate on providing an extremely large number that triggers an overflow that causes less memory to be allocated than e,Research Concept
749,Exposed Dangerous Method or Function,Base,Incomplete,"The product provides an Applications Programming Interface (API) or similar interface for interaction with external actors, but the interface includes a dangerous method or function that is not properly restricted.","This weakness can lead to a wide variety of resultant weaknesses, depending on the behavior of the exposed method. It can apply to any number of technologies and approaches, such as ActiveX controls, Java functions, IOCTLs, and so on. The exposure can occ",NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability SCOPE - Access Control SCOPE - Other IMPACT - Gain Privileges or Assume Identity IMPACT - Read Application Data IMPACT - Modify Application Data IMPACT - Execute Unauthorized Code or Commands ,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Architecture and Design DESCRIPTION - If you must expose a method, make sure to perform input validation on all arguments, limit access to authorized parties, and protect against all possible vulnerabilities.  PHASE - Architecture and Design Imple",REFERENCE - CVE-2007-6382 DESCRIPTION - arbitrary Java code execution via exposed method LINK - https://www.cve.org/CVERecord?id=CVE-2007-6382  REFERENCE - CVE-2007-1112 DESCRIPTION - security tool ActiveX control allows download or upload of files LINK -,,,,"TYPE - Research Gap NOTE - Under-reported and under-studied. This weakness could appear in any technology, language, or framework that allows the programmer to provide a functional interface to external parties, but it is not heavily reported. In 2007, CV","Software Development,Research Concept"
478,Missing Default Case in Multiple Condition Expression,Base,Draft,"The code does not have a default case in an expression with multiple conditions, such as a switch statement.","If a multiple-condition expression (such as a switch in C) omits the default case but does not consider or handle all possible values that could occur, then this might lead to complex logical errors and resultant weaknesses. Because of this, further decis",NATURE:ChildOf:CWE ID:1023 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C# LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Python LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Integrity IMPACT - Varies by Context IMPACT - Alter Execution Logic NOTE - Depending on the logical circumstances involved, any consequences may result -  e.g., issues of confidentiality, authentication, authorization, availability, integrity, acc","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation DESCRIPTION - Ensure that there are no cases unaccounted for when adjusting program flow or values based on the value of a given variable. In the case of switch style statements, the very simple act of creating a default case can, i",,,,TAXONOMY NAME - CLASP:ENTRY NAME:Failure to account for default case in switch TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP4:ENTRY NAME:Unchecked Status Condition::,,"Software Development,Research Concept"
1313,Hardware Allows Activation of Test or Debug Logic at Runtime,Base,Draft,"During runtime, the hardware allows for test or debug logic (feature) to be activated, which allows for changing the state of the hardware. This feature can alter the intended behavior of the system and allow for alteration and leakage of sensitive data b","An adversary can take advantage of test or debug logic that is made accessible through the hardware during normal operation to modify the intended behavior of the system. For example, an accessible Test/debug mode may allow read/write access to any system",NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design: NOTE - Such issues could be introduced during hardware architecture and design and identified later during Testing or System Configuration phases. PHASE - Implementation: NOTE - Such issues could be introduced during imple,"SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Modify Memory IMPACT - Read Memory IMPACT - DoS -  Crash, Exit, or Restart IMPACT - DoS -  Instability IMPACT - DoS -  Resource Consumption (CPU) IMPACT - DoS -  Resource Consumption ",,"PHASE - Architecture and Design DESCRIPTION - Insert restrictions on when the hardware's test or debug features can be activated. For example, during normal operating modes, the hardware's privileged modes that allow access to such features cannot be acti",REFERENCE - CVE-2021-33150 DESCRIPTION - Hardware processor allows activation of test or debug logic at runtime. LINK - https://www.cve.org/CVERecord?id=CVE-2021-33150  REFERENCE - CVE-2021-0146 DESCRIPTION - Processor allows the activation of test or deb,,,,,"Hardware Development,Research Concept"
126,Buffer Over-read,Variant,Draft,The product reads from a buffer using buffer access mechanisms such as indexes or pointers that reference memory locations after the targeted buffer.,This typically occurs when the pointer or its index is incremented to a position beyond the bounds of the buffer or when pointer arithmetic results in a position outside of the valid memory location to name a few. This may result in exposure of sensitive ,NATURE:ChildOf:CWE ID:125 VIEW ID:1000 NATURE:ChildOf:CWE ID:788 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Confidentiality IMPACT - Read Memory  SCOPE - Confidentiality IMPACT - Bypass Protection Mechanism NOTE - By reading out-of-bounds memory, an attacker might be able to get secret values, such as memory addresses, which can be bypass protection mec","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,REFERENCE - CVE-2022-1733 DESCRIPTION - Text editor has out-of-bounds read past end of line while indenting C code LINK - https://www.cve.org/CVERecord?id=CVE-2022-1733  REFERENCE - CVE-2014-0160 DESCRIPTION - Chain: Heartbleed bug receives an inconsisten,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Buffer over-read TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP8:ENTRY NAME:Faulty Buffer Access::,TYPE - Relationship NOTE - These problems may be resultant from missing sentinel values (CWE-463) or trusting a user-influenced input length variable.::,Research Concept
836,Use of Password Hash Instead of Password for Authentication,Base,Incomplete,"The product records password hashes in a data store, receives a hash of a password from a client, and compares the supplied hash to the hash obtained from the data store.","Some authentication mechanisms rely on the client to generate the hash for a password, possibly to reduce load on the server or avoid sending the password across the network. However, when the client is used to generate the hash, an attacker can bypass th",NATURE:ChildOf:CWE ID:1390 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:602 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Access Control IMPACT - Bypass Protection Mechanism IMPACT - Gain Privileges or Assume Identity NOTE - An attacker could bypass the authentication routine without knowing the original password.,,,REFERENCE - CVE-2009-1283 DESCRIPTION - Product performs authentication with user-supplied password hashes that can be obtained from a separate SQL injection vulnerability (CVE-2009-1282). LINK - https://www.cve.org/CVERecord?id=CVE-2009-1283  REFERENCE -,,,,,"Software Development,Research Concept"
549,Missing Password Field Masking,Base,Draft,"The product does not mask passwords during entry, increasing the potential for attackers to observe and capture passwords.",,NATURE:ChildOf:CWE ID:522 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation,SCOPE - Access Control IMPACT - Bypass Protection Mechanism,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation Requirements DESCRIPTION - Recommendations include requiring all password fields in your web application be masked to prevent other users from seeing this information.,,,,,,"Software Development,Research Concept"
148,Improper Neutralization of Input Leaders,Variant,Draft,"The product does not properly handle when a leading character or sequence (leader) is missing or malformed, or if multiple leaders are used when only one should be allowed.",,NATURE:ChildOf:CWE ID:138 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,"PHASE - DESCRIPTION - Developers should anticipate that leading characters will be injected/removed/manipulated in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appropriat",,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Input Leader TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,Research Concept
838,Inappropriate Encoding for Output Context,Base,Incomplete,"The product uses or specifies an encoding when generating output to a downstream component, but the specified encoding is not the same as the encoding that is expected by the downstream component.",This weakness can cause the downstream component to use a decoding method that produces different data than what the product intended to send. When the wrong encoding is used - even if closely related - the downstream component could decode the data incor,NATURE:ChildOf:CWE ID:116 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:116 VIEW ID:1003 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,#VALUE!,"SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability IMPACT - Modify Application Data IMPACT - Execute Unauthorized Code or Commands NOTE - An attacker could modify the structure of the message or data being sent to the downstream component, pos","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation STRATEGY - Output Encoding DESCRIPTION - Use context-aware encoding. That is, understand which encoding is being used by the downstream component, and ensure that this encoding is used. If an encoding can be specified, do so, instea","REFERENCE - CVE-2009-2814 DESCRIPTION - Server does not properly handle requests that do not contain UTF-8 data; browser assumes UTF-8, allowing XSS. LINK - https://www.cve.org/CVERecord?id=CVE-2009-2814",,,TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS13-J:ENTRY NAME:Use compatible encodings on both sides of file or network IO::,,"Software Development,Research Concept"
1105,Insufficient Encapsulation of Machine-Dependent Functionality,Base,Incomplete,"The product or code uses machine-dependent functionality, but it does not sufficiently encapsulate or isolate this functionality from the rest of the code.","This issue makes it more difficult to port or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",NATURE:ChildOf:CWE ID:758 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:1061 VIEW ID:1000,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,,,"Software Development,Research Concept"
1176,Inefficient CPU Computation,Class,Incomplete,"The product performs CPU computations using algorithms that are not as efficient as they could be for the needs of the developer, i.e., the computations can be optimized further.","This issue can make the product perform more slowly, possibly in ways that are noticeable to the users. If an attacker can influence the amount of computation that must be performed, e.g. by triggering worst-case complexity, then this performance problem ",NATURE:ChildOf:CWE ID:405 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect: ORDINALITY:Primary::,,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Availability IMPACT - DoS -  Resource Consumption (CPU)  SCOPE - Other IMPACT - Reduce Performance,,,"REFERENCE - CVE-2022-37734 DESCRIPTION - Chain: lexer in Java-based GraphQL server does not enforce maximum of tokens early enough (CWE-696), allowing excessive CPU consumption (CWE-1176) LINK - https://www.cve.org/CVERecord?id=CVE-2022-37734",,,,,Research Concept
174,Double Decoding of the Same Data,Variant,Draft,"The product decodes the same input twice, which can limit the effectiveness of any protection mechanism that occurs in between the decoding operations.",,NATURE:ChildOf:CWE ID:172 VIEW ID:1000 NATURE:ChildOf:CWE ID:675 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Access Control SCOPE - Confidentiality SCOPE - Availability SCOPE - Integrity SCOPE - Other IMPACT - Bypass Protection Mechanism IMPACT - Execute Unauthorized Code or Commands IMPACT - Varies by Context,,PHASE - Architecture and Design STRATEGY - Input Validation DESCRIPTION - Avoid making decisions based on names of resources (e.g. files) if those resources can have alternate names.  PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume,"REFERENCE - CVE-2004-1315 DESCRIPTION - Forum software improperly URL decodes the highlight parameter when extracting text to highlight, which allows remote attackers to execute arbitrary PHP code by double-encoding the highlight value so that special cha",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Double Encoding::,TYPE - Research Gap NOTE - Probably under-studied.::,Research Concept
129,Improper Validation of Array Index,Variant,Draft,"The product uses untrusted input when calculating or using an array index, but the product does not validate or incorrectly validates the index to ensure the index references a valid position within the array.",,NATURE:ChildOf:CWE ID:1285 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:20 VIEW ID:1003 ORDINAL:Primary NATURE:CanPrecede:CWE ID:119 VIEW ID:1000 NATURE:CanPrecede:CWE ID:823 VIEW ID:1000 NATURE:CanPrecede:CWE ID:789 VIEW ID:1000,": ORDINALITY:Resultant:DESCRIPTION:The most common condition situation leading to an out-of-bounds array index is the use of loop index variables as buffer indexes. If the end condition for the loop is subject to a flaw, the index can grow or shrink unbou",LANGUAGE NAME:C LANGUAGE PREVALENCE:Often LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Often LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,TERM - out-of-bounds array index TERM - index-out-of-range TERM - array index underflow::,PHASE - Implementation,"SCOPE - Integrity SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart NOTE - Use of an index that is outside the bounds of an array will very likely result in the corruption of relevant memory and perhaps instructions, leading to a crash, if the ",METHOD - Automated Static Analysis DESCRIPTION - This weakness can often be detected using automated static analysis tools. Many modern tools use data flow analysis or constraint-based techniques to minimize the number of false positives. Automated static,PHASE - Architecture and Design STRATEGY - Input Validation DESCRIPTION - Use an input validation framework such as Struts or the OWASP ESAPI Validation API. Note that using a framework does not automatically address all input validation problems; be mind,REFERENCE - CVE-2005-0369 DESCRIPTION - large ID in packet used as array index LINK - https://www.cve.org/CVERecord?id=CVE-2005-0369  REFERENCE - CVE-2001-1009 DESCRIPTION - negative array index as argument to POP LIST command LINK - https://www.cve.org/C,,Memory,TAXONOMY NAME - CLASP:ENTRY NAME:Unchecked array indexing TAXONOMY NAME - PLOVER:ENTRY NAME:INDEX - Array index overflow TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:ARR00-C:ENTRY NAME:Understand how arrays work TAXONOMY NAME - CERT C Secure Coding:ENTRY,"TYPE - Relationship NOTE - This weakness can precede uncontrolled memory allocation (CWE-789) in languages that automatically expand an array when an index is used that is larger than the size of the array, such as JavaScript.  TYPE - Theoretical NOTE - A",Research Concept
1221,Incorrect Register Defaults or Module Parameters,Base,Incomplete,Hardware description language code incorrectly defines register defaults or hardware Intellectual Property (IP) parameters to insecure values.,Integrated circuits and hardware IP software programmable controls and settings are commonly stored in register circuits. These register contents have to be initialized at hardware reset to defined default values that are hard coded in the hardware descri,NATURE:ChildOf:CWE ID:1419 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Verilog LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:VHDL LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined,,,"PHASE - Implementation: NOTE - Such issues could be introduced during implementation of hardware design, since IP parameters and defaults are defined in HDL code and identified later during Testing or System Configuration phases.","SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Access Control IMPACT - Varies by Context NOTE - Degradation of system functionality, or loss of access control enforcement can occur.",,"PHASE - Architecture and Design DESCRIPTION - During hardware design, all the system parameters and register defaults must be reviewed to identify security sensitive settings.  PHASE - Implementation DESCRIPTION - The default values of these security sens",,,,,,"Hardware Development,Research Concept"
1067,Excessive Execution of Sequential Searches of Data Resource,Base,Incomplete,The product contains a data query against an SQL table or view that is configured in a way that does not utilize an index and may cause sequential searches to be performed.,"This issue can make the product perform more slowly. If the relevant code is reachable by an attacker, then this performance problem might introduce a vulnerability.",NATURE:ChildOf:CWE ID:1176 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Performance,,,,,,TAXONOMY NAME - OMG ASCPEM:ENTRY ID:ASCPEM-PRF-5::,,"Software Development,Research Concept"
529,Exposure of Access Control List Files to an Unauthorized Control Sphere,Variant,Incomplete,The product stores access control list files in a directory or other container that is accessible to actors outside of the intended control sphere.,Exposure of these access control list files may give the attacker information about the configuration of the site or system. This information may then be used to bypass the intended security policy or identify trusted systems from which an attack can be l,NATURE:ChildOf:CWE ID:552 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Operation: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.,SCOPE - Confidentiality SCOPE - Access Control IMPACT - Read Application Data IMPACT - Bypass Protection Mechanism,,PHASE - System Configuration DESCRIPTION - Protect access control list files.,,,,,,Research Concept
1050,Excessive Platform Resource Consumption within a Loop,Base,Incomplete,"The product has a loop body or loop condition that contains a control element that directly or indirectly consumes platform resources, e.g. messaging, sessions, locks, or file descriptors.","This issue can make the product perform more slowly. If an attacker can influence the number of iterations in the loop, then this performance problem might allow a denial of service by consuming more platform resources than intended.",NATURE:ChildOf:CWE ID:405 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Performance,,,,,,TAXONOMY NAME - OMG ASCPEM:ENTRY ID:ASCPEM-PRF-8::,,"Software Development,Research Concept"
828,Signal Handler with Functionality that is not Asynchronous-Safe,Variant,Incomplete,"The product defines a signal handler that contains code sequences that are not asynchronous-safe, i.e., the functionality is not reentrant, or it can be interrupted.","This can lead to an unexpected system state with a variety of potential consequences depending on context, including denial of service and code execution. Signal handlers are typically intended to interrupt normal functionality of a program, or even other",NATURE:ChildOf:CWE ID:364 VIEW ID:1000 ORDINAL:Primary,,,,,#VALUE!,"SCOPE - Integrity SCOPE - Confidentiality SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart IMPACT - Execute Unauthorized Code or Commands NOTE - The most common consequence will be a corruption of the state of the product, possibly leading to ",,PHASE - Implementation Architecture and Design DESCRIPTION - Eliminate the usage of non-reentrant functionality inside of signal handlers. This includes replacing all non-reentrant library calls with reentrant calls. Note  This will not always be possible,"REFERENCE - CVE-2008-4109 DESCRIPTION - Signal handler uses functions that ultimately call the unsafe syslog/malloc/s*printf, leading to denial of service via multiple login attempts LINK - https://www.cve.org/CVERecord?id=CVE-2008-4109  REFERENCE - CVE-2",,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:SIG31-C:ENTRY NAME:Do not access or modify shared objects in signal handlers::,,Research Concept
8,J2EE Misconfiguration: Entity Bean Declared Remote,Variant,Incomplete,"When an application exposes a remote interface for an entity bean, it might also expose methods that get or set the bean's data. These methods could be leveraged to read sensitive information, or to change data in ways that violate the application's expec",,NATURE:ChildOf:CWE ID:668 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Application Data IMPACT - Modify Application Data,,"PHASE - Implementation DESCRIPTION - Declare Java beans local when possible. When a bean must be remotely accessible, make sure that sensitive information is not exposed, and ensure that the application logic performs appropriate validation of any data th",,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:J2EE Misconfiguration: Unsafe Bean Declaration TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::,"TYPE - Other NOTE - Entity beans that expose a remote interface become part of an application's attack surface. For performance reasons, an application should rarely use remote entity beans, so there is a good chance that a remote entity bean declaration ",Research Concept
927,Use of Implicit Intent for Sensitive Communication,Variant,Incomplete,The Android application uses an implicit intent for transmitting sensitive data to other applications.,"Since an implicit intent does not specify a particular application to receive the data, any application can process the intent by using an Intent Filter for that intent. This can allow untrusted applications to obtain sensitive data. There are two variati",NATURE:ChildOf:CWE ID:285 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:668 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Mobile TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design,"SCOPE - Confidentiality IMPACT - Read Application Data NOTE - Other applications, possibly untrusted, can read the data that is offered through the Intent.  SCOPE - Integrity IMPACT - Varies by Context NOTE - The application may handle responses from untr","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation DESCRIPTION - If the application only requires communication with its own components, then the destination is always known, and an explicit intent could be used.",REFERENCE - CVE-2022-4903 DESCRIPTION - An Android application does not use FLAG_IMMUTABLE when creating a PendingIntent. LINK - https://www.cve.org/CVERecord?id=CVE-2022-4903,,,,,Research Concept
1044,Architecture with Number of Horizontal Layers Outside of Expected Range,Base,Incomplete,The product's architecture contains too many - or too few - horizontal layers.,"This issue makes it more difficult to maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities. While the interpreta",NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,PHASE - Architecture and Design,SCOPE - Other IMPACT - Reduce Maintainability,,,,,,TAXONOMY NAME - OMG ASCMM:ENTRY ID:ASCMM-MNT-9::,,"Software Development,Research Concept"
213,Exposure of Sensitive Information Due to Incompatible Policies,Base,Draft,"The product's intended functionality exposes information to certain actors in accordance with the developer's security policy, but this information is regarded as sensitive according to the intended security policies of other stakeholders such as the prod","When handling information, the developer must consider whether the information is regarded as sensitive by different stakeholders, such as users or administrators. Each stakeholder effectively has its own intended security policy that the product is expec",NATURE:ChildOf:CWE ID:200 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,"PHASE - Policy: NOTE - This can occur when the product's policy does not account for all relevant stakeholders, or when the policies of other stakeholders are not interpreted properly. PHASE - Requirements: NOTE - This can occur when requirements do not e",SCOPE - Confidentiality IMPACT - Read Application Data,,,REFERENCE - CVE-2002-1725 DESCRIPTION - Script calls phpinfo() LINK - https://www.cve.org/CVERecord?id=CVE-2002-1725  REFERENCE - CVE-2004-0033 DESCRIPTION - Script calls phpinfo() LINK - https://www.cve.org/CVERecord?id=CVE-2004-0033  REFERENCE - CVE-200,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Intended information leak::,"TYPE - Maintenance NOTE - This entry is being considered for deprecation. It overlaps many other entries related to information exposures. It might not be essential to preserve this entry, since other key stakeholder policies are covered elsewhere, e.g. p","Software Development,Research Concept"
30,Path Traversal: 'dir..filename',Variant,Draft,"The product uses external input to construct a pathname that should be within a restricted directory, but it does not properly neutralize 'dir..filename' (leading backslash dot dot) sequences that can resolve to a location that is outside of that director","This allows attackers to traverse the file system to access files or directories that are outside of the restricted directory. This is similar to CWE-26, except using instead of /. The 'dir..filename' manipulation is useful for bypassing some path travers",NATURE:ChildOf:CWE ID:23 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Windows OPERATING SYSTEM PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,"PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n",REFERENCE - CVE-2002-1987 DESCRIPTION - Protection mechanism checks for /.. but doesn't account for Windows-specific .. allowing read of arbitrary files. LINK - https://www.cve.org/CVERecord?id=CVE-2002-1987,,,TAXONOMY NAME - PLOVER:ENTRY NAME:7 - 'directory..filename TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,,Research Concept
124,Buffer Underwrite ('Buffer Underflow'),Base,Incomplete,The product writes to a buffer using an index or pointer that references a memory location prior to the beginning of the buffer.,"This typically occurs when a pointer or its index is decremented to a position before the buffer, when pointer arithmetic results in a position before the beginning of the valid memory location, or when a negative index is used.",NATURE:ChildOf:CWE ID:786 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:787 VIEW ID:1000,: ORDINALITY:Primary::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,"TERM - buffer underrun DESCRIPTION - Some prominent vendors and researchers use the term buffer underrun. Buffer underflow is more commonly used, although both terms are also sometimes used to describe a buffer under-read (CWE-127).::",PHASE - Implementation,"SCOPE - Integrity SCOPE - Availability IMPACT - Modify Memory IMPACT - DoS -  Crash, Exit, or Restart NOTE - Out of bounds memory access will very likely result in the corruption of relevant memory, and perhaps instructions, possibly leading to a crash.  ",,PHASE - Requirements DESCRIPTION - Choose a language that is not susceptible to these issues.  PHASE - Implementation DESCRIPTION - All calculated values that are used as index or for pointer arithmetic should be validated to ensure that they are within a,REFERENCE - CVE-2021-24018 DESCRIPTION - buffer underwrite in firmware verification routine allows code execution via a crafted firmware image LINK - https://www.cve.org/CVERecord?id=CVE-2021-24018  REFERENCE - CVE-2002-2227 DESCRIPTION - Unchecked length,,,TAXONOMY NAME - PLOVER:ENTRY NAME:UNDER - Boundary beginning violation ('buffer underflow'?) TAXONOMY NAME - CLASP:ENTRY NAME:Buffer underwrite TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP8:ENTRY NAME:Faulty Buffer Access::,"TYPE - Relationship NOTE - This could be resultant from several errors, including a bad offset or an array index that decrements before the beginning of the buffer (see CWE-129).::","Software Development,Research Concept"
319,Cleartext Transmission of Sensitive Information,Base,Draft,The product transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.,"Many communication channels can be sniffed (monitored) by adversaries during data transmission. For example, in networking, packets can traverse many intermediary nodes from the source to the destination, whether across the internet, an internal network, ",NATURE:ChildOf:CWE ID:311 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:311 VIEW ID:1003 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Cloud Computing TECHNOLOGY PREVALENCE:Undetermined TECHNOLOGY CLASS:Mobile TECHNOLOGY PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Often TECHNO,,,"PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase. PHASE - Architecture and Design: NOTE - For hardware, this may be introduced when design does not plan for an",SCOPE - Integrity SCOPE - Confidentiality IMPACT - Read Application Data IMPACT - Modify Files or Directories NOTE - Anyone can read the information by gaining access to the channel being used for communication.,"METHOD - Black Box DESCRIPTION - Use monitoring tools that examine the software's process as it interacts with the operating system and the network. This technique is useful in cases when source code is unavailable, if the software was not developed by yo","PHASE - Architecture and Design DESCRIPTION - Before transmitting, encrypt the data using reliable, confidentiality-protecting cryptographic protocols.  PHASE - Implementation DESCRIPTION - When using web applications with SSL, use SSL for the entire sess","REFERENCE - CVE-2022-29519 DESCRIPTION - Programmable Logic Controller (PLC) sends sensitive information in plaintext, including passwords and session tokens. LINK - https://www.cve.org/CVERecord?id=CVE-2022-29519  REFERENCE - CVE-2022-30312 DESCRIPTION -",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Plaintext Transmission of Sensitive Information TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:SEC06-J:ENTRY NAME:Do not rely on the default automatic signature verification provided by UR,"TYPE - Maintenance NOTE - The Taxonomy_Mappings to ISA/IEC 62443 were added in CWE 4.10, but they are still under review and might change in future CWE versions. These draft mappings were performed by members of the Mapping CWE to 62443 subgroup of the CW","Hardware Development,Software Development,Research Concept"
1025,Comparison Using Wrong Factors,Base,Incomplete,"The code performs a comparison between two entities, but the comparison examines the wrong factors or characteristics of the entities, which can lead to incorrect results and resultant weaknesses.","This can lead to incorrect results and resultant weaknesses. For example, the code might inadvertently compare references to objects, instead of the relevant contents of those objects, causing two equal objects to be considered unequal.",NATURE:ChildOf:CWE ID:697 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Varies by Context,,PHASE - Testing DESCRIPTION - Thoroughly test the comparison scheme before deploying code into production. Perform positive testing as well as negative testing.,,,,,,"Software Development,Research Concept"
1276,Hardware Child Block Incorrectly Connected to Parent System,Base,Incomplete,Signals between a hardware IP and the parent system design are incorrectly connected causing security risks.,"Individual hardware IP must communicate with the parent system in order for the product to function correctly and as intended. If implemented incorrectly, while not causing any apparent functional issues, may cause security issues. For example, if the IP ",NATURE:ChildOf:CWE ID:284 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Implementation: NOTE - This weakness is introduced when integrating IP into a parent design.,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Varies by Context,,PHASE - Testing DESCRIPTION - System-level verification may be used to ensure that components are correctly connected and that design security requirements are not violated due to interactions between various IP blocks.,,,,,,"Hardware Development,Research Concept"
1279,Cryptographic Operations are run Before Supporting Units are Ready,Base,Incomplete,Performing cryptographic operations without ensuring that the supporting inputs are ready to supply valid data may compromise the cryptographic result.,"Many cryptographic hardware units depend upon other hardware units to supply information to them to produce a securely encrypted result. For example, a cryptographic unit that depends on an external random-number-generator (RNG) unit for entropy must wait",NATURE:ChildOf:CWE ID:691 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:665 VIEW ID:1000,,LANGUAGE NAME:Verilog LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:VHDL LANGUAGE PREVALENCE:Undetermined LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermine,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - The decision to continue using a cryptographic unit even though the input units to it are not producing valid data will compromise the encrypted result.,SCOPE - Access Control SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Accountability SCOPE - Authentication SCOPE - Authorization SCOPE - Non-Repudiation IMPACT - Varies by Context,,PHASE - Architecture and Design DESCRIPTION - Best practices should be used to design cryptographic systems.  PHASE - Implementation DESCRIPTION - Continuously ensuring that cryptographic inputs are supplying valid information is necessary to ensure that ,,,,,,"Hardware Development,Research Concept"
806,Buffer Access Using Size of Source Buffer,Variant,Incomplete,"The product uses the size of a source buffer when reading from or writing to a destination buffer, which may cause it to access memory that is outside of the bounds of the buffer.","When the size of the destination is smaller than the size of the source, a buffer overflow could occur.",NATURE:ChildOf:CWE ID:805 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Resultant: ORDINALITY:Primary::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Sometimes LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Sometimes,,,PHASE - Implementation,"SCOPE - Availability IMPACT - Modify Memory IMPACT - DoS -  Crash, Exit, or Restart IMPACT - DoS -  Resource Consumption (CPU) NOTE - Buffer overflows generally lead to crashes. Other attacks leading to lack of availability are possible, including putting",,"PHASE - Architecture and Design DESCRIPTION - Use an abstraction library to abstract away risky APIs. Examples include the Safe C String Library (SafeStr) by Viega, and the Strsafe.h library from Microsoft. This is not a complete solution, since many buff",,,Memory,,,Research Concept
514,Covert Channel,Class,Incomplete,A covert channel is a path that can be used to transfer information in a way not intended by the system's designers.,Typically the system has not given authorization for the transmission and has no knowledge of its occurrence.,NATURE:ChildOf:CWE ID:1229 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation PHASE - Operation,SCOPE - Confidentiality SCOPE - Access Control IMPACT - Read Application Data IMPACT - Bypass Protection Mechanism,"METHOD - Architecture or Design Review DESCRIPTION - According to SOAR, the following detection techniques may be useful  Cost effective for partial coverage  Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.) EFFECTIVE",,,,,TAXONOMY NAME - Landwehr:ENTRY NAME:Covert Channel::,"TYPE - Theoretical NOTE - A covert channel can be thought of as an emergent resource, meaning that it was not an originally intended resource, however it exists due the application's behaviors.  TYPE - Maintenance NOTE - As of CWE 4.9, members of the CWE ",Research Concept
484,Omitted Break Statement in Switch,Base,Draft,"The product omits a break statement within a switch or similar construct, causing code associated with multiple conditions to execute. This can cause problems when the programmer only intended to execute code associated with one condition.",This can lead to critical code executing in situations where it should not.,NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:670 VIEW ID:1000,: ORDINALITY:Primary: ORDINALITY:Indirect::,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C# LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:PHP LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Alter Execution Logic NOTE - This weakness can cause unintended logic to be executed and other unexpected application behavior.,"METHOD - White Box DESCRIPTION - Omission of a break statement might be intentional, in order to support fallthrough. Automated detection  METHODs might therefore be erroneous. Semantic understanding of expected product behavior is required to interpret w","PHASE - Implementation DESCRIPTION - Omitting a break statement so that one may fall through is often indistinguishable from an error, and therefore should be avoided. If you need to use fall-through capabilities, make sure that you have clearly documente",,,,TAXONOMY NAME - CLASP:ENTRY NAME:Omitted break statement TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP4:ENTRY NAME:Unchecked Status Condition::,,"Software Development,Research Concept"
664,Improper Control of a Resource Through its Lifetime,Pillar,Draft,"The product does not maintain or incorrectly maintains control over a resource throughout its lifetime of creation, use, and release.","Resources often have explicit instructions on how to be created, used and destroyed. When code does not follow these instructions, it can lead to unexpected behaviors and potentially exploitable states. Even without explicit instructions, various principl",#VALUE!,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Other,,PHASE - Testing DESCRIPTION - Use Static analysis tools to check for unreleased resources.,REFERENCE - CVE-2018-1000613 DESCRIPTION - Cryptography API uses unsafe reflection when deserializing a private key LINK - https://www.cve.org/CVERecord?id=CVE-2018-1000613  REFERENCE - CVE-2022-21668 DESCRIPTION - Chain: Python library does not limit the,,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:FIO39-C:ENTRY NAME:Do not alternately input and output from a stream without an intervening flush or positioning call:MAPPING FIT:CWE More Abstract::,"TYPE - Maintenance NOTE - More work is needed on this entry and its children. There are perspective/layering issues; for example, one breakdown is based on lifecycle phase (CWE-404, CWE-665), while other children are independent of lifecycle, such as CWE-",Research Concept
235,Improper Handling of Extra Parameters,Variant,Draft,"The product does not handle or incorrectly handles when the number of parameters, fields, or arguments with the same name exceeds the expected amount.",,NATURE:ChildOf:CWE ID:233 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - This typically occurs in situations when only one element is expected to be specified.,SCOPE - Integrity IMPACT - Unexpected State,,,"REFERENCE - CVE-2003-1014 DESCRIPTION - MIE. multiple gateway/security products allow restriction bypass using multiple MIME fields with the same name, which are interpreted differently by clients. LINK - https://www.cve.org/CVERecord?id=CVE-2003-1014",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Extra Parameter Error::,TYPE - Relationship NOTE - This  TYPE of problem has a big role in multiple interpretation vulnerabilities and various HTTP attacks.::,Research Concept
1385,Missing Origin Validation in WebSockets,Variant,Incomplete,"The product uses a WebSocket, but it does not properly verify that the source of data or communication is valid.","WebSockets provide a bi-directional low latency communication (near real-time) between a client and a server. WebSockets are different than HTTP in that the connections are long-lived, as the channel will remain open until the client or the server is read",NATURE:ChildOf:CWE ID:346 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY NAME:Web Server TECHNOLOGY PREVALENCE:Undetermined,,TERM - Cross-Site WebSocket hijacking (CSWSH) DESCRIPTION - this term is used for attacks that exploit this weakness::,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Non-Repudiation SCOPE - Access Control IMPACT - Varies by Context IMPACT - Gain Privileges or Assume Identity IMPACT - Bypass Protection Mechanism IMPACT - Read Application Data IMPACT,,PHASE - Implementation DESCRIPTION - Enable CORS-like access restrictions by verifying the 'Origin' header during the WebSocket handshake.  PHASE - Implementation DESCRIPTION - Use a randomized CSRF token to verify requests.  PHASE - Implementation DESCRI,"REFERENCE - CVE-2020-25095 DESCRIPTION - web console for SIEM product does not check Origin header, allowing Cross Site WebSocket Hijacking (CSWH) LINK - https://www.cve.org/CVERecord?id=CVE-2020-25095  REFERENCE - CVE-2018-6651 DESCRIPTION - Chain: gamin",,,,,Research Concept
348,Use of Less Trusted Source,Base,Draft,"The product has two different sources of the same data or information, but it uses the source that has less support for verification, is less trusted, or is less resistant to attack.",,NATURE:ChildOf:CWE ID:345 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Access Control IMPACT - Bypass Protection Mechanism IMPACT - Gain Privileges or Assume Identity NOTE - An attacker could utilize the untrusted data source to bypass protection mechanisms and gain access to sensitive data.,,,"REFERENCE - CVE-2001-0860 DESCRIPTION - Product uses IP address provided by a client, instead of obtaining it from the packet headers, allowing easier spoofing. LINK - https://www.cve.org/CVERecord?id=CVE-2001-0860  REFERENCE - CVE-2004-1950 DESCRIPTION -",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Use of Less Trusted Source::,,"Software Development,Research Concept"
1314,Missing Write Protection for Parametric Data Values,Base,Draft,"The device does not write-protect the parametric data values for sensors that scale the sensor value, allowing untrusted software to manipulate the apparent result and potentially damage hardware or cause operational failure.","Various sensors are used by hardware to detect any devices operating outside of the design limits. The threshold limit values are set by hardware fuses or trusted software such as the BIOS. These limits may be related to thermal, power, voltage, current, ",NATURE:ChildOf:CWE ID:862 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:1299 VIEW ID:1194 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY NAME:Sensor,,,PHASE - Architecture and Design: NOTE - The lack of a requirement to protect parametric values may contribute to this weakness. PHASE - Implementation: NOTE - The lack of parametric value protection may be a cause of this weakness.,"SCOPE - Availability IMPACT - Quality Degradation IMPACT - DoS -  Resource Consumption (Other) LIKELIHOOD - High NOTE - Sensor value manipulation, particularly thermal or power, may allow physical damage to occur or disabling of the device by a false faul",,PHASE - Architecture and Design DESCRIPTION - Access controls for sensor blocks should ensure that only trusted software is allowed to change threshold limits and sensor parametric data. EFFECTIVENESS High,"REFERENCE - CVE-2017-8252 DESCRIPTION - Kernel can inject faults in computations during the execution of TrustZone leading to information disclosure in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer Electronics Connectiv",,,,,"Hardware Development,Research Concept"
1004,Sensitive Cookie Without 'HttpOnly' Flag,Variant,Incomplete,"The product uses a cookie to store sensitive information, but the cookie is not marked with the HttpOnly flag.",The HttpOnly flag directs compatible browsers to prevent client-side script from accessing cookies. Including the HttpOnly flag in the Set-Cookie HTTP response header helps mitigate the risk associated with Cross-Site Scripting (XSS) where an attacker's s,NATURE:ChildOf:CWE ID:732 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Web Based TECHNOLOGY PREVALENCE:Undetermined,"An HTTP cookie is a small piece of data attributed to a specific website and stored on the user's computer by the user's web browser. This data can be leveraged for a variety of purposes including saving information entered into form fields, recording use",,PHASE - Implementation,"SCOPE - Confidentiality IMPACT - Read Application Data NOTE - If the HttpOnly flag is not set, then sensitive information stored in the cookie may be exposed to unintended parties.  SCOPE - Integrity IMPACT - Gain Privileges or Assume Identity NOTE - If t","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - Leverage the HttpOnly flag when setting a sensitive cookie in a response. EFFECTIVENESS High,"REFERENCE - CVE-2022-24045 DESCRIPTION - Web application for a room automation system has client-side Javascript that sets a sensitive cookie without the HTTPOnly security attribute, allowing the cookie to be accessed. LINK - https://www.cve.org/CVERecord",,,,,Research Concept
186,Overly Restrictive Regular Expression,Base,Draft,"A regular expression is overly restrictive, which prevents dangerous values from being detected.","This weakness is not about regular expression complexity. Rather, it is about a regular expression that does not match all values that are intended. Consider the use of a regexp to identify acceptable values or to spot unwanted terms. An overly restrictiv",NATURE:ChildOf:CWE ID:185 VIEW ID:1000 ORDINAL:Primary NATURE:CanAlsoBe:CWE ID:184 VIEW ID:1000 NATURE:CanAlsoBe:CWE ID:183 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Access Control IMPACT - Bypass Protection Mechanism,,"PHASE - Implementation DESCRIPTION - Regular expressions can become error prone when defining a complex language even for those experienced in writing grammars. Determine if several smaller regular expressions simplify one large regular expression. Also, ",REFERENCE - CVE-2005-1604 DESCRIPTION - MIE. .php.ns bypasses .php$ regexp but is still parsed as PHP by Apache. (manipulates an equivalence property under Apache) LINK - https://www.cve.org/CVERecord?id=CVE-2005-1604,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Overly Restrictive Regular Expression::,TYPE - Relationship NOTE - Can overlap allowlist/denylist errors (CWE-183/CWE-184)::,"Software Development,Research Concept"
560,Use of umask() with chmod-style Argument,Variant,Draft,The product calls umask() with an incorrect argument that is specified as if it is an argument to chmod().,,NATURE:ChildOf:CWE ID:687 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Access Control IMPACT - Read Files or Directories IMPACT - Modify Files or Directories IMPACT - Bypass Protection Mechanism,,"PHASE - Implementation DESCRIPTION - Use umask() with the correct argument.  PHASE - Testing DESCRIPTION - If you suspect misuse of umask(), you can use grep to spot call instances of umask().",,,,,"TYPE - Other NOTE - Some umask() manual pages begin with the false statement: umask sets the umask to mask & 0777 Although this behavior would better align with the usage of chmod(), where the user provided argument specifies the bits to enable on the spe",Research Concept
594,J2EE Framework: Saving Unserializable Objects to Disk,Variant,Incomplete,When the J2EE container attempts to write unserializable objects to disk there is no guarantee that the process will complete successfully.,"In heavy load conditions, most J2EE application frameworks flush objects to disk to manage memory requirements of incoming requests. For example, session scoped objects, and even application scoped objects, are written to disk when required. While these a",NATURE:ChildOf:CWE ID:1076 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect: ORDINALITY:Primary::,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Integrity IMPACT - Modify Application Data NOTE - Data represented by unserializable objects can be corrupted.  SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart NOTE - Non-serializability of objects can lead to system crash.",,PHASE - Architecture and Design Implementation DESCRIPTION - All objects that become part of session and application scope must implement the java.io.Serializable interface to ensure serializability of containing objects.,,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP1:ENTRY NAME:Glitch in computation::,,Research Concept
431,Missing Handler,Base,Draft,A handler is not available or implemented.,"When an exception is thrown and not caught, the process has given up an opportunity to decide if a given failure or event is worth a change in execution.",NATURE:ChildOf:CWE ID:691 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:433 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Varies by Context,,"PHASE - Implementation DESCRIPTION - Handle all possible situations (e.g. error condition).  PHASE - Implementation DESCRIPTION - If an operation can throw an Exception, implement a handler for that specific exception.","REFERENCE - CVE-2022-25302 DESCRIPTION - SDK for OPC Unified Architecture (OPC UA) is missing a handler for when a cast fails, allowing for a crash LINK - https://www.cve.org/CVERecord?id=CVE-2022-25302",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Missing Handler TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP4:ENTRY NAME:Unchecked Status Condition::,,"Software Development,Research Concept"
416,Use After Free,Variant,Stable,"Referencing memory after it has been freed can cause a program to crash, use unexpected values, or execute code.","The use of previously-freed memory can have any number of adverse consequences, ranging from the corruption of valid data to the execution of arbitrary code, depending on the instantiation and timing of the flaw. The simplest way data corruption may occur",NATURE:ChildOf:CWE ID:825 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:672 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:672 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:672 VIEW ID:1340 ORDINAL:Primary NATURE:CanPrecede:CWE ID:120 VIEW I,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,TERM - Dangling pointer TERM - Use-After-Free::,PHASE - Implementation,"SCOPE - Integrity IMPACT - Modify Memory NOTE - The use of previously freed memory may corrupt valid data, if the memory area in question has been allocated and used properly elsewhere.  SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart NOTE - ","METHOD - Fuzzing DESCRIPTION - Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often c","PHASE - Architecture and Design DESCRIPTION - Choose a language that provides automatic memory management.  PHASE - Implementation DESCRIPTION - When freeing pointers, be sure to set them to NULL once they are freed. However, the utilization of multiple o",REFERENCE - CVE-2022-20141 DESCRIPTION - Chain: an operating system kernel has insufficent resource locking (CWE-413) leading to a use after free (CWE-416). LINK - https://www.cve.org/CVERecord?id=CVE-2022-20141  REFERENCE - CVE-2022-2621 DESCRIPTION - Ch,,Memory,TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 4-1:ENTRY NAME:Req SI-1 TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Use After Free TAXONOMY NAME - CLASP:ENTRY NAME:Using freed memory TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:MEM00-C:ENTRY NAME:Alloca,,Research Concept
620,Unverified Password Change,Base,Draft,"When setting a new password for a user, the product does not require knowledge of the original password, or using another form of authentication.","This could be used by an attacker to change passwords for another user, thus gaining the privileges associated with that user.",NATURE:ChildOf:CWE ID:1390 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary: ORDINALITY:Resultant::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Access Control IMPACT - Bypass Protection Mechanism IMPACT - Gain Privileges or Assume Identity,,"PHASE - Architecture and Design DESCRIPTION - When prompting for a password change, force the user to provide the original password in addition to the new password.  PHASE - Architecture and Design DESCRIPTION - Do not use forgotten password functionality","REFERENCE - CVE-2007-0681 DESCRIPTION - Web app allows remote attackers to change the passwords of arbitrary users without providing the original password, and possibly perform other unauthorized actions. LINK - https://www.cve.org/CVERecord?id=CVE-2007-0",,,TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP31:ENTRY NAME:Missing authentication::,,"Software Development,Research Concept"
780,Use of RSA Algorithm without OAEP,Variant,Incomplete,"The product uses the RSA algorithm but does not incorporate Optimal Asymmetric Encryption Padding (OAEP), which might weaken the encryption.",Padding schemes are often used with cryptographic algorithms to make the plaintext less predictable and complicate attack efforts. The OAEP scheme is often used with RSA to nullify the impact of predictable common text.,NATURE:ChildOf:CWE ID:327 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,"SCOPE - Access Control IMPACT - Bypass Protection Mechanism NOTE - Without OAEP in RSA encryption, it will take less work for an attacker to decrypt the data or to infer patterns from the ciphertext.","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,,,,,"TYPE - Maintenance NOTE - This entry could probably have a new parent related to improper padding, however the role of padding in cryptographic algorithms can vary, such as hiding the length of the plaintext and providing additional random bits for the ci",Research Concept
501,Trust Boundary Violation,Base,Draft,The product mixes trusted and untrusted data in the same data structure or structured message.,"A trust boundary can be thought of as line drawn through a program. On one side of the line, data is untrusted. On the other side of the line, data is assumed to be trustworthy. The purpose of validation logic is to allow data to safely cross the trust bo",NATURE:ChildOf:CWE ID:664 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design,SCOPE - Access Control IMPACT - Bypass Protection Mechanism,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Trust Boundary Violation TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::,,"Software Development,Research Concept"
1261,Improper Handling of Single Event Upsets,Base,Draft,The hardware logic does not effectively handle when single-event upsets (SEUs) occur.,"Technology trends such as CMOS-transistor down-sizing, use of new materials, and system-on-chip architectures continue to increase the sensitivity of systems to soft errors. These errors are random, and their causes might be internal (e.g., interconnect c",NATURE:ChildOf:CWE ID:1384 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:1254 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Te,,,PHASE - Architecture and Design PHASE - Implementation,"SCOPE - Availability SCOPE - Access Control IMPACT - DoS -  Crash, Exit, or Restart IMPACT - DoS -  Instability IMPACT - Gain Privileges or Assume Identity IMPACT - Bypass Protection Mechanism",,"PHASE - Architecture and Design DESCRIPTION - Implement triple-modular redundancy around security-sensitive modules.  PHASE - Architecture and Design DESCRIPTION - SEUs mostly affect SRAMs. For SRAMs storing security-critical data, implement Error-Correct",,,,,,"Hardware Development,Research Concept"
1357,Reliance on Insufficiently Trustworthy Component,Class,Incomplete,"The product is built from multiple separate components, but it uses a component that is not sufficiently trusted to meet expectations for security, reliability, updateability, and maintainability.","Many modern hardware and software products are built by combining multiple smaller components together into one larger entity, often during the design or architecture phase. For example, a hardware component might be built by a separate supplier, or the p",NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined TECHNOLOGY CLASS:ICS/OT TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Requirements: NOTE - Requirements might include criteria for which the only available solutions are provided by insufficiently trusted components. PHASE - Architecture and Design: NOTE - An insufficiently trusted component might be selected becaus,SCOPE - Other IMPACT - Reduce Maintainability,,"PHASE - Requirements Architecture and Design Implementation DESCRIPTION - For each component, ensure that its supply chain is well-controlled with sub-tier suppliers using best practices. For third-party software components such as libraries, ensure that ","REFERENCE - CVE-2020-9054 DESCRIPTION - Chain: network-attached storage (NAS) device has a critical OS command injection (CWE-78) vulnerability that is actively exploited to place IoT devices into a botnet, but some products are end-of-support and cannot",,,TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 2-4:ENTRY NAME:Req SP.03.02 RE(1) TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 2-4:ENTRY NAME:Req SP.03.02 RE(2) TAXONOMY NAME - ISA/IEC 62443:ENTRY ID:Part 3-3:ENTRY NAME:Req SR 1.13 TAXONOMY NAME - ISA/IEC 6244,"TYPE - Maintenance NOTE - As of CWE 4.10, the name and description for this entry has undergone significant change and is still under public discussion, especially by members of the HW SIG.::","Hardware Development,Research Concept"
640,Weak Password Recovery Mechanism for Forgotten Password,Base,Incomplete,"The product contains a mechanism for users to recover or change their passwords without knowing the original password, but the mechanism is weak.","It is common for an application to have a mechanism that provides a means for a user to gain access to their account in the event they forget their password. Very often the password recovery mechanism is weak, which has the effect of making it more likely",NATURE:ChildOf:CWE ID:1390 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:287 VIEW ID:1003 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic. PHASE - Implementation,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - An attacker could gain unauthorized access to the system by retrieving legitimate user's authentication credentials.  SCOPE - Availability IMPACT - DoS -  Resource Consumption (Othe,,PHASE - Architecture and Design DESCRIPTION - Make sure that all input supplied by the user to the password recovery mechanism is thoroughly filtered and validated.  PHASE - Architecture and Design DESCRIPTION - Do not use standard weak security questions,,,,TAXONOMY NAME - WASC:ENTRY ID:49:ENTRY NAME:Insufficient Password Recovery::,"TYPE - Maintenance NOTE - This entry might be reclassified as a category or loose composite, since it lists multiple specific errors that can make the mechanism weak. However, under view 1000, it could be a weakness under protection mechanism failure, alt","Software Development,Research Concept"
107,Struts: Unused Validation Form,Variant,Draft,An unused validation form indicates that validation logic is not up-to-date.,It is easy for developers to forget to update validation logic when they remove or rename action form mappings. One indication that validation logic is not being properly maintained is the presence of an unused validation form.,NATURE:ChildOf:CWE ID:1164 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:20 VIEW ID:700 ORDINAL:Primary,: ORDINALITY:Resultant::,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation PHASE - Operation,SCOPE - Other IMPACT - Quality Degradation,,PHASE - Implementation DESCRIPTION - Remove the unused Validation Form from the validation.xml file.,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Struts: Unused Validation Form::,,Research Concept
446,UI Discrepancy for Security Feature,Class,Incomplete,"The user interface does not correctly enable or configure a security feature, but the interface provides feedback that causes the user to believe that the feature is in a secure state.","When the user interface does not properly reflect what the user asks of it, then it can lead the user into a false sense of security. For example, the user might check a box to enable a security option to enable encrypted communications, but the product d",NATURE:ChildOf:CWE ID:684 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Other IMPACT - Varies by Context,,,REFERENCE - CVE-1999-1446 DESCRIPTION - UI inconsistency; visited URLs list not cleared when Clear History option is selected. LINK - https://www.cve.org/CVERecord?id=CVE-1999-1446,,,TAXONOMY NAME - PLOVER:ENTRY NAME:User interface inconsistency::,TYPE - Maintenance NOTE - This entry is likely a loose composite that could be broken down into the different  TYPEs of errors that cause the user interface to have incorrect interactions with the underlying security feature.::,Research Concept
1118,Insufficient Documentation of Error Handling Techniques,Base,Incomplete,"The documentation does not sufficiently describe the techniques that are used for error handling, exception processing, or similar mechanisms.","Documentation may need to cover error handling techniques at multiple layers, such as module, executable, compilable code unit, or callable.",NATURE:ChildOf:CWE ID:1059 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,#VALUE!,,,,,,,,"Software Development,Research Concept"
88,Improper Neutralization of Argument Delimiters in a Command ('Argument Injection'),Base,Draft,"The product constructs a string for a command to be executed by a separate component in another control sphere, but it does not properly delimit the intended arguments, options, or switches within that command string.","When creating commands using interpolation into a string, developers may assume that only the arguments/options that they specify will be processed. This assumption may be even stronger when the programmer has encoded the command in a way that prevents se",NATURE:ChildOf:CWE ID:77 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:74 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:77 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:77 VIEW ID:1340 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:PHP LANGUAGE PREVALENCE:Often,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Other IMPACT - Execute Unauthorized Code or Commands IMPACT - Alter Execution Logic IMPACT - Read Application Data IMPACT - Modify Application Data NOTE - An attacker could include arg,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation STRATEGY - Parameterization DESCRIPTION - Where possible, avoid building a single string that contains the command and its arguments. Some languages or frameworks have functions that support specifying independent arguments, e.g. as","REFERENCE - CVE-2022-36069 DESCRIPTION - Python-based dependency management tool avoids OS command injection when generating Git commands but allows injection of optional arguments with input beginning with a dash, potentially allowing for code execution.",,System Process,TAXONOMY NAME - PLOVER:ENTRY NAME:Argument Injection or Modification TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:ENV03-C:ENTRY NAME:Sanitize the environment when invoking external programs TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:ENV33-C:ENTRY NAME,"TYPE - Relationship NOTE - At one layer of abstraction, this can overlap other weaknesses that have whitespace problems, e.g. injection of javascript into attributes of HTML tags.::","Software Development,Research Concept"
163,Improper Neutralization of Multiple Trailing Special Elements,Variant,Incomplete,"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes multiple trailing special elements that could be interpreted in unexpected ways when they are sent to a downstream component.","As data is parsed, improperly handled multiple trailing special elements may cause the process to take unexpected actions that result in an attack.",NATURE:ChildOf:CWE ID:162 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,"PHASE - DESCRIPTION - Developers should anticipate that multiple trailing special elements will be injected/removed/manipulated in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensure only valid, expecte",REFERENCE - CVE-2002-1078 DESCRIPTION - Directory listings in web server using multiple trailing slash LINK - https://www.cve.org/CVERecord?id=CVE-2002-1078  REFERENCE - CVE-2004-0281 DESCRIPTION - Multiple trailing dot allows directory listing LINK - htt,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Multiple Trailing Special Elements TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,Research Concept
1058,Invokable Control Element in Multi-Thread Context with non-Final Static Storable or Member Element,Base,Incomplete,The code contains a function or method that operates in a multi-threaded environment but owns an unsafe non-final static storable or member data element.,"This issue can prevent the product from running reliably. If the relevant code is reachable by an attacker, then this reliability problem might introduce a vulnerability.",NATURE:ChildOf:CWE ID:662 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:662 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:662 VIEW ID:1340 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Reliability,,,,,,TAXONOMY NAME - OMG ASCRM:ENTRY ID:ASCRM-RLB-11::,,"Software Development,Research Concept"
472,External Control of Assumed-Immutable Web Parameter,Base,Draft,"The web application does not sufficiently verify inputs that are assumed to be immutable but are actually externally controllable, such as hidden form fields.","If a web product does not properly protect assumed-immutable values from modification in hidden form fields, parameters, cookies, or URLs, this can lead to modification of critical data. Web applications often mistakenly make the assumption that data pass",NATURE:ChildOf:CWE ID:642 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:471 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,TERM - Assumed-Immutable Parameter Tampering::,PHASE - Implementation: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase.,"SCOPE - Integrity IMPACT - Modify Application Data NOTE - Without appropriate protection mechanisms, the client can easily tamper with cookies and similar web data. Reliance on the cookies without detailed validation can lead to problems such as SQL injec","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Assume all input is malicious. Use an accept known good input validation strategy, i.e., use a list of acceptable inputs that strictly conform to specifications. Reject any input that does n",REFERENCE - CVE-2002-0108 DESCRIPTION - Forum product allows spoofed messages of other users via hidden form fields for name and e-mail address. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0108  REFERENCE - CVE-2000-0253 DESCRIPTION - Shopping cart a,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Web Parameter Tampering TAXONOMY NAME - OWASP Top Ten 2007:ENTRY ID:A4:ENTRY NAME:Insecure Direct Object Reference:MAPPING FIT:CWE More Specific TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A1:ENTRY NAME:Unvalidated Input:,"TYPE - Relationship NOTE - This is a primary weakness for many other weaknesses and functional consequences, including XSS, SQL injection, path disclosure, and file inclusion.  TYPE - Theoretical NOTE - This is a technology-specific MAID problem.::","Software Development,Research Concept"
233,Improper Handling of Parameters,Base,Incomplete,"The product does not properly handle when the expected number of parameters, fields, or arguments is not provided in input, or if those parameters are undefined.",,NATURE:ChildOf:CWE ID:228 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,"METHOD - Fuzzing DESCRIPTION - Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often c",,,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Parameter Problems::,,"Software Development,Research Concept"
525,Use of Web Browser Cache Containing Sensitive Information,Variant,Incomplete,The web application does not use an appropriate caching policy that specifies the extent to which each web page and associated form fields should be cached.,,NATURE:ChildOf:CWE ID:524 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation,"SCOPE - Confidentiality IMPACT - Read Application Data NOTE - Browsers often store information in a client-side cache, which can leave behind sensitive information for other users to find and exploit, such as passwords or credit card numbers. The location",,PHASE - Architecture and Design DESCRIPTION - Protect information stored in cache.  PHASE - Architecture and Design Implementation DESCRIPTION - Use a restrictive caching policy for forms and web pages that potentially contain sensitive information.  PHAS,,,,TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A2:ENTRY NAME:Broken Access Control:MAPPING FIT:CWE More Specific TAXONOMY NAME - OWASP Top Ten 2004:ENTRY ID:A3:ENTRY NAME:Broken Authentication and Session Management:MAPPING FIT:CWE More Specific::,,Research Concept
704,Incorrect Type Conversion or Cast,Class,Incomplete,"The product does not correctly convert an object, resource, or structure from one type to a different type.",,NATURE:ChildOf:CWE ID:664 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Often LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Often LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Other,"METHOD - Fuzzing DESCRIPTION - Fuzz testing (fuzzing) is a powerful technique for generating large numbers of diverse inputs - either randomly or algorithmically - and dynamically invoking the code with those inputs. Even with random inputs, it is often c",,"REFERENCE - CVE-2021-43537 DESCRIPTION - Chain: in a web browser, an unsigned 64-bit integer is forcibly cast to a 32-bit integer (CWE-681) and potentially leading to an integer overflow (CWE-190). If an integer overflow occurs, this can cause heap memory",,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:EXP05-C:ENTRY NAME:Do not cast away a const qualification TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:EXP39-C:ENTRY NAME:Do not access a variable through a pointer of an incompatible type:MAPPING FIT:CWE Mor,,Research Concept
821,Incorrect Synchronization,Base,Incomplete,"The product utilizes a shared resource in a concurrent manner, but it does not correctly synchronize access to the resource.","If access to a shared resource is not correctly synchronized, then the resource may not be in a state that is expected by the product. This might lead to unexpected or insecure behaviors, especially if an attacker can influence the shared resource.",NATURE:ChildOf:CWE ID:662 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:662 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:662 VIEW ID:1340 ORDINAL:Primary,,,,,#VALUE!,SCOPE - Integrity SCOPE - Confidentiality SCOPE - Other IMPACT - Modify Application Data IMPACT - Read Application Data IMPACT - Alter Execution Logic,,,,,,,"TYPE - Maintenance NOTE - Deeper research is necessary for synchronization and related mechanisms, including locks, mutexes, semaphores, and other mechanisms. Multiple entries are dependent on this research, which includes relationships to concurrency, ra","Software Development,Research Concept"
561,Dead Code,Base,Draft,"The product contains dead code, which can never be executed.",Dead code is code that can never be executed in a running program. The surrounding code makes it impossible for a section of code to ever be executed.,NATURE:ChildOf:CWE ID:1164 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Quality Degradation NOTE - Dead code that results from code that can never be executed is an indication of problems with the source code that needs to be fixed and is an indication of poor quality.  SCOPE - Other IMPACT - Reduce Mai,"METHOD - Architecture or Design Review DESCRIPTION - According to SOAR, the following detection techniques may be useful  Highly cost effective  Inspection (IEEE 1028 standard) (can apply to requirements, design, source code, etc.) Formal  METHODs / Corre",PHASE - Implementation DESCRIPTION - Remove dead code before deploying the application.  PHASE - Testing DESCRIPTION - Use a static analysis tool to spot dead code.,"REFERENCE - CVE-2014-1266 DESCRIPTION - chain: incorrect goto in Apple SSL product bypasses certificate validation, allowing Adversary-in-the-Middle (AITM) attack (Apple goto fail bug). CWE-705 (Incorrect Control Flow Scoping) -> CWE-561 (Dead Code) -> CW",,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:MSC07-C:ENTRY NAME:Detect and remove dead code TAXONOMY NAME - SEI CERT Perl Coding Standard:ENTRY ID:MSC00-PL:ENTRY NAME:Detect and remove dead code:MAPPING FIT:Exact TAXONOMY NAME - Software Fault Patterns:E,,"Software Development,Research Concept"
607,Public Static Final Field References Mutable Object,Variant,Draft,"A public or protected static final field references a mutable object, which allows the object to be changed by malicious code, or accidentally from another package.",,NATURE:ChildOf:CWE ID:471 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Modify Application Data,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - Protect mutable objects by making them private. Restrict access to the getter and setter as well.,,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::,,Research Concept
396,Declaration of Catch for Generic Exception,Base,Draft,Catching overly broad exceptions promotes complex error handling code that is more likely to contain security vulnerabilities.,"Multiple catch blocks can get ugly and repetitive, but condensing catch blocks by catching a high-level class like Exception can obscure exceptions that deserve special treatment or that should not be caught at this point in the program. Catching an overl",NATURE:ChildOf:CWE ID:705 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:755 VIEW ID:1000 NATURE:ChildOf:CWE ID:221 VIEW ID:1000,,LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C# LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Python LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Non-Repudiation SCOPE - Other IMPACT - Hide Activities IMPACT - Alter Execution Logic,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Overly-Broad Catch Block TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP5:ENTRY NAME:Ambiguous Exception Type TAXONOMY NAME - OMG ASCSM:ENTRY ID:ASCSM-CWE-396 TAXONOMY NAME - OMG ASCRM:ENTRY ID:ASCRM-C,,"Software Development,Research Concept"
143,Improper Neutralization of Record Delimiters,Variant,Draft,"The product receives input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could be interpreted as record delimiters when they are sent to a downstream component.","As data is parsed, an injected/absent/malformed delimiter may cause the process to take unexpected actions.",NATURE:ChildOf:CWE ID:140 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,"PHASE - DESCRIPTION - Developers should anticipate that record delimiters will be injected/removed/manipulated in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appropriate",REFERENCE - CVE-2004-1982 DESCRIPTION - Carriage returns in subject field allow adding new records to data file. LINK - https://www.cve.org/CVERecord?id=CVE-2004-1982  REFERENCE - CVE-2001-0527 DESCRIPTION - Attacker inserts carriage returns and | field s,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Record Delimiter TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,,Research Concept
820,Missing Synchronization,Base,Incomplete,The product utilizes a shared resource in a concurrent manner but does not attempt to synchronize access to the resource.,"If access to a shared resource is not synchronized, then the resource may not be in a state that is expected by the product. This might lead to unexpected or insecure behaviors, especially if an attacker can influence the shared resource.",NATURE:ChildOf:CWE ID:662 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:662 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:662 VIEW ID:1340 ORDINAL:Primary,,,,,#VALUE!,SCOPE - Integrity SCOPE - Confidentiality SCOPE - Other IMPACT - Modify Application Data IMPACT - Read Application Data IMPACT - Alter Execution Logic,,,,,,TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:LCK05-J:ENTRY NAME:Synchronize access to static fields that can be modified by untrusted code::,"TYPE - Maintenance NOTE - Deeper research is necessary for synchronization and related mechanisms, including locks, mutexes, semaphores, and other mechanisms. Multiple entries are dependent on this research, which includes relationships to concurrency, ra","Software Development,Research Concept"
668,Exposure of Resource to Wrong Sphere,Class,Draft,"The product exposes a resource to the wrong control sphere, providing unintended actors with inappropriate access to the resource.","Resources such as files and directories may be inadvertently exposed through mechanisms such as insecure permissions, or when a program accidentally operates on the wrong object. For example, a program may intend that private files can only be provided to",NATURE:ChildOf:CWE ID:664 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. PHASE - Operation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Other IMPACT - Read Application Data IMPACT - Modify Application Data IMPACT - Other,,,,,,,"TYPE - Theoretical NOTE - A control sphere is a set of resources and behaviors that are accessible to a single actor, or a group of actors. A product's security model will typically define multiple spheres, possibly implicitly. For example, a server might",Research Concept
332,Insufficient Entropy in PRNG,Variant,Draft,"The lack of entropy available for, or used by, a Pseudo-Random Number Generator (PRNG) can be a stability and security threat.",,NATURE:ChildOf:CWE ID:331 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,"SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart NOTE - If a pseudo-random number generator is using a limited entropy source which runs out (if the generator fails closed), the program may pause or crash.  SCOPE - Access Control SCOPE - Other",,PHASE - Architecture and Design Requirements STRATEGY - Libraries or Frameworks DESCRIPTION - Use products or modules that conform to FIPS 140-2 [REF-267] to avoid obvious entropy problems. Consult FIPS 140-2 Annex C (Approved Random Number Generators).  ,"REFERENCE - [REF-1374] DESCRIPTION - Chain: JavaScript-based cryptocurrency library can fall back to the insecure Math.random() function instead of reporting a failure (CWE-392), thus reducing the entropy (CWE-332) and leading to generation of non-unique",,,TAXONOMY NAME - CLASP:ENTRY NAME:Insufficient entropy in PRNG TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MSC02-J:ENTRY NAME:Generate strong random numbers::,"TYPE - Maintenance NOTE - As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, randomness is used heavily. However, within cryptography, entropy is distinct, typically i",Research Concept
1114,Inappropriate Whitespace Style,Base,Incomplete,The source code contains whitespace that is inconsistent across the code or does not follow expected standards for the product.,"This issue makes it more difficult to understand and maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",NATURE:ChildOf:CWE ID:1078 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,#VALUE!,,,,,,,,"Software Development,Research Concept"
419,Unprotected Primary Channel,Base,Draft,"The product uses a primary channel for administration or restricted functionality, but it does not properly protect the channel.",,NATURE:ChildOf:CWE ID:923 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase. PHASE - Implementation,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity IMPACT - Bypass Protection Mechanism,,PHASE - Architecture and Design DESCRIPTION - Do not expose administrative functionnality on the user UI.  PHASE - Architecture and Design DESCRIPTION - Protect the administrative/restricted functionality with a strong authentication mechanism.,,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Unprotected Primary Channel::,,"Software Development,Research Concept"
565,Reliance on Cookies without Validation and Integrity Checking,Base,Incomplete,"The product relies on the existence or values of cookies when performing security-critical operations, but it does not properly ensure that the setting is valid for the associated user.","Attackers can easily modify cookies, within the browser or by implementing the client-side code outside of the browser. Reliance on cookies without detailed validation and integrity checking can allow attackers to bypass authentication, conduct injection ",NATURE:ChildOf:CWE ID:642 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:669 VIEW ID:1003 ORDINAL:Primary NATURE:ChildOf:CWE ID:602 VIEW ID:1000,,,,,PHASE - Architecture and Design: NOTE - OMISSION: This weakness is caused by missing a security tactic during the architecture and design phase. PHASE - Implementation,SCOPE - Access Control IMPACT - Gain Privileges or Assume Identity NOTE - It is dangerous to use cookies to set a user's privileges. The cookie can be manipulated to escalate an attacker's privileges to an administrative level.,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design DESCRIPTION - Avoid using cookie data for a security-related decision.  PHASE - Implementation DESCRIPTION - Perform thorough input validation (i.e.  server side validation) on the cookie data if you're going to use it for ,REFERENCE - CVE-2008-5784 DESCRIPTION - e-dating application allows admin privileges by setting the admin cookie to 1. LINK - https://www.cve.org/CVERecord?id=CVE-2008-5784,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP29:ENTRY NAME:Faulty endpoint authentication::,"TYPE - Relationship NOTE - This problem can be primary to many  TYPEs of weaknesses in web applications. A developer may perform proper validation against URL parameters while assuming that attackers cannot modify cookies. As a result, the program might s","Software Development,Research Concept"
205,Observable Behavioral Discrepancy,Base,Incomplete,"The product's behaviors indicate important differences that may be observed by unauthorized actors in a way that reveals (1) its internal state or decision process, or (2) differences from other products with equivalent functionality.","Ideally, a product should provide as little information about its internal operations as possible. Otherwise, attackers could use knowledge of these internal operations to simplify or optimize their attack. In some cases, behavioral discrepancies can be u",NATURE:ChildOf:CWE ID:203 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:514 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Confidentiality SCOPE - Access Control IMPACT - Read Application Data IMPACT - Bypass Protection Mechanism,,,REFERENCE - CVE-2002-0208 DESCRIPTION - Product modifies TCP/IP stack and ICMP error messages in unusual ways that show the product is in use. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0208  REFERENCE - CVE-2004-2252 DESCRIPTION - Behavioral infole,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Behavioral Discrepancy Infoleak TAXONOMY NAME - WASC:ENTRY ID:45:ENTRY NAME:Fingerprinting::,,"Software Development,Research Concept"
537,Java Runtime Error Message Containing Sensitive Information,Variant,Incomplete,"In many cases, an attacker can leverage the conditions that cause unhandled exception errors in order to gain unauthorized access to the system.",,NATURE:ChildOf:CWE ID:211 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Application Data,,PHASE - Implementation DESCRIPTION - Do not expose sensitive error information to the user.,,,,,,Research Concept
697,Incorrect Comparison,Pillar,Incomplete,"The product compares two entities in a security-relevant context, but the comparison is incorrect, which may lead to resultant weaknesses.","This Pillar covers several possibilities: the comparison checks one factor incorrectly; the comparison should consider multiple factors, but it does not check at least one of those factors at all; the comparison checks the wrong factor.",#VALUE!,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Varies by Context,,,"REFERENCE - CVE-2021-3116 DESCRIPTION - Chain: Python-based HTTP Proxy server uses the wrong boolean operators (CWE-480) causing an incorrect comparison (CWE-697) that identifies an authN failure if all three conditions are met instead of only one, allowi",,,,"TYPE - Research Gap NOTE - Weaknesses related to this Pillar appear to be under-studied, especially with respect to classification schemes. Input from academic and other communities could help identify and resolve gaps or organizational difficulties withi",Research Concept
159,Improper Handling of Invalid Use of Special Elements,Class,Draft,"The product does not properly filter, remove, quote, or otherwise manage the invalid use of special elements in user-controlled input, which could cause adverse effect on its behavior and integrity.",,NATURE:ChildOf:CWE ID:138 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Integrity IMPACT - Unexpected State,,"PHASE - DESCRIPTION - Developers should anticipate that special elements will be injected/removed/manipulated in the input vectors of their software system. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appr",REFERENCE - CVE-2002-1362 DESCRIPTION - Crash via message type without separator character LINK - https://www.cve.org/CVERecord?id=CVE-2002-1362  REFERENCE - CVE-2000-0116 DESCRIPTION - Extra < in front of SCRIPT tag bypasses XSS prevention. LINK - https:,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Common Special Element Manipulations TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP24:ENTRY NAME:Tainted input to command::,"TYPE - Maintenance NOTE - The list of children for this entry is far from complete. However, the  TYPEs of special elements might be too precise for use within CWE.  TYPE - Terminology NOTE - Precise terminology for the underlying weaknesses does not exis",Research Concept
433,Unparsed Raw Web Content Delivery,Variant,Incomplete,The product stores raw content or supporting code under the web document root with an extension that is not specifically handled by the server.,"If code is stored in a file with an extension such as .inc or .pl, and the web server does not have a handler for that extension, then the server will likely send the contents of the file directly to the requester without the pre-processing that was expec",NATURE:ChildOf:CWE ID:219 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation PHASE - Operation,SCOPE - Confidentiality IMPACT - Read Application Data,,PHASE - Architecture and Design DESCRIPTION - Perform a type check before interpreting files.  PHASE - Architecture and Design DESCRIPTION - Do not store sensitive information in files which may be misinterpreted.,REFERENCE - CVE-2002-1886 DESCRIPTION - .inc file stored under web document root and returned unparsed by the server LINK - https://www.cve.org/CVERecord?id=CVE-2002-1886  REFERENCE - CVE-2002-2065 DESCRIPTION - .inc file stored under web document root an,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Unparsed Raw Web Content Delivery::,"TYPE - Relationship NOTE - This overlaps direct requests (CWE-425), alternate path (CWE-424), permissions (CWE-275), and sensitive file under web root (CWE-219).::",Research Concept
53,Path Equivalence: 'multipleinternalbackslash',Variant,Incomplete,"The product accepts path input in the form of multiple internal backslash ('multipletrailingslash') without appropriate validation, which can lead to ambiguous path resolution and allow an attacker to traverse the file system to unintended locations or ac",,NATURE:ChildOf:CWE ID:41 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:165 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity IMPACT - Read Files or Directories IMPACT - Modify Files or Directories,,PHASE - Implementation STRATEGY - Input Validation DESCRIPTION - Inputs should be decoded and canonicalized to the application's current internal representation before being validated (CWE-180). Make sure that the application does not decode the same inpu,,,,TAXONOMY NAME - PLOVER:ENTRY NAME:multipleinternalbackslash TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP16:ENTRY NAME:Path Traversal::,,Research Concept
764,Multiple Locks of a Critical Resource,Base,Incomplete,"The product locks a critical resource more times than intended, leading to an unexpected state in the system.","When a product is operating in a concurrent environment and repeatedly locks a critical resource, the consequences will vary based on the type of lock, the lock's implementation, and the resource being protected. In some situations such as with semaphores",NATURE:ChildOf:CWE ID:667 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:675 VIEW ID:1000 NATURE:ChildOf:CWE ID:662 VIEW ID:1305 ORDINAL:Primary NATURE:ChildOf:CWE ID:662 VIEW ID:1340 ORDINAL:Primary,,,,,PHASE - Implementation,"SCOPE - Availability SCOPE - Integrity IMPACT - DoS -  Resource Consumption (CPU) IMPACT - DoS -  Crash, Exit, or Restart IMPACT - Unexpected State",,"PHASE - Implementation DESCRIPTION - When locking and unlocking a resource, try to be sure that all control paths through the code in which the resource is locked one or more times correspond to exactly as many unlocks. If the software acquires a lock and",,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP21:ENTRY NAME:Multiple locks/unlocks::,"TYPE - Maintenance NOTE - An alternate way to think about this weakness is as an imbalance between the number of locks / unlocks in the control flow. Over the course of execution, if each lock call is not followed by a subsequent call to unlock in a reaso","Software Development,Research Concept"
1164,Irrelevant Code,Class,Incomplete,"The product contains code that is not essential for execution, i.e. makes no state changes and has no side effects that alter data or control flow, such that removal of the code would have no impact to functionality or correctness.","Irrelevant code could include dead code, initialization that is not used, empty blocks, code that could be entirely removed due to optimization, etc.",NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Reliability  SCOPE - Other IMPACT - Reduce Performance,,,"REFERENCE - CVE-2014-1266 DESCRIPTION - chain: incorrect goto in Apple SSL product bypasses certificate validation, allowing Adversary-in-the-Middle (AITM) attack (Apple goto fail bug). CWE-705 (Incorrect Control Flow Scoping) -> CWE-561 (Dead Code) -> CW",,,,,Research Concept
118,Incorrect Access of Indexable Resource ('Range Error'),Class,Incomplete,"The product does not restrict or incorrectly restricts operations within the boundaries of a resource that is accessed using an index or pointer, such as memory or files.",,NATURE:ChildOf:CWE ID:664 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Other IMPACT - Varies by Context,,,,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP8:ENTRY NAME:Faulty Buffer Access::,,Research Concept
1273,Device Unlock Credential Sharing,Base,Incomplete,The credentials necessary for unlocking a device are shared across multiple parties and may expose sensitive information.,"Unlocking a device often means activating certain unadvertised debug and manufacturer-specific capabilities of a device using sensitive credentials. Unlocking a device might be necessary for the purpose of troubleshooting device problems. For example, sup",NATURE:ChildOf:CWE ID:200 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:VHDL LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Verilog LANGUAGE PREVALENCE:Undetermined LANGUAGE CLASS:Compiled LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTUR,,,PHASE - Integration PHASE - Manufacturing,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability SCOPE - Access Control SCOPE - Accountability SCOPE - Authentication SCOPE - Authorization SCOPE - Non-Repudiation IMPACT - Modify Memory IMPACT - Read Memory IMPACT - Modify Files or Director,,"PHASE - Integration DESCRIPTION - Ensure the unlock credentials are shared with the minimum number of parties and with utmost secrecy. To limit the risk associated with compromised credentials, where possible, the credentials should be part-specific.  PHA",,,,,TYPE - Maintenance NOTE - This entry is still under development and will continue to see updates and content improvements.::,"Hardware Development,Research Concept"
335,Incorrect Usage of Seeds in Pseudo-Random Number Generator (PRNG),Base,Draft,The product uses a Pseudo-Random Number Generator (PRNG) but does not correctly manage seeds.,"PRNGs are deterministic and, while their output appears random, they cannot actually create entropy. They rely on cryptographically secure and unique seeds for entropy so proper seeding is critical to the secure operation of the PRNG. Management of seeds ",NATURE:ChildOf:CWE ID:330 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:330 VIEW ID:1003 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,"SCOPE - Access Control SCOPE - Other IMPACT - Bypass Protection Mechanism IMPACT - Other NOTE - If a PRNG is used incorrectly, such as using the same seed for each initialization or using a predictable seed, then an attacker may be able to easily guess th",,,REFERENCE - CVE-2020-7010 DESCRIPTION - Cloud application on Kubernetes generates passwords using a weak random number generator based on deployment time. LINK - https://www.cve.org/CVERecord?id=CVE-2020-7010  REFERENCE - CVE-2019-11495 DESCRIPTION - serv,,,TAXONOMY NAME - PLOVER:ENTRY NAME:PRNG Seed Error::,"TYPE - Maintenance NOTE - As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, randomness is used heavily. However, within cryptography, entropy is distinct, typically i","Software Development,Research Concept"
1239,Improper Zeroization of Hardware Register,Variant,Draft,The hardware product does not properly clear sensitive information from built-in registers when the user of the hardware block changes.,"Hardware logic operates on data stored in registers local to the hardware block. Most hardware IPs, including cryptographic accelerators, rely on registers to buffer I/O, store intermediate values, and interface with software. The result of this is that s",NATURE:ChildOf:CWE ID:226 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:226 VIEW ID:1194 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined OPERATING SYSTEM CLASS:Not OS-Specific OPERATING SYSTEM PREVALENCE:Undetermined ARCHITECTURE CLASS:Not Architecture-Specific:ARCHITECTURE PREVALENCE:Undetermined TECHNOLOGY CLASS:System,,,PHASE - Architecture and Design: NOTE - Lack of hardware mechanisms to zeroize or clear registers in the design or specification. PHASE - Implementation: NOTE - Mechanisms to zeroize and clear registers are in the design but implemented incorrectly. PHASE,SCOPE - Confidentiality IMPACT - Varies by Context NOTE - The consequences will depend on the information disclosed due to the vulnerability.,,"PHASE - Architecture and Design DESCRIPTION - Every register potentially containing sensitive information must have a policy specifying how and when information is cleared, in addition to clarifying if it is the responsibility of the hardware logic or IP ",,,,,,"Hardware Development,Research Concept"
827,Improper Control of Document Type Definition,Variant,Incomplete,"The product does not restrict a reference to a Document Type Definition (DTD) to the intended control sphere. This might allow attackers to reference arbitrary DTDs, possibly causing the product to expose files, consume excessive system resources, or exec","As DTDs are processed, they might try to read or include files on the machine performing the parsing. If an attacker is able to control the DTD, then the attacker might be able to specify sensitive resources or requests or provide malicious content. For e",NATURE:ChildOf:CWE ID:706 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:829 VIEW ID:1000 NATURE:CanPrecede:CWE ID:776 VIEW ID:1000,,LANGUAGE NAME:XML LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,"SCOPE - Confidentiality IMPACT - Read Files or Directories NOTE - If the attacker is able to include a crafted DTD and a default entity resolver is enabled, the attacker may be able to access arbitrary files on the system.  SCOPE - Availability IMPACT - D",,,"REFERENCE - CVE-2010-2076 DESCRIPTION - Product does not properly reject DTDs in SOAP messages, which allows remote attackers to read arbitrary files, send HTTP requests to intranet servers, or cause a denial of service. LINK - https://www.cve.org/CVEReco",,,,,Research Concept
339,Small Seed Space in PRNG,Variant,Draft,"A Pseudo-Random Number Generator (PRNG) uses a relatively small seed space, which makes it more susceptible to brute force attacks.","PRNGs are entirely deterministic once seeded, so it should be extremely difficult to guess the seed. If an attacker can collect the outputs of a PRNG and then brute force the seed by trying every possibility to see which seed matches the observed output, ",NATURE:ChildOf:CWE ID:335 VIEW ID:1000 ORDINAL:Primary NATURE:PeerOf:CWE ID:341 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,SCOPE - Other IMPACT - Varies by Context,,PHASE - Architecture and Design DESCRIPTION - Use well vetted pseudo-random number generating algorithms with adequate length seeds. Pseudo-random number generators can produce predictable numbers if the generator is known and the seed can be guessed. A 2,"REFERENCE - CVE-2019-10908 DESCRIPTION - product generates passwords via org.apache.commons.lang.RandomStringUtils, which uses java.util.Random internally. This PRNG has only a 48-bit seed. LINK - https://www.cve.org/CVERecord?id=CVE-2019-10908",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Small Seed Space in PRNG::,"TYPE - Maintenance NOTE - This entry may have a chaining relationship with predictable from observable state (CWE-341).  TYPE - Maintenance NOTE - As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the de",Research Concept
637,Unnecessary Complexity in Protection Mechanism (Not Using 'Economy of Mechanism'),Class,Draft,"The product uses a more complex mechanism than necessary, which could lead to resultant weaknesses when the mechanism is not correctly understood, modeled, configured, implemented, or used.","Security mechanisms should be as simple as possible. Complex security mechanisms may engender partial implementations and compatibility problems, with resulting mismatches in assumptions and implemented security. A corollary of this principle is that data",NATURE:ChildOf:CWE ID:657 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Primary::,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,TERM - Unnecessary Complexity::,PHASE - Architecture and Design PHASE - Implementation PHASE - Operation,SCOPE - Other IMPACT - Other,,"PHASE - Architecture and Design DESCRIPTION - Avoid complex security mechanisms when simpler ones would meet requirements. Avoid complex data models, and unnecessarily complex operations. Adopt architectures that provide guarantees, simplify understanding",REFERENCE - CVE-2007-6067 DESCRIPTION - Support for complex regular expressions leads to a resultant algorithmic complexity weakness (CWE-407). LINK - https://www.cve.org/CVERecord?id=CVE-2007-6067  REFERENCE - CVE-2007-1552 DESCRIPTION - Either a filenam,,,,,Research Concept
341,Predictable from Observable State,Base,Draft,"A number or object is predictable based on observations that the attacker can make about the state of the system or network, such as time, process ID, etc.",,NATURE:ChildOf:CWE ID:340 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,"SCOPE - Other IMPACT - Varies by Context NOTE - This weakness could be exploited by an attacker in a number ways depending on the context. If a predictable number is used to generate IDs or keys that are used within protection mechanisms, then an attacker",,PHASE - Implementation DESCRIPTION - Increase the entropy used to seed a PRNG.  PHASE - Architecture and Design Requirements STRATEGY - Libraries or Frameworks DESCRIPTION - Use products or modules that conform to FIPS 140-2 [REF-267] to avoid obvious ent,"REFERENCE - CVE-2002-0389 DESCRIPTION - Mail server stores private mail messages with predictable filenames in a world-executable directory, which allows local users to read private mailing list archives. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0",,,TAXONOMY NAME - PLOVER:ENTRY NAME:Predictable from Observable State::,"TYPE - Maintenance NOTE - As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, randomness is used heavily. However, within cryptography, entropy is distinct, typically i","Software Development,Research Concept"
166,Improper Handling of Missing Special Element,Base,Draft,"The product receives input from an upstream component, but it does not handle or incorrectly handles when an expected special element is missing.",,NATURE:ChildOf:CWE ID:159 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:228 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,"SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart",,"PHASE - DESCRIPTION - Developers should anticipate that special elements will be removed in the input vectors of their product. Use an appropriate combination of denylists and allowlists to ensure only valid, expected and appropriate input is processed by",REFERENCE - CVE-2002-1362 DESCRIPTION - Crash via message type without separator character LINK - https://www.cve.org/CVERecord?id=CVE-2002-1362  REFERENCE - CVE-2002-0729 DESCRIPTION - Missing special character (separator) causes crash LINK - https://www,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Missing Special Element::,,"Software Development,Research Concept"
395,Use of NullPointerException Catch to Detect NULL Pointer Dereference,Base,Draft,Catching NullPointerException should not be used as an alternative to programmatic checks to prevent dereferencing a null pointer.,Programmers typically catch NullPointerException under three circumstances: The program contains a null pointer dereference. Catching the resulting exception was easier than fixing the underlying problem. The program explicitly throws a NullPointerExcepti,NATURE:ChildOf:CWE ID:705 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:755 VIEW ID:1000,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Availability IMPACT - DoS -  Resource Consumption (CPU),"METHOD - Automated Static Analysis - Binary or Bytecode DESCRIPTION - According to SOAR, the following detection techniques may be useful  Cost effective for partial coverage  Bytecode Weakness Analysis - including disassembler + source code weakness anal",PHASE - Architecture and Design Implementation DESCRIPTION - Do not extensively rely on catching exceptions (especially for validating user input) to handle errors. Handling exceptions can decrease the performance of an application.,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Catching NullPointerException TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:ERR08-J:ENTRY NAME:Do not catch NullPointerException or any of its ancestors::,,"Software Development,Research Concept"
1093,Excessively Complex Data Representation,Class,Incomplete,The product uses an unnecessarily complex internal representation for its data structures or interrelationships between those structures.,"This issue makes it more difficult to understand or maintain the product, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulnerabilities.",NATURE:ChildOf:CWE ID:710 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,SCOPE - Other IMPACT - Reduce Maintainability  SCOPE - Other IMPACT - Reduce Performance,,,,,,,,Research Concept
566,Authorization Bypass Through User-Controlled SQL Primary Key,Variant,Incomplete,"The product uses a database table that includes records that should not be accessible to an actor, but it executes a SQL statement with a primary key that can be controlled by that actor.","When a user can set a primary key to any value, then the user can modify the key to point to unauthorized records. Database access control errors occur when: Data enters a program from an untrusted source. The data is used to specify the value of a primar",NATURE:ChildOf:CWE ID:639 VIEW ID:1000 ORDINAL:Primary,,TECHNOLOGY NAME:Database Server TECHNOLOGY PREVALENCE:Often,,,PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic. PHASE - Implementation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Access Control IMPACT - Read Application Data IMPACT - Modify Application Data IMPACT - Bypass Protection Mechanism,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e","PHASE - Implementation DESCRIPTION - Assume all input is malicious. Use a standard input validation mechanism to validate all input for length, type, syntax, and business rules before accepting the data. Use an accept known good validation strategy.  PHAS",,,,TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP25:ENTRY NAME:Tainted input to variable::,,Research Concept
349,Acceptance of Extraneous Untrusted Data With Trusted Data,Base,Draft,"The product, when processing trusted data, accepts any untrusted data that is also included with the trusted data, treating the untrusted data as if it were trusted.",,NATURE:ChildOf:CWE ID:345 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Access Control SCOPE - Integrity IMPACT - Bypass Protection Mechanism IMPACT - Modify Application Data NOTE - An attacker could package untrusted data with trusted data to bypass protection mechanisms to gain access to and possibly modify sensitiv,,,REFERENCE - CVE-2002-0018 DESCRIPTION - Does not verify that trusted entity is authoritative for all entities in its response. LINK - https://www.cve.org/CVERecord?id=CVE-2002-0018  REFERENCE - CVE-2006-5462 DESCRIPTION - use of extra data in a signature,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Untrusted Data Appended with Trusted Data TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:ENV01-J:ENTRY NAME:Place all security-sensitive code in a single JAR and sign and seal it::,,"Software Development,Research Concept"
333,Improper Handling of Insufficient Entropy in TRNG,Variant,Draft,True random number generators (TRNG) generally have a limited source of entropy and therefore can fail or block.,The rate at which true random numbers can be generated is limited. It is important that one uses them only when they are needed for security.,NATURE:ChildOf:CWE ID:331 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:755 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,"SCOPE - Availability IMPACT - DoS -  Crash, Exit, or Restart NOTE - A program may crash or block if it runs out of random numbers.",,"PHASE - Implementation DESCRIPTION - Rather than failing on a lack of random numbers, it is often preferable to wait for more numbers to be created.",,,,TAXONOMY NAME - CLASP:ENTRY NAME:Failure of TRNG TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:MSC02-J:ENTRY NAME:Generate strong random numbers::,"TYPE - Maintenance NOTE - As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, randomness is used heavily. However, within cryptography, entropy is distinct, typically i",Research Concept
783,Operator Precedence Logic Error,Base,Draft,The product uses an expression in which operator precedence causes incorrect logic to be used.,"While often just a bug, operator precedence logic errors can have serious consequences if they are used in security-critical code, such as making an authentication decision.",NATURE:ChildOf:CWE ID:670 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Rarely LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Rarely LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Rarely,,,"PHASE - Implementation: NOTE - Logic errors related to operator precedence may cause problems even during normal operation, so they are probably discovered quickly during the testing phase. If testing is incomplete or there is a strong reliance on manual","SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Varies by Context IMPACT - Unexpected State NOTE - The consequences will vary based on the context surrounding the incorrect precedence. In a security decision, integrity or confident",,"PHASE - Implementation DESCRIPTION - Regularly wrap sub-expressions in parentheses, especially in security-critical code.",REFERENCE - CVE-2008-2516 DESCRIPTION - Authentication module allows authentication bypass because it uses (x = call(args) == SUCCESS) instead of ((x = call(args)) == SUCCESS). LINK - https://www.cve.org/CVERecord?id=CVE-2008-2516  REFERENCE - CVE-2008-05,,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:EXP00-C:ENTRY NAME:Use parentheses for precedence of operation:MAPPING FIT:Exact TAXONOMY NAME - SEI CERT Perl Coding Standard:ENTRY ID:EXP04-PL:ENTRY NAME:Do not mix the early-precedence logical operators wit,,"Software Development,Research Concept"
703,Improper Check or Handling of Exceptional Conditions,Pillar,Incomplete,The product does not properly anticipate or handle exceptional conditions that rarely occur during normal operation of the product.,,#VALUE!,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Not Technology-Specific TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. PHASE - Operation,"SCOPE - Confidentiality SCOPE - Availability SCOPE - Integrity IMPACT - Read Application Data IMPACT - DoS -  Crash, Exit, or Restart IMPACT - Unexpected State","METHOD - Dynamic Analysis with Manual Results Interpretation DESCRIPTION - According to SOAR, the following detection techniques may be useful  Highly cost effective  Fault Injection - source code Fault Injection - binary Cost effective for partial covera",,"REFERENCE - [REF-1374] DESCRIPTION - Chain: JavaScript-based cryptocurrency library can fall back to the insecure Math.random() function instead of reporting a failure (CWE-392), thus reducing the entropy (CWE-332) and leading to generation of non-unique",,,TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:ERR06-J:ENTRY NAME:Do not throw undeclared checked exceptions::,"TYPE - Relationship NOTE - This is a high-level class that might have some overlap with other classes. It could be argued that even normal weaknesses such as buffer overflows involve unusual or exceptional conditions. In that sense, this might be an inher",Research Concept
507,Trojan Horse,Base,Incomplete,"The product appears to contain benign or useful functionality, but it also contains code that is hidden from normal operation that violates the intended security policy of the user or the system administrator.",,NATURE:ChildOf:CWE ID:506 VIEW ID:1000 ORDINAL:Primary,,,,,PHASE - Implementation PHASE - Operation,SCOPE - Confidentiality SCOPE - Integrity SCOPE - Availability IMPACT - Execute Unauthorized Code or Commands,,PHASE - Operation DESCRIPTION - Most antivirus software scans for Trojan Horses.  PHASE - Installation DESCRIPTION - Verify the integrity of the product that is being installed.,,,,TAXONOMY NAME - Landwehr:ENTRY NAME:Trojan Horse::,TYPE - Other NOTE - Potentially malicious dynamic code compiled at runtime can conceal any number of attacks that will not appear in the baseline. The use of dynamically compiled code could also allow the injection of attacks on post-deployed applications,Research Concept
647,Use of Non-Canonical URL Paths for Authorization Decisions,Variant,Incomplete,The product defines policy namespaces and makes authorization decisions based on the assumption that a URL is canonical. This can allow a non-canonical URL to bypass the authorization.,"If an application defines policy namespaces and makes authorization decisions based on the URL, but it does not require or convert to a canonical URL before making the authorization decision, then it opens the application to attack. For example, if the ap",NATURE:ChildOf:CWE ID:863 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY NAME:Web Server TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic. PHASE - Operation,SCOPE - Access Control IMPACT - Bypass Protection Mechanism NOTE - An attacker may be able to bypass the authorization mechanism to gain access to the otherwise-protected URL.  SCOPE - Confidentiality IMPACT - Read Files or Directories NOTE - If a non-can,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design DESCRIPTION - Make access control policy based on path information in canonical form. Use very restrictive regular expressions to validate that the path is in the expected form.  PHASE - Architecture and Design DESCRIPTION ,,,,TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:IDS02-J:ENTRY NAME:Canonicalize path names before validating them::,,Research Concept
492,Use of Inner Class Containing Sensitive Data,Variant,Draft,Inner classes are translated into classes that are accessible at package scope and may expose code that the programmer intended to keep private to attackers.,"Inner classes quietly introduce several security concerns because of the way they are translated into Java bytecode. In Java source code, it appears that an inner class can be declared to be accessible only by the enclosing class, but Java bytecode has no",NATURE:ChildOf:CWE ID:668 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Confidentiality IMPACT - Read Application Data NOTE - Inner Classes data confidentiality aspects can often be overcome.,"METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Implementation DESCRIPTION - Using sealed classes protects object-oriented encapsulation paradigms and therefore protects code from being extended in unforeseen ways.  PHASE - Implementation DESCRIPTION - Inner Classes do not provide security. War,,,,TAXONOMY NAME - 7 Pernicious Kingdoms:ENTRY NAME:Mobile Code: Use of Inner Class TAXONOMY NAME - CLASP:ENTRY NAME:Publicizing of private data when using inner classes TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:OBJ08-J:,"TYPE - Other NOTE - Mobile code, in this case a Java Applet, is code that is transmitted across a network and executed on a remote machine. Because mobile code developers have little if any control of the environment in which their code will execute, spec",Research Concept
532,Insertion of Sensitive Information into Log File,Base,Incomplete,Information written to log files can be of a sensitive nature and give valuable guidance to an attacker or expose sensitive user information.,"While logging all information may be helpful during development stages, it is important that logging levels be set appropriately before a product ships so that sensitive user data and system information are not accidentally exposed to potential attackers.",NATURE:ChildOf:CWE ID:538 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:200 VIEW ID:1003 ORDINAL:Primary,,,,,PHASE - Architecture and Design: NOTE - COMMISSION: This weakness refers to an incorrect design related to an architectural security tactic. PHASE - Implementation PHASE - Operation,"SCOPE - Confidentiality IMPACT - Read Application Data NOTE - Logging sensitive user data often provides attackers with an additional, less-protected path to acquiring the information.","METHOD - Automated Static Analysis DESCRIPTION - Automated static analysis, commonly referred to as Static Application Security Testing (SAST), can find some instances of this weakness by analyzing source code (or binary/compiled code) without having to e",PHASE - Architecture and Design Implementation DESCRIPTION - Consider seriously the sensitivity of the information written into log files. Do not write secrets into the log files.  PHASE - Distribution DESCRIPTION - Remove debug log files before deploying,REFERENCE - CVE-2017-9615 DESCRIPTION - verbose logging stores admin credentials in a world-readable log file LINK - https://www.cve.org/CVERecord?id=CVE-2017-9615  REFERENCE - CVE-2018-1999036 DESCRIPTION - SSH password for private key stored in build lo,,,TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:FIO13-J:ENTRY NAME:Do not log sensitive information outside a trust boundary TAXONOMY NAME - Software Fault Patterns:ENTRY ID:SFP23:ENTRY NAME:Exposed Data::,,Research Concept
941,Incorrectly Specified Destination in a Communication Channel,Base,Incomplete,"The product creates a communication channel to initiate an outgoing request to an actor, but it does not correctly specify the intended destination for that actor.",Attackers at the destination may be able to spoof trusted servers to steal data or cause a denial of service. There are at least two distinct weaknesses that can cause the product to communicate with an unintended destination: If the product allows an att,NATURE:ChildOf:CWE ID:923 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:406 VIEW ID:1000,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined TECHNOLOGY CLASS:Mobile TECHNOLOGY PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation: NOTE - REALIZATION: This weakness is caused during implementation of an architectural security tactic.,#VALUE!,,,REFERENCE - CVE-2013-5211 DESCRIPTION - composite: NTP feature generates large responses (high amplification factor) with spoofed UDP source addresses. LINK - https://www.cve.org/CVERecord?id=CVE-2013-5211  REFERENCE - CVE-1999-0513 DESCRIPTION - Classic,,,,,"Software Development,Research Concept"
498,Cloneable Class Containing Sensitive Information,Variant,Draft,"The code contains a class with sensitive data, but the class is cloneable. The data can then be accessed by cloning the class.","Cloneable classes are effectively open classes, since data cannot be hidden in them. Classes that do not explicitly deny cloning can be cloned by any other class without running the constructor.",NATURE:ChildOf:CWE ID:668 VIEW ID:1000 ORDINAL:Primary NATURE:CanPrecede:CWE ID:200 VIEW ID:1000,,LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:Java LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C# LANGUAGE PREVALENCE:Undetermined,,,PHASE - Implementation,SCOPE - Access Control IMPACT - Bypass Protection Mechanism NOTE - A class that can be cloned can be produced without executing the constructor. This is dangerous since the constructor may perform security-related checks. By allowing the object to be clon,,"PHASE - Implementation DESCRIPTION - If you do make your classes clonable, ensure that your clone method is final and throw super.clone().",,,,TAXONOMY NAME - CLASP:ENTRY NAME:Information leak through class cloning TAXONOMY NAME - The CERT Oracle Secure Coding Standard for Java (2011):ENTRY ID:OBJ07-J:ENTRY NAME:Sensitive classes must not let themselves be copied TAXONOMY NAME - Software Fault P,,Research Concept
843,Access of Resource Using Incompatible Type ('Type Confusion'),Base,Incomplete,"The product allocates or initializes a resource such as a pointer, object, or variable using one type, but it later accesses that resource using a type that is incompatible with the original type.","When the product accesses the resource using an incompatible type, this could trigger logical errors because the resource does not have expected properties. In languages without memory safety, such as C and C++, type confusion can lead to out-of-bounds me",NATURE:ChildOf:CWE ID:704 VIEW ID:1000 ORDINAL:Primary NATURE:ChildOf:CWE ID:704 VIEW ID:1003 ORDINAL:Primary NATURE:CanPrecede:CWE ID:119 VIEW ID:1000,,LANGUAGE NAME:C LANGUAGE PREVALENCE:Undetermined LANGUAGE NAME:C++ LANGUAGE PREVALENCE:Undetermined,,TERM - Object Type Confusion::,PHASE - Implementation,"SCOPE - Availability SCOPE - Integrity SCOPE - Confidentiality IMPACT - Read Memory IMPACT - Modify Memory IMPACT - Execute Unauthorized Code or Commands IMPACT - DoS -  Crash, Exit, or Restart NOTE - When a memory buffer is accessed using the wrong type,",,,"REFERENCE - CVE-2010-4577 DESCRIPTION - Type confusion in CSS sequence leads to out-of-bounds read. LINK - https://www.cve.org/CVERecord?id=CVE-2010-4577  REFERENCE - CVE-2011-0611 DESCRIPTION - Size inconsistency allows code execution, first discovered w",,,TAXONOMY NAME - CERT C Secure Coding:ENTRY ID:EXP39-C:ENTRY NAME:Do not access a variable through a pointer of an incompatible type:MAPPING FIT:Exact::,TYPE - Applicable Platform NOTE - This weakness is possible in any  TYPE-unsafe programming language.  TYPE - Research Gap NOTE -  TYPE confusion weaknesses have received some attention by applied researchers and major software vendors for C and C++ code.,"Software Development,Research Concept"
343,Predictable Value Range from Previous Values,Base,Draft,"The product's random number generator produces a series of values which, when observed, can be used to infer a relatively small range of possibilities for the next value that could be generated.","The output of a random number generator should not be predictable based on observations of previous values. In some cases, an attacker cannot predict the exact value that will be produced next, but can narrow down the possibilities significantly. This red",NATURE:ChildOf:CWE ID:340 VIEW ID:1000 ORDINAL:Primary,,LANGUAGE CLASS:Not Language-Specific LANGUAGE PREVALENCE:Undetermined,,,PHASE - Architecture and Design PHASE - Implementation,SCOPE - Other IMPACT - Varies by Context,,PHASE - DESCRIPTION - Increase the entropy used to seed a PRNG.  PHASE - Architecture and Design Requirements STRATEGY - Libraries or Frameworks DESCRIPTION - Use products or modules that conform to FIPS 140-2 [REF-267] to avoid obvious entropy problems. ,,,,TAXONOMY NAME - PLOVER:ENTRY NAME:Predictable Value Range from Previous Values::,"TYPE - Maintenance NOTE - As of CWE 4.5, terminology related to randomness, entropy, and predictability can vary widely. Within the developer and other communities, randomness is used heavily. However, within cryptography, entropy is distinct, typically i","Software Development,Research Concept"
1113,Inappropriate Comment Style,Base,Incomplete,The source code uses comment styles or formats that are inconsistent or do not follow expected standards for the product.,"This issue makes it more difficult to maintain the product due to insufficient legibility, which indirectly affects security by making it more difficult or time-consuming to find and/or fix vulnerabilities. It also might make it easier to introduce vulner",NATURE:ChildOf:CWE ID:1078 VIEW ID:1000 ORDINAL:Primary,: ORDINALITY:Indirect::,,,,#VALUE!,#VALUE!,,,,,,,,"Software Development,Research Concept"